

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 07 18:22:13 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1509 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011D                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  018E                     	;# 
   135  0191                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0194                     	;# 
   141  0195                     	;# 
   142  0196                     	;# 
   143  0197                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  0394                     	;# 
   173  0395                     	;# 
   174  0396                     	;# 
   175  0498                     	;# 
   176  0498                     	;# 
   177  0499                     	;# 
   178  049A                     	;# 
   179  049B                     	;# 
   180  049B                     	;# 
   181  049C                     	;# 
   182  049D                     	;# 
   183  049E                     	;# 
   184  049F                     	;# 
   185  0611                     	;# 
   186  0612                     	;# 
   187  0613                     	;# 
   188  0613                     	;# 
   189  0614                     	;# 
   190  0615                     	;# 
   191  0616                     	;# 
   192  0616                     	;# 
   193  0617                     	;# 
   194  0618                     	;# 
   195  0619                     	;# 
   196  0619                     	;# 
   197  061A                     	;# 
   198  061B                     	;# 
   199  061C                     	;# 
   200  061C                     	;# 
   201  0691                     	;# 
   202  0692                     	;# 
   203  0693                     	;# 
   204  0694                     	;# 
   205  0695                     	;# 
   206  0F0F                     	;# 
   207  0F10                     	;# 
   208  0F11                     	;# 
   209  0F12                     	;# 
   210  0F13                     	;# 
   211  0F14                     	;# 
   212  0F15                     	;# 
   213  0F16                     	;# 
   214  0F17                     	;# 
   215  0F18                     	;# 
   216  0F19                     	;# 
   217  0F1A                     	;# 
   218  0F1B                     	;# 
   219  0F1C                     	;# 
   220  0F1D                     	;# 
   221  0F1E                     	;# 
   222  0F1F                     	;# 
   223  0F20                     	;# 
   224  0F21                     	;# 
   225  0F22                     	;# 
   226  0F23                     	;# 
   227  0F24                     	;# 
   228  0F25                     	;# 
   229  0F26                     	;# 
   230  0F27                     	;# 
   231  0F28                     	;# 
   232  0F29                     	;# 
   233  0F2A                     	;# 
   234  0F2B                     	;# 
   235  0F2C                     	;# 
   236  0F2D                     	;# 
   237  0F2E                     	;# 
   238  0F2F                     	;# 
   239  0F8C                     	;# 
   240  0F8D                     	;# 
   241  0F91                     	;# 
   242  0F95                     	;# 
   243  0F96                     	;# 
   244  0F97                     	;# 
   245  0F9C                     	;# 
   246  0F9D                     	;# 
   247  0F9E                     	;# 
   248  0FE3                     	;# 
   249  0FE4                     	;# 
   250  0FE5                     	;# 
   251  0FE6                     	;# 
   252  0FE7                     	;# 
   253  0FE8                     	;# 
   254  0FE9                     	;# 
   255  0FEA                     	;# 
   256  0FEB                     	;# 
   257  0FED                     	;# 
   258  0FEE                     	;# 
   259  0FEF                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  0011                     	;# 
   276  0012                     	;# 
   277  0013                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0016                     	;# 
   281  0017                     	;# 
   282  0018                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001B                     	;# 
   286  001C                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  0111                     	;# 
   308  0112                     	;# 
   309  0113                     	;# 
   310  0114                     	;# 
   311  0115                     	;# 
   312  0116                     	;# 
   313  0117                     	;# 
   314  0118                     	;# 
   315  0119                     	;# 
   316  011D                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  018E                     	;# 
   320  0191                     	;# 
   321  0191                     	;# 
   322  0192                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0194                     	;# 
   326  0195                     	;# 
   327  0196                     	;# 
   328  0197                     	;# 
   329  0199                     	;# 
   330  019A                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019C                     	;# 
   334  019D                     	;# 
   335  019E                     	;# 
   336  019F                     	;# 
   337  020C                     	;# 
   338  020D                     	;# 
   339  0211                     	;# 
   340  0211                     	;# 
   341  0212                     	;# 
   342  0212                     	;# 
   343  0213                     	;# 
   344  0213                     	;# 
   345  0214                     	;# 
   346  0214                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0216                     	;# 
   351  0216                     	;# 
   352  0217                     	;# 
   353  0217                     	;# 
   354  0391                     	;# 
   355  0392                     	;# 
   356  0393                     	;# 
   357  0394                     	;# 
   358  0395                     	;# 
   359  0396                     	;# 
   360  0498                     	;# 
   361  0498                     	;# 
   362  0499                     	;# 
   363  049A                     	;# 
   364  049B                     	;# 
   365  049B                     	;# 
   366  049C                     	;# 
   367  049D                     	;# 
   368  049E                     	;# 
   369  049F                     	;# 
   370  0611                     	;# 
   371  0612                     	;# 
   372  0613                     	;# 
   373  0613                     	;# 
   374  0614                     	;# 
   375  0615                     	;# 
   376  0616                     	;# 
   377  0616                     	;# 
   378  0617                     	;# 
   379  0618                     	;# 
   380  0619                     	;# 
   381  0619                     	;# 
   382  061A                     	;# 
   383  061B                     	;# 
   384  061C                     	;# 
   385  061C                     	;# 
   386  0691                     	;# 
   387  0692                     	;# 
   388  0693                     	;# 
   389  0694                     	;# 
   390  0695                     	;# 
   391  0F0F                     	;# 
   392  0F10                     	;# 
   393  0F11                     	;# 
   394  0F12                     	;# 
   395  0F13                     	;# 
   396  0F14                     	;# 
   397  0F15                     	;# 
   398  0F16                     	;# 
   399  0F17                     	;# 
   400  0F18                     	;# 
   401  0F19                     	;# 
   402  0F1A                     	;# 
   403  0F1B                     	;# 
   404  0F1C                     	;# 
   405  0F1D                     	;# 
   406  0F1E                     	;# 
   407  0F1F                     	;# 
   408  0F20                     	;# 
   409  0F21                     	;# 
   410  0F22                     	;# 
   411  0F23                     	;# 
   412  0F24                     	;# 
   413  0F25                     	;# 
   414  0F26                     	;# 
   415  0F27                     	;# 
   416  0F28                     	;# 
   417  0F29                     	;# 
   418  0F2A                     	;# 
   419  0F2B                     	;# 
   420  0F2C                     	;# 
   421  0F2D                     	;# 
   422  0F2E                     	;# 
   423  0F2F                     	;# 
   424  0F8C                     	;# 
   425  0F8D                     	;# 
   426  0F91                     	;# 
   427  0F95                     	;# 
   428  0F96                     	;# 
   429  0F97                     	;# 
   430  0F9C                     	;# 
   431  0F9D                     	;# 
   432  0F9E                     	;# 
   433  0FE3                     	;# 
   434  0FE4                     	;# 
   435  0FE5                     	;# 
   436  0FE6                     	;# 
   437  0FE7                     	;# 
   438  0FE8                     	;# 
   439  0FE9                     	;# 
   440  0FEA                     	;# 
   441  0FEB                     	;# 
   442  0FED                     	;# 
   443  0FEE                     	;# 
   444  0FEF                     	;# 
   445  008E                     _TRISC	set	142
   446  008D                     _TRISB	set	141
   447  010E                     _LATCbits	set	270
   448  010D                     _LATBbits	set	269
   449  010D                     _LATB	set	269
   450  010E                     _LATC	set	270
   451  018D                     _ANSELB	set	397
   452  018E                     _ANSELC	set	398
   453                           
   454                           	psect	stringtext1
   455  1000                     __pstringtext1:
   456  1000                     STR_1:
   457  1000  344E               	retlw	78	;'N'
   458  1001  3447               	retlw	71	;'G'
   459  1002  3455               	retlw	85	;'U'
   460  1003  3459               	retlw	89	;'Y'
   461  1004  3445               	retlw	69	;'E'
   462  1005  344E               	retlw	78	;'N'
   463  1006  3420               	retlw	32	;' '
   464  1007  3448               	retlw	72	;'H'
   465  1008  3441               	retlw	65	;'A'
   466  1009  3449               	retlw	73	;'I'
   467  100A  3420               	retlw	32	;' '
   468  100B  3444               	retlw	68	;'D'
   469  100C  3441               	retlw	65	;'A'
   470  100D  344E               	retlw	78	;'N'
   471  100E  3447               	retlw	71	;'G'
   472  100F  3400               	retlw	0
   473                           
   474                           	psect	stringtext2
   475  1010                     __pstringtext2:
   476  1010                     STR_3:
   477  1010  3425               	retlw	37	;'%'
   478  1011  3464               	retlw	100	;'d'
   479  1012  3425               	retlw	37	;'%'
   480  1013  3464               	retlw	100	;'d'
   481  1014  343A               	retlw	58	;':'
   482  1015  3425               	retlw	37	;'%'
   483  1016  3464               	retlw	100	;'d'
   484  1017  3425               	retlw	37	;'%'
   485  1018  3464               	retlw	100	;'d'
   486  1019  343A               	retlw	58	;':'
   487  101A  3425               	retlw	37	;'%'
   488  101B  3464               	retlw	100	;'d'
   489  101C  3425               	retlw	37	;'%'
   490  101D  3464               	retlw	100	;'d'
   491  101E  3400               	retlw	0
   492                           
   493                           	psect	stringtext3
   494  101F                     __pstringtext3:
   495  101F                     STR_2:
   496  101F  3430               	retlw	48	;'0'
   497  1020  3430               	retlw	48	;'0'
   498  1021  343A               	retlw	58	;':'
   499  1022  3430               	retlw	48	;'0'
   500  1023  3430               	retlw	48	;'0'
   501  1024  343A               	retlw	58	;':'
   502  1025  3430               	retlw	48	;'0'
   503  1026  3430               	retlw	48	;'0'
   504  1027  3400               	retlw	0
   505                           
   506                           	psect	stringtext4
   507  0000                     __pstringtext4:
   508                           
   509                           	psect	cinit
   510  07ED                     start_initialization:	
   511                           ; #config settings
   512                           
   513  07ED                     __initialization:
   514                           
   515                           ; Clear objects allocated to BANK0
   516  07ED  3066               	movlw	low __pbssBANK0
   517  07EE  0084               	movwf	4
   518  07EF  3000               	movlw	high __pbssBANK0
   519  07F0  0085               	movwf	5
   520  07F1  3008               	movlw	8
   521  07F2  3180  2016  3187   	fcall	clear_ram0
   522                           
   523                           ; Clear objects allocated to BANK2
   524  07F5  3020               	movlw	low __pbssBANK2
   525  07F6  0084               	movwf	4
   526  07F7  3001               	movlw	high __pbssBANK2
   527  07F8  0085               	movwf	5
   528  07F9  3020               	movlw	32
   529  07FA  3180  2016  3187   	fcall	clear_ram0
   530  07FD                     end_of_initialization:	
   531                           ;End of C runtime variable initialization code
   532                           
   533  07FD                     __end_of__initialization:
   534  07FD  0020               	movlb	0
   535  07FE  3185  2D85         	ljmp	_main	;jump to C main() function
   536                           
   537                           	psect	bssBANK0
   538  0066                     __pbssBANK0:
   539  0066                     _nout:
   540  0066                     	ds	2
   541  0068                     _width:
   542  0068                     	ds	2
   543  006A                     _prec:
   544  006A                     	ds	2
   545  006C                     _flags:
   546  006C                     	ds	2
   547                           
   548                           	psect	bssBANK2
   549  0120                     __pbssBANK2:
   550  0120                     _dbuf:
   551  0120                     	ds	32
   552                           
   553                           	psect	clrtext
   554  0016                     clear_ram0:	
   555                           ;	Called with FSR0 containing the base address, and
   556                           ;	WREG with the size to clear
   557                           
   558  0016  0064               	clrwdt	;clear the watchdog before getting into this loop
   559  0017                     clrloop0:
   560  0017  0180               	clrf	0	;clear RAM location pointed to by FSR
   561  0018  3101               	addfsr 0,1
   562  0019  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   563  001A  2817               	goto	clrloop0	;have we reached the end yet?
   564  001B  3400               	retlw	0	;all done for this memory range, return
   565                           
   566                           	psect	cstackBANK1
   567  00A0                     __pcstackBANK1:
   568  00A0                     ?_sprintf:
   569  00A0                     sprintf@fmt:	
   570                           ; 2 bytes @ 0x0
   571                           
   572                           
   573                           ; 2 bytes @ 0x0
   574  00A0                     	ds	14
   575  00AE                     sprintf@ap:
   576                           
   577                           ; 1 bytes @ 0xE
   578  00AE                     	ds	1
   579  00AF                     sprintf@s:
   580                           
   581                           ; 1 bytes @ 0xF
   582  00AF                     	ds	1
   583  00B0                     sprintf@f:
   584                           
   585                           ; 10 bytes @ 0x10
   586  00B0                     	ds	10
   587  00BA                     ??_main:
   588                           
   589                           ; 1 bytes @ 0x1A
   590  00BA                     	ds	12
   591  00C6                     main@time_string:
   592                           
   593                           ; 9 bytes @ 0x26
   594  00C6                     	ds	9
   595  00CF                     main@hour_digit1:
   596                           
   597                           ; 1 bytes @ 0x2F
   598  00CF                     	ds	1
   599  00D0                     main@hour_digit2:
   600                           
   601                           ; 1 bytes @ 0x30
   602  00D0                     	ds	1
   603  00D1                     main@minute_digit1:
   604                           
   605                           ; 1 bytes @ 0x31
   606  00D1                     	ds	1
   607  00D2                     main@minute_digit2:
   608                           
   609                           ; 1 bytes @ 0x32
   610  00D2                     	ds	1
   611  00D3                     main@second_digit1:
   612                           
   613                           ; 1 bytes @ 0x33
   614  00D3                     	ds	1
   615  00D4                     main@second_digit2:
   616                           
   617                           ; 1 bytes @ 0x34
   618  00D4                     	ds	1
   619  00D5                     main@hour_counter:
   620                           
   621                           ; 1 bytes @ 0x35
   622  00D5                     	ds	1
   623  00D6                     main@minute_counter:
   624                           
   625                           ; 1 bytes @ 0x36
   626  00D6                     	ds	1
   627  00D7                     main@second_counter:
   628                           
   629                           ; 1 bytes @ 0x37
   630  00D7                     	ds	1
   631                           
   632                           	psect	cstackCOMMON
   633  0070                     __pcstackCOMMON:
   634  0070                     ?_LCDPutCmd:
   635  0070                     ?_putch:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ??_putch:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_LCD_Initialize:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_LCDWriteNibble:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_LCDPutChar:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_main:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ??___aodiv:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??___aomod:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_fputc:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_strlen:	
   663                           ; 2 bytes @ 0x0
   664                           
   665  0070                     ?___awdiv:	
   666                           ; 2 bytes @ 0x0
   667                           
   668  0070                     ?___awmod:	
   669                           ; 2 bytes @ 0x0
   670                           
   671  0070                     LCDWriteNibble@rs:	
   672                           ; 2 bytes @ 0x0
   673                           
   674  0070                     putch@c:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ___awdiv@divisor:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ___awmod@divisor:	
   681                           ; 2 bytes @ 0x0
   682                           
   683  0070                     fputc@c:	
   684                           ; 2 bytes @ 0x0
   685                           
   686                           
   687                           ; 2 bytes @ 0x0
   688  0070                     	ds	1
   689  0071                     ??_LCDWriteNibble:
   690  0071                     ___aodiv@counter:	
   691                           ; 1 bytes @ 0x1
   692                           
   693  0071                     ___aomod@counter:	
   694                           ; 1 bytes @ 0x1
   695                           
   696                           
   697                           ; 1 bytes @ 0x1
   698  0071                     	ds	1
   699  0072                     ??_strlen:
   700  0072                     LCDWriteNibble@ch:	
   701                           ; 1 bytes @ 0x2
   702                           
   703  0072                     ___aodiv@sign:	
   704                           ; 1 bytes @ 0x2
   705                           
   706  0072                     ___aomod@sign:	
   707                           ; 1 bytes @ 0x2
   708                           
   709  0072                     fputc@fp:	
   710                           ; 1 bytes @ 0x2
   711                           
   712  0072                     ___awdiv@dividend:	
   713                           ; 1 bytes @ 0x2
   714                           
   715  0072                     ___awmod@dividend:	
   716                           ; 2 bytes @ 0x2
   717                           
   718                           
   719                           ; 2 bytes @ 0x2
   720  0072                     	ds	1
   721  0073                     ??_LCDPutCmd:
   722  0073                     ??_fputc:	
   723                           ; 1 bytes @ 0x3
   724                           
   725  0073                     ??_LCDPutChar:	
   726                           ; 1 bytes @ 0x3
   727                           
   728  0073                     ?_abs:	
   729                           ; 1 bytes @ 0x3
   730                           
   731  0073                     strlen@a:	
   732                           ; 2 bytes @ 0x3
   733                           
   734  0073                     abs@a:	
   735                           ; 1 bytes @ 0x3
   736                           
   737  0073                     ___aodiv@quotient:	
   738                           ; 2 bytes @ 0x3
   739                           
   740                           
   741                           ; 8 bytes @ 0x3
   742  0073                     	ds	1
   743  0074                     ??___awdiv:
   744  0074                     ??___awmod:	
   745                           ; 1 bytes @ 0x4
   746                           
   747  0074                     strlen@s:	
   748                           ; 1 bytes @ 0x4
   749                           
   750                           
   751                           ; 1 bytes @ 0x4
   752  0074                     	ds	1
   753  0075                     ??_abs:
   754  0075                     LCDPutChar@ch:	
   755                           ; 1 bytes @ 0x5
   756                           
   757  0075                     LCDPutCmd@ch:	
   758                           ; 1 bytes @ 0x5
   759                           
   760  0075                     ___awdiv@counter:	
   761                           ; 1 bytes @ 0x5
   762                           
   763  0075                     ___awmod@counter:	
   764                           ; 1 bytes @ 0x5
   765                           
   766                           
   767                           ; 1 bytes @ 0x5
   768  0075                     	ds	1
   769  0076                     ??_LCD_Initialize:
   770  0076                     ?_LCDGoto:	
   771                           ; 1 bytes @ 0x6
   772                           
   773  0076                     LCDGoto@ln:	
   774                           ; 1 bytes @ 0x6
   775                           
   776  0076                     ___awdiv@sign:	
   777                           ; 1 bytes @ 0x6
   778                           
   779  0076                     ___awmod@sign:	
   780                           ; 1 bytes @ 0x6
   781                           
   782                           
   783                           ; 1 bytes @ 0x6
   784  0076                     	ds	1
   785  0077                     ??_LCDGoto:
   786  0077                     _LCDGoto$104:	
   787                           ; 1 bytes @ 0x7
   788                           
   789  0077                     ___awdiv@quotient:	
   790                           ; 2 bytes @ 0x7
   791                           
   792                           
   793                           ; 2 bytes @ 0x7
   794  0077                     	ds	1
   795  0078                     ?_fputs:
   796  0078                     fputs@fp:	
   797                           ; 2 bytes @ 0x8
   798                           
   799                           
   800                           ; 1 bytes @ 0x8
   801  0078                     	ds	1
   802  0079                     ??_fputs:
   803  0079                     LCDGoto@pos:	
   804                           ; 1 bytes @ 0x9
   805                           
   806                           
   807                           ; 1 bytes @ 0x9
   808  0079                     	ds	1
   809  007A                     ?_LCDPutStr2:
   810  007A                     LCDPutStr2@str:	
   811                           ; 1 bytes @ 0xA
   812                           
   813                           
   814                           ; 2 bytes @ 0xA
   815  007A                     	ds	2
   816  007C                     ??_pad:
   817  007C                     LCDPutStr2@_pos:	
   818                           ; 1 bytes @ 0xC
   819                           
   820                           
   821                           ; 1 bytes @ 0xC
   822  007C                     	ds	1
   823  007D                     ??_sprintf:
   824  007D                     LCDPutStr2@_line:	
   825                           ; 1 bytes @ 0xD
   826                           
   827                           
   828                           ; 1 bytes @ 0xD
   829  007D                     	ds	1
   830                           
   831                           	psect	cstackBANK0
   832  0020                     __pcstackBANK0:
   833  0020                     ??_LCDPutStr2:
   834  0020                     ?___aodiv:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0020                     ?___aomod:	
   838                           ; 8 bytes @ 0x0
   839                           
   840  0020                     fputs@c:	
   841                           ; 8 bytes @ 0x0
   842                           
   843  0020                     ___aodiv@divisor:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0020                     ___aomod@divisor:	
   847                           ; 8 bytes @ 0x0
   848                           
   849                           
   850                           ; 8 bytes @ 0x0
   851  0020                     	ds	1
   852  0021                     fputs@i:
   853                           
   854                           ; 2 bytes @ 0x1
   855  0021                     	ds	2
   856  0023                     LCDPutStr2@i:
   857  0023                     fputs@s:	
   858                           ; 1 bytes @ 0x3
   859                           
   860                           
   861                           ; 1 bytes @ 0x3
   862  0023                     	ds	1
   863  0024                     ?_pad:
   864  0024                     pad@buf:	
   865                           ; 2 bytes @ 0x4
   866                           
   867                           
   868                           ; 1 bytes @ 0x4
   869  0024                     	ds	1
   870  0025                     pad@p:
   871                           
   872                           ; 2 bytes @ 0x5
   873  0025                     	ds	2
   874  0027                     pad@i:
   875                           
   876                           ; 2 bytes @ 0x7
   877  0027                     	ds	1
   878  0028                     ___aodiv@dividend:
   879  0028                     ___aomod@dividend:	
   880                           ; 8 bytes @ 0x8
   881                           
   882                           
   883                           ; 8 bytes @ 0x8
   884  0028                     	ds	1
   885  0029                     pad@w:
   886                           
   887                           ; 2 bytes @ 0x9
   888  0029                     	ds	2
   889  002B                     pad@fp:
   890                           
   891                           ; 1 bytes @ 0xB
   892  002B                     	ds	5
   893  0030                     ?_dtoa:
   894  0030                     dtoa@d:	
   895                           ; 2 bytes @ 0x10
   896                           
   897                           
   898                           ; 8 bytes @ 0x10
   899  0030                     	ds	8
   900  0038                     ??_dtoa:
   901                           
   902                           ; 1 bytes @ 0x18
   903  0038                     	ds	3
   904  003B                     _dtoa$535:
   905                           
   906                           ; 2 bytes @ 0x1B
   907  003B                     	ds	2
   908  003D                     dtoa@fp:
   909                           
   910                           ; 1 bytes @ 0x1D
   911  003D                     	ds	1
   912  003E                     dtoa@p:
   913                           
   914                           ; 2 bytes @ 0x1E
   915  003E                     	ds	2
   916  0040                     dtoa@w:
   917                           
   918                           ; 2 bytes @ 0x20
   919  0040                     	ds	2
   920  0042                     dtoa@s:
   921                           
   922                           ; 2 bytes @ 0x22
   923  0042                     	ds	2
   924  0044                     dtoa@n:
   925                           
   926                           ; 8 bytes @ 0x24
   927  0044                     	ds	8
   928  004C                     dtoa@i:
   929                           
   930                           ; 2 bytes @ 0x2C
   931  004C                     	ds	2
   932  004E                     ?_vfpfcnvrt:
   933  004E                     vfpfcnvrt@fmt:	
   934                           ; 2 bytes @ 0x2E
   935                           
   936                           
   937                           ; 1 bytes @ 0x2E
   938  004E                     	ds	1
   939  004F                     vfpfcnvrt@ap:
   940                           
   941                           ; 1 bytes @ 0x2F
   942  004F                     	ds	1
   943  0050                     ??_vfpfcnvrt:
   944                           
   945                           ; 1 bytes @ 0x30
   946  0050                     	ds	5
   947  0055                     vfpfcnvrt@ll:
   948                           
   949                           ; 8 bytes @ 0x35
   950  0055                     	ds	8
   951  005D                     vfpfcnvrt@fp:
   952                           
   953                           ; 1 bytes @ 0x3D
   954  005D                     	ds	1
   955  005E                     ?_vfprintf:
   956  005E                     vfprintf@fmt:	
   957                           ; 2 bytes @ 0x3E
   958                           
   959                           
   960                           ; 2 bytes @ 0x3E
   961  005E                     	ds	2
   962  0060                     vfprintf@ap:
   963                           
   964                           ; 1 bytes @ 0x40
   965  0060                     	ds	1
   966  0061                     ??_vfprintf:
   967                           
   968                           ; 1 bytes @ 0x41
   969  0061                     	ds	2
   970  0063                     vfprintf@fp:
   971                           
   972                           ; 1 bytes @ 0x43
   973  0063                     	ds	1
   974  0064                     vfprintf@cfmt:
   975                           
   976                           ; 2 bytes @ 0x44
   977  0064                     	ds	2
   978                           
   979                           	psect	maintext
   980  0585                     __pmaintext:	
   981 ;;
   982 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   983 ;;
   984 ;; *************** function _main *****************
   985 ;; Defined at:
   986 ;;		line 13 in file "ex_6-2.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  time_string     9   38[BANK1 ] unsigned char [9]
   991 ;;  second_count    1   55[BANK1 ] unsigned char 
   992 ;;  minute_count    1   54[BANK1 ] unsigned char 
   993 ;;  hour_counter    1   53[BANK1 ] unsigned char 
   994 ;;  second_digit    1   52[BANK1 ] unsigned char 
   995 ;;  second_digit    1   51[BANK1 ] unsigned char 
   996 ;;  minute_digit    1   50[BANK1 ] unsigned char 
   997 ;;  minute_digit    1   49[BANK1 ] unsigned char 
   998 ;;  hour_digit2     1   48[BANK1 ] unsigned char 
   999 ;;  hour_digit1     1   47[BANK1 ] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : B1F/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1009 ;;      Params:         0       0       0       0       0       0       0       0
  1010 ;;      Locals:         0       0      18       0       0       0       0       0
  1011 ;;      Temps:          0       0      12       0       0       0       0       0
  1012 ;;      Totals:         0       0      30       0       0       0       0       0
  1013 ;;Total ram usage:       30 bytes
  1014 ;; Hardware stack levels required when called: 8
  1015 ;; This function calls:
  1016 ;;		_LCDPutStr2
  1017 ;;		_LCD_Initialize
  1018 ;;		___awdiv
  1019 ;;		___awmod
  1020 ;;		_sprintf
  1021 ;; This function is called by:
  1022 ;;		Startup code after reset
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026  0585                     _main:	
  1027                           ;psect for function _main
  1028                           
  1029  0585                     l1651:	
  1030                           ;incstack = 0
  1031                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1032                           
  1033                           
  1034                           ;ex_6-2.c: 16:     unsigned char minute_counter = 0;
  1035  0585  0021               	movlb	1	; select bank1
  1036  0586  01D6               	clrf	main@minute_counter^(0+128)
  1037                           
  1038                           ;ex_6-2.c: 17:     unsigned char second_counter = 0;
  1039  0587  01D7               	clrf	main@second_counter^(0+128)
  1040                           
  1041                           ;ex_6-2.c: 18:     char time_string[9];;ex_6-2.c: 22:     unsigned char hour_digit1 = 0,
      +                           hour_digit2 = 0;
  1042  0588  01CF               	clrf	main@hour_digit1^(0+128)
  1043  0589  01D0               	clrf	main@hour_digit2^(0+128)
  1044                           
  1045                           ;ex_6-2.c: 23:     unsigned char minute_digit1 = 0, minute_digit2 = 0;
  1046  058A  01D1               	clrf	main@minute_digit1^(0+128)
  1047  058B  01D2               	clrf	main@minute_digit2^(0+128)
  1048                           
  1049                           ;ex_6-2.c: 24:     unsigned char second_digit1 = 0, second_digit2 = 0;
  1050  058C  01D3               	clrf	main@second_digit1^(0+128)
  1051  058D  01D4               	clrf	main@second_digit2^(0+128)
  1052  058E                     l1653:
  1053                           
  1054                           ;ex_6-2.c: 27:     LCD_Initialize();
  1055  058E  3180  201C  3185   	fcall	_LCD_Initialize
  1056  0591                     l1655:
  1057                           
  1058                           ;ex_6-2.c: 30:     LCDPutStr2("NGUYEN HAI DANG",1,0);
  1059  0591  3000               	movlw	low (STR_1| (0+32768))
  1060  0592  00FA               	movwf	LCDPutStr2@str
  1061  0593  3090               	movlw	high (STR_1| (0+32768))
  1062  0594  00FB               	movwf	LCDPutStr2@str+1
  1063  0595  01FC               	clrf	LCDPutStr2@_pos
  1064  0596  0AFC               	incf	LCDPutStr2@_pos,f
  1065  0597  01FD               	clrf	LCDPutStr2@_line
  1066  0598  3180  20DF  3185   	fcall	_LCDPutStr2
  1067  059B                     l1657:
  1068                           
  1069                           ;ex_6-2.c: 33:     LCDPutStr2("00:00:00",4,1);
  1070  059B  301F               	movlw	low (STR_2| (0+32768))
  1071  059C  00FA               	movwf	LCDPutStr2@str
  1072  059D  3090               	movlw	high (STR_2| (0+32768))
  1073  059E  00FB               	movwf	LCDPutStr2@str+1
  1074  059F  3004               	movlw	4
  1075  05A0  0021               	movlb	1	; select bank1
  1076  05A1  00BA               	movwf	??_main^(0+128)
  1077  05A2  083A               	movf	??_main^(0+128),w
  1078  05A3  00FC               	movwf	LCDPutStr2@_pos
  1079  05A4  01FD               	clrf	LCDPutStr2@_line
  1080  05A5  0AFD               	incf	LCDPutStr2@_line,f
  1081  05A6  3180  20DF  3185   	fcall	_LCDPutStr2
  1082  05A9                     l1659:
  1083                           
  1084                           ;ex_6-2.c: 37:         for(hour_counter=0;hour_counter<=23;hour_counter+=1){
  1085  05A9  0021               	movlb	1	; select bank1
  1086  05AA  01D5               	clrf	main@hour_counter^(0+128)
  1087  05AB                     l1665:
  1088                           
  1089                           ;ex_6-2.c: 39:             for(minute_counter=-0;minute_counter<=59;minute_counter+=1){
  1090  05AB  01D6               	clrf	main@minute_counter^(0+128)
  1091  05AC                     l1671:
  1092                           
  1093                           ;ex_6-2.c: 41:                 for(second_counter=0;second_counter<=59;second_counter+=1
      +                          ){
  1094  05AC  01D7               	clrf	main@second_counter^(0+128)
  1095  05AD                     l1677:
  1096                           
  1097                           ;ex_6-2.c: 43:                     hour_digit1 = hour_counter/10;
  1098  05AD  300A               	movlw	10
  1099  05AE  00F0               	movwf	___awdiv@divisor
  1100  05AF  3000               	movlw	0
  1101  05B0  00F1               	movwf	___awdiv@divisor+1
  1102  05B1  0855               	movf	main@hour_counter^(0+128),w
  1103  05B2  00BA               	movwf	??_main^(0+128)
  1104  05B3  01BB               	clrf	(??_main^(0+128)+1)
  1105  05B4  083A               	movf	??_main^(0+128),w
  1106  05B5  00F2               	movwf	___awdiv@dividend
  1107  05B6  083B               	movf	(??_main+1)^(0+128),w
  1108  05B7  00F3               	movwf	___awdiv@dividend+1
  1109  05B8  3182  2262  3185   	fcall	___awdiv
  1110  05BB  0870               	movf	?___awdiv,w
  1111  05BC  0021               	movlb	1	; select bank1
  1112  05BD  00BC               	movwf	(??_main+2)^(0+128)
  1113  05BE  083C               	movf	(??_main+2)^(0+128),w
  1114  05BF  00CF               	movwf	main@hour_digit1^(0+128)
  1115                           
  1116                           ;ex_6-2.c: 44:                     hour_digit2 = hour_counter%10;
  1117  05C0  300A               	movlw	10
  1118  05C1  00F0               	movwf	___awmod@divisor
  1119  05C2  3000               	movlw	0
  1120  05C3  00F1               	movwf	___awmod@divisor+1
  1121  05C4  0855               	movf	main@hour_counter^(0+128),w
  1122  05C5  00BA               	movwf	??_main^(0+128)
  1123  05C6  01BB               	clrf	(??_main^(0+128)+1)
  1124  05C7  083A               	movf	??_main^(0+128),w
  1125  05C8  00F2               	movwf	___awmod@dividend
  1126  05C9  083B               	movf	(??_main+1)^(0+128),w
  1127  05CA  00F3               	movwf	___awmod@dividend+1
  1128  05CB  3181  21B9  3185   	fcall	___awmod
  1129  05CE  0870               	movf	?___awmod,w
  1130  05CF  0021               	movlb	1	; select bank1
  1131  05D0  00BC               	movwf	(??_main+2)^(0+128)
  1132  05D1  083C               	movf	(??_main+2)^(0+128),w
  1133  05D2  00D0               	movwf	main@hour_digit2^(0+128)
  1134                           
  1135                           ;ex_6-2.c: 47:                     minute_digit1 = minute_counter/10;
  1136  05D3  300A               	movlw	10
  1137  05D4  00F0               	movwf	___awdiv@divisor
  1138  05D5  3000               	movlw	0
  1139  05D6  00F1               	movwf	___awdiv@divisor+1
  1140  05D7  0856               	movf	main@minute_counter^(0+128),w
  1141  05D8  00BA               	movwf	??_main^(0+128)
  1142  05D9  01BB               	clrf	(??_main^(0+128)+1)
  1143  05DA  083A               	movf	??_main^(0+128),w
  1144  05DB  00F2               	movwf	___awdiv@dividend
  1145  05DC  083B               	movf	(??_main+1)^(0+128),w
  1146  05DD  00F3               	movwf	___awdiv@dividend+1
  1147  05DE  3182  2262  3185   	fcall	___awdiv
  1148  05E1  0870               	movf	?___awdiv,w
  1149  05E2  0021               	movlb	1	; select bank1
  1150  05E3  00BC               	movwf	(??_main+2)^(0+128)
  1151  05E4  083C               	movf	(??_main+2)^(0+128),w
  1152  05E5  00D1               	movwf	main@minute_digit1^(0+128)
  1153                           
  1154                           ;ex_6-2.c: 48:                     minute_digit2 = minute_counter%10;
  1155  05E6  300A               	movlw	10
  1156  05E7  00F0               	movwf	___awmod@divisor
  1157  05E8  3000               	movlw	0
  1158  05E9  00F1               	movwf	___awmod@divisor+1
  1159  05EA  0856               	movf	main@minute_counter^(0+128),w
  1160  05EB  00BA               	movwf	??_main^(0+128)
  1161  05EC  01BB               	clrf	(??_main^(0+128)+1)
  1162  05ED  083A               	movf	??_main^(0+128),w
  1163  05EE  00F2               	movwf	___awmod@dividend
  1164  05EF  083B               	movf	(??_main+1)^(0+128),w
  1165  05F0  00F3               	movwf	___awmod@dividend+1
  1166  05F1  3181  21B9  3185   	fcall	___awmod
  1167  05F4  0870               	movf	?___awmod,w
  1168  05F5  0021               	movlb	1	; select bank1
  1169  05F6  00BC               	movwf	(??_main+2)^(0+128)
  1170  05F7  083C               	movf	(??_main+2)^(0+128),w
  1171  05F8  00D2               	movwf	main@minute_digit2^(0+128)
  1172                           
  1173                           ;ex_6-2.c: 51:                     second_digit1 = second_counter/10;
  1174  05F9  300A               	movlw	10
  1175  05FA  00F0               	movwf	___awdiv@divisor
  1176  05FB  3000               	movlw	0
  1177  05FC  00F1               	movwf	___awdiv@divisor+1
  1178  05FD  0857               	movf	main@second_counter^(0+128),w
  1179  05FE  00BA               	movwf	??_main^(0+128)
  1180  05FF  01BB               	clrf	(??_main^(0+128)+1)
  1181  0600  083A               	movf	??_main^(0+128),w
  1182  0601  00F2               	movwf	___awdiv@dividend
  1183  0602  083B               	movf	(??_main+1)^(0+128),w
  1184  0603  00F3               	movwf	___awdiv@dividend+1
  1185  0604  3182  2262  3185   	fcall	___awdiv
  1186  0607  0870               	movf	?___awdiv,w
  1187  0608  0021               	movlb	1	; select bank1
  1188  0609  00BC               	movwf	(??_main+2)^(0+128)
  1189  060A  083C               	movf	(??_main+2)^(0+128),w
  1190  060B  00D3               	movwf	main@second_digit1^(0+128)
  1191                           
  1192                           ;ex_6-2.c: 52:                     second_digit2 = second_counter%10;
  1193  060C  300A               	movlw	10
  1194  060D  00F0               	movwf	___awmod@divisor
  1195  060E  3000               	movlw	0
  1196  060F  00F1               	movwf	___awmod@divisor+1
  1197  0610  0857               	movf	main@second_counter^(0+128),w
  1198  0611  00BA               	movwf	??_main^(0+128)
  1199  0612  01BB               	clrf	(??_main^(0+128)+1)
  1200  0613  083A               	movf	??_main^(0+128),w
  1201  0614  00F2               	movwf	___awmod@dividend
  1202  0615  083B               	movf	(??_main+1)^(0+128),w
  1203  0616  00F3               	movwf	___awmod@dividend+1
  1204  0617  3181  21B9  3185   	fcall	___awmod
  1205  061A  0870               	movf	?___awmod,w
  1206  061B  0021               	movlb	1	; select bank1
  1207  061C  00BC               	movwf	(??_main+2)^(0+128)
  1208  061D  083C               	movf	(??_main+2)^(0+128),w
  1209  061E  00D4               	movwf	main@second_digit2^(0+128)
  1210  061F                     l1679:
  1211                           
  1212                           ;ex_6-2.c: 55:                     sprintf(time_string,"%d%d:%d%d:%d%d",hour_digit1,hour
      +                          _digit2
  1213  061F  3010               	movlw	low (STR_3| (0+32768))
  1214  0620  00A0               	movwf	sprintf@fmt^(0+128)
  1215  0621  3090               	movlw	high (STR_3| (0+32768))
  1216  0622  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  1217  0623  084F               	movf	main@hour_digit1^(0+128),w
  1218  0624  00BA               	movwf	??_main^(0+128)
  1219  0625  01BB               	clrf	(??_main^(0+128)+1)
  1220  0626  083A               	movf	??_main^(0+128),w
  1221  0627  00A2               	movwf	(?_sprintf^(0+128)+2)
  1222  0628  083B               	movf	(??_main+1)^(0+128),w
  1223  0629  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  1224  062A  0850               	movf	main@hour_digit2^(0+128),w
  1225  062B  00BC               	movwf	(??_main+2)^(0+128)
  1226  062C  01BD               	clrf	((??_main+2)^(0+128)+1)
  1227  062D  083C               	movf	(??_main+2)^(0+128),w
  1228  062E  00A4               	movwf	(?_sprintf^(0+128)+4)
  1229  062F  083D               	movf	(??_main+3)^(0+128),w
  1230  0630  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  1231  0631  0851               	movf	main@minute_digit1^(0+128),w
  1232  0632  00BE               	movwf	(??_main+4)^(0+128)
  1233  0633  01BF               	clrf	((??_main+4)^(0+128)+1)
  1234  0634  083E               	movf	(??_main+4)^(0+128),w
  1235  0635  00A6               	movwf	(?_sprintf^(0+128)+6)
  1236  0636  083F               	movf	(??_main+5)^(0+128),w
  1237  0637  00A7               	movwf	((?_sprintf+1)^(0+128)+6)
  1238  0638  0852               	movf	main@minute_digit2^(0+128),w
  1239  0639  00C0               	movwf	(??_main+6)^(0+128)
  1240  063A  01C1               	clrf	((??_main+6)^(0+128)+1)
  1241  063B  0840               	movf	(??_main+6)^(0+128),w
  1242  063C  00A8               	movwf	(?_sprintf^(0+128)+8)
  1243  063D  0841               	movf	(??_main+7)^(0+128),w
  1244  063E  00A9               	movwf	((?_sprintf+1)^(0+128)+8)
  1245  063F  0853               	movf	main@second_digit1^(0+128),w
  1246  0640  00C2               	movwf	(??_main+8)^(0+128)
  1247  0641  01C3               	clrf	((??_main+8)^(0+128)+1)
  1248  0642  0842               	movf	(??_main+8)^(0+128),w
  1249  0643  00AA               	movwf	(?_sprintf^(0+128)+10)
  1250  0644  0843               	movf	(??_main+9)^(0+128),w
  1251  0645  00AB               	movwf	((?_sprintf+1)^(0+128)+10)
  1252  0646  0854               	movf	main@second_digit2^(0+128),w
  1253  0647  00C4               	movwf	(??_main+10)^(0+128)
  1254  0648  01C5               	clrf	((??_main+10)^(0+128)+1)
  1255  0649  0844               	movf	(??_main+10)^(0+128),w
  1256  064A  00AC               	movwf	(?_sprintf^(0+128)+12)
  1257  064B  0845               	movf	(??_main+11)^(0+128),w
  1258  064C  00AD               	movwf	((?_sprintf+1)^(0+128)+12)
  1259  064D  30C6               	movlw	(low (main@time_string| 0))& (0+255)
  1260  064E  3180  2041  3185   	fcall	_sprintf
  1261  0651                     l1681:
  1262                           
  1263                           ;ex_6-2.c: 59:                     LCDPutStr2(time_string, 4, 1);
  1264  0651  30C6               	movlw	low main@time_string
  1265  0652  00FA               	movwf	LCDPutStr2@str
  1266  0653  3000               	movlw	high main@time_string
  1267  0654  00FB               	movwf	LCDPutStr2@str+1
  1268  0655  3004               	movlw	4
  1269  0656  0021               	movlb	1	; select bank1
  1270  0657  00BA               	movwf	??_main^(0+128)
  1271  0658  083A               	movf	??_main^(0+128),w
  1272  0659  00FC               	movwf	LCDPutStr2@_pos
  1273  065A  01FD               	clrf	LCDPutStr2@_line
  1274  065B  0AFD               	incf	LCDPutStr2@_line,f
  1275  065C  3180  20DF  3185   	fcall	_LCDPutStr2
  1276  065F                     l1683:
  1277                           
  1278                           ;ex_6-2.c: 60:                     _delay((unsigned long)((50)*(1000000/4000.0)));
  1279  065F  3011               	movlw	17
  1280  0660  0021               	movlb	1	; select bank1
  1281  0661  00BA               	movwf	??_main^(0+128)
  1282  0662  303A               	movlw	58
  1283  0663                     u1857:
  1284  0663  0B89               	decfsz	9,f
  1285  0664  2E63               	goto	u1857
  1286  0665  0BBA               	decfsz	??_main^(0+128),f
  1287  0666  2E63               	goto	u1857
  1288  0667  0000               	nop
  1289  0668                     l1685:
  1290                           
  1291                           ;ex_6-2.c: 61:                 }
  1292  0668  3001               	movlw	1
  1293  0669  0021               	movlb	1	; select bank1
  1294  066A  00BA               	movwf	??_main^(0+128)
  1295  066B  083A               	movf	??_main^(0+128),w
  1296  066C  07D7               	addwf	main@second_counter^(0+128),f
  1297  066D                     l1687:
  1298  066D  303C               	movlw	60
  1299  066E  0257               	subwf	main@second_counter^(0+128),w
  1300  066F  1C03               	skipc
  1301  0670  2E72               	goto	u1821
  1302  0671  2E73               	goto	u1820
  1303  0672                     u1821:
  1304  0672  2DAD               	goto	l1677
  1305  0673                     u1820:
  1306  0673                     l1689:
  1307                           
  1308                           ;ex_6-2.c: 62:             }
  1309  0673  3001               	movlw	1
  1310  0674  00BA               	movwf	??_main^(0+128)
  1311  0675  083A               	movf	??_main^(0+128),w
  1312  0676  07D6               	addwf	main@minute_counter^(0+128),f
  1313  0677                     l1691:
  1314  0677  303C               	movlw	60
  1315  0678  0256               	subwf	main@minute_counter^(0+128),w
  1316  0679  1C03               	skipc
  1317  067A  2E7C               	goto	u1831
  1318  067B  2E7D               	goto	u1830
  1319  067C                     u1831:
  1320  067C  2DAC               	goto	l1671
  1321  067D                     u1830:
  1322  067D                     l1693:
  1323                           
  1324                           ;ex_6-2.c: 63:         }
  1325  067D  3001               	movlw	1
  1326  067E  00BA               	movwf	??_main^(0+128)
  1327  067F  083A               	movf	??_main^(0+128),w
  1328  0680  07D5               	addwf	main@hour_counter^(0+128),f
  1329  0681                     l1695:
  1330  0681  3018               	movlw	24
  1331  0682  0255               	subwf	main@hour_counter^(0+128),w
  1332  0683  1C03               	skipc
  1333  0684  2E86               	goto	u1841
  1334  0685  2E87               	goto	u1840
  1335  0686                     u1841:
  1336  0686  2DAB               	goto	l1665
  1337  0687                     u1840:
  1338  0687                     l1697:
  1339                           
  1340                           ;ex_6-2.c: 65:         minute_counter = 0;
  1341  0687  01D6               	clrf	main@minute_counter^(0+128)
  1342                           
  1343                           ;ex_6-2.c: 66:         second_counter = 0;
  1344  0688  01D7               	clrf	main@second_counter^(0+128)
  1345  0689  2DA9               	goto	l1659
  1346  068A  3180  2802         	ljmp	start
  1347  068C                     __end_of_main:
  1348                           
  1349                           	psect	text1
  1350  0041                     __ptext1:	
  1351 ;; *************** function _sprintf *****************
  1352 ;; Defined at:
  1353 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  s               1    wreg     PTR unsigned char 
  1356 ;;		 -> main@time_string(9), 
  1357 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  1358 ;;		 -> STR_3(15), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  s               1   15[BANK1 ] PTR unsigned char 
  1361 ;;		 -> main@time_string(9), 
  1362 ;;  f              10   16[BANK1 ] struct _IO_FILE
  1363 ;;  ret             2    0        int 
  1364 ;;  ap              1   14[BANK1 ] PTR void [1]
  1365 ;;		 -> ?_sprintf(2), 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  2    0[BANK1 ] int 
  1368 ;; Registers used:
  1369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1375 ;;      Params:         0       0      14       0       0       0       0       0
  1376 ;;      Locals:         0       0      12       0       0       0       0       0
  1377 ;;      Temps:          1       0       0       0       0       0       0       0
  1378 ;;      Totals:         1       0      26       0       0       0       0       0
  1379 ;;Total ram usage:       27 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; Hardware stack levels required when called: 7
  1382 ;; This function calls:
  1383 ;;		_vfprintf
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389  0041                     _sprintf:	
  1390                           ;psect for function _sprintf
  1391                           
  1392                           
  1393                           ;incstack = 0
  1394                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1395                           ;sprintf@s stored from wreg
  1396  0041  0021               	movlb	1	; select bank1
  1397  0042  00AF               	movwf	sprintf@s^(0+128)
  1398  0043                     l1549:
  1399  0043  30A2               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1400  0044  00FD               	movwf	??_sprintf
  1401  0045  087D               	movf	??_sprintf,w
  1402  0046  00AE               	movwf	sprintf@ap^(0+128)
  1403  0047  082F               	movf	sprintf@s^(0+128),w
  1404  0048  00FD               	movwf	??_sprintf
  1405  0049  087D               	movf	??_sprintf,w
  1406  004A  00B0               	movwf	sprintf@f^(0+128)
  1407  004B                     l1551:
  1408  004B  01B2               	clrf	(sprintf@f^(0+128)+2)
  1409  004C  01B3               	clrf	((sprintf@f+1)^(0+128)+2)
  1410  004D                     l1553:
  1411  004D  01B8               	clrf	(sprintf@f^(0+128)+8)
  1412  004E  01B9               	clrf	((sprintf@f+1)^(0+128)+8)
  1413  004F                     l1555:
  1414  004F  0821               	movf	(sprintf@fmt+1)^(0+128),w
  1415  0050  0020               	movlb	0	; select bank0
  1416  0051  00DF               	movwf	vfprintf@fmt+1
  1417  0052  0021               	movlb	1	; select bank1
  1418  0053  0820               	movf	sprintf@fmt^(0+128),w
  1419  0054  0020               	movlb	0	; select bank0
  1420  0055  00DE               	movwf	vfprintf@fmt
  1421  0056  30AE               	movlw	(low (sprintf@ap| 0))& (0+255)
  1422  0057  00FD               	movwf	??_sprintf
  1423  0058  087D               	movf	??_sprintf,w
  1424  0059  00E0               	movwf	vfprintf@ap
  1425  005A  30B0               	movlw	(low (sprintf@f| 0))& (0+255)
  1426  005B  3180  208E  3180   	fcall	_vfprintf
  1427  005E                     l1557:
  1428  005E  0021               	movlb	1	; select bank1
  1429  005F  0832               	movf	(sprintf@f^(0+128)+2),w
  1430  0060  072F               	addwf	sprintf@s^(0+128),w
  1431  0061  00FD               	movwf	??_sprintf
  1432  0062  087D               	movf	??_sprintf,w
  1433  0063  0086               	movwf	6
  1434  0064  0187               	clrf	7
  1435  0065  0181               	clrf	1
  1436  0066                     l617:
  1437  0066  0008               	return
  1438  0067                     __end_of_sprintf:
  1439                           
  1440                           	psect	text2
  1441  008E                     __ptext2:	
  1442 ;; *************** function _vfprintf *****************
  1443 ;; Defined at:
  1444 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  fp              1    wreg     PTR struct _IO_FILE
  1447 ;;		 -> sprintf@f(10), 
  1448 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1449 ;;		 -> STR_3(15), 
  1450 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1451 ;;		 -> sprintf@ap(1), 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1454 ;;		 -> sprintf@f(10), 
  1455 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1456 ;;		 -> STR_3(15), 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2   62[BANK0 ] int 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1466 ;;      Params:         0       3       0       0       0       0       0       0
  1467 ;;      Locals:         0       3       0       0       0       0       0       0
  1468 ;;      Temps:          0       2       0       0       0       0       0       0
  1469 ;;      Totals:         0       8       0       0       0       0       0       0
  1470 ;;Total ram usage:        8 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; Hardware stack levels required when called: 6
  1473 ;; This function calls:
  1474 ;;		_vfpfcnvrt
  1475 ;; This function is called by:
  1476 ;;		_sprintf
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480  008E                     _vfprintf:	
  1481                           ;psect for function _vfprintf
  1482                           
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1486                           ;vfprintf@fp stored from wreg
  1487  008E  0020               	movlb	0	; select bank0
  1488  008F  00E3               	movwf	vfprintf@fp
  1489  0090                     l1509:
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1492  0090  085F               	movf	vfprintf@fmt+1,w
  1493  0091  00E5               	movwf	vfprintf@cfmt+1
  1494  0092  085E               	movf	vfprintf@fmt,w
  1495  0093  00E4               	movwf	vfprintf@cfmt
  1496  0094                     l1511:
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1499  0094  01E6               	clrf	_nout
  1500  0095  01E7               	clrf	_nout+1
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1503  0096  28A8               	goto	l1515
  1504  0097                     l1513:
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1507  0097  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1508  0098  00E1               	movwf	??_vfprintf
  1509  0099  0861               	movf	??_vfprintf,w
  1510  009A  00CE               	movwf	vfpfcnvrt@fmt
  1511  009B  0860               	movf	vfprintf@ap,w
  1512  009C  00E2               	movwf	??_vfprintf+1
  1513  009D  0862               	movf	??_vfprintf+1,w
  1514  009E  00CF               	movwf	vfpfcnvrt@ap
  1515  009F  0863               	movf	vfprintf@fp,w
  1516  00A0  3182  22C1  3180   	fcall	_vfpfcnvrt
  1517  00A3  0020               	movlb	0	; select bank0
  1518  00A4  084E               	movf	?_vfpfcnvrt,w
  1519  00A5  07E6               	addwf	_nout,f
  1520  00A6  084F               	movf	?_vfpfcnvrt+1,w
  1521  00A7  3DE7               	addwfc	_nout+1,f
  1522  00A8                     l1515:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1525  00A8  0864               	movf	vfprintf@cfmt,w
  1526  00A9  0084               	movwf	4
  1527  00AA  0865               	movf	vfprintf@cfmt+1,w
  1528  00AB  0085               	movwf	5
  1529  00AC  0012               	moviw fsr0++
  1530  00AD  1D03               	btfss	3,2
  1531  00AE  28B0               	goto	u1581
  1532  00AF  28B1               	goto	u1580
  1533  00B0                     u1581:
  1534  00B0  2897               	goto	l1513
  1535  00B1                     u1580:
  1536  00B1                     l1517:
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1539  00B1  0867               	movf	_nout+1,w
  1540  00B2  00DF               	movwf	?_vfprintf+1
  1541  00B3  0866               	movf	_nout,w
  1542  00B4  00DE               	movwf	?_vfprintf
  1543  00B5                     l689:
  1544  00B5  0008               	return
  1545  00B6                     __end_of_vfprintf:
  1546                           
  1547                           	psect	text3
  1548  02C1                     __ptext3:	
  1549 ;; *************** function _vfpfcnvrt *****************
  1550 ;; Defined at:
  1551 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  fp              1    wreg     PTR struct _IO_FILE
  1554 ;;		 -> sprintf@f(10), 
  1555 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1556 ;;		 -> vfprintf@cfmt(2), 
  1557 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1558 ;;		 -> sprintf@ap(1), 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1561 ;;		 -> sprintf@f(10), 
  1562 ;;  ll              8   53[BANK0 ] long long 
  1563 ;;  llu             8    0        unsigned long long 
  1564 ;;  f               4    0        unsigned long long 
  1565 ;;  ct              3    0        unsigned char [3]
  1566 ;;  vp              2    0        PTR void 
  1567 ;;  i               2    0        int 
  1568 ;;  done            2    0        int 
  1569 ;;  cp              2    0        PTR unsigned char 
  1570 ;;  c               1    0        unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  2   46[BANK0 ] int 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1580 ;;      Params:         0       2       0       0       0       0       0       0
  1581 ;;      Locals:         0       9       0       0       0       0       0       0
  1582 ;;      Temps:          0       5       0       0       0       0       0       0
  1583 ;;      Totals:         0      16       0       0       0       0       0       0
  1584 ;;Total ram usage:       16 bytes
  1585 ;; Hardware stack levels used: 1
  1586 ;; Hardware stack levels required when called: 5
  1587 ;; This function calls:
  1588 ;;		_dtoa
  1589 ;;		_fputc
  1590 ;; This function is called by:
  1591 ;;		_vfprintf
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595  02C1                     _vfpfcnvrt:	
  1596                           ;psect for function _vfpfcnvrt
  1597                           
  1598                           
  1599                           ;incstack = 0
  1600                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1601                           ;vfpfcnvrt@fp stored from wreg
  1602  02C1  0020               	movlb	0	; select bank0
  1603  02C2  00DD               	movwf	vfpfcnvrt@fp
  1604  02C3                     l1443:
  1605                           
  1606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1607  02C3  084E               	movf	vfpfcnvrt@fmt,w
  1608  02C4  0086               	movwf	6
  1609  02C5  0187               	clrf	7
  1610  02C6  3F40               	moviw [0]fsr1
  1611  02C7  00D0               	movwf	??_vfpfcnvrt
  1612  02C8  3F41               	moviw [1]fsr1
  1613  02C9  00D1               	movwf	??_vfpfcnvrt+1
  1614  02CA  0850               	movf	??_vfpfcnvrt,w
  1615  02CB  0084               	movwf	4
  1616  02CC  0851               	movf	??_vfpfcnvrt+1,w
  1617  02CD  0085               	movwf	5
  1618  02CE  0012               	moviw fsr0++
  1619  02CF  3A25               	xorlw	37
  1620  02D0  1D03               	btfss	3,2
  1621  02D1  2AD3               	goto	u1501
  1622  02D2  2AD4               	goto	u1500
  1623  02D3                     u1501:
  1624  02D3  2B76               	goto	l1479
  1625  02D4                     u1500:
  1626  02D4                     l1445:
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1629  02D4  084E               	movf	vfpfcnvrt@fmt,w
  1630  02D5  0086               	movwf	6
  1631  02D6  0187               	clrf	7
  1632  02D7  3001               	movlw	1
  1633  02D8  0781               	addwf	1,f
  1634  02D9  3141               	addfsr 1,1
  1635  02DA  1803               	skipnc
  1636  02DB  0A81               	incf	1,f
  1637  02DC                     l1447:
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1640  02DC  01E8               	clrf	_width
  1641  02DD  01E9               	clrf	_width+1
  1642  02DE  01EC               	clrf	_flags
  1643  02DF  01ED               	clrf	_flags+1
  1644  02E0                     l1449:
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1647  02E0  30FF               	movlw	255
  1648  02E1  00EA               	movwf	_prec
  1649  02E2  30FF               	movlw	255
  1650  02E3  00EB               	movwf	_prec+1
  1651  02E4                     l1451:
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1654  02E4  084E               	movf	vfpfcnvrt@fmt,w
  1655  02E5  0086               	movwf	6
  1656  02E6  0187               	clrf	7
  1657  02E7  3F40               	moviw [0]fsr1
  1658  02E8  00D0               	movwf	??_vfpfcnvrt
  1659  02E9  3F41               	moviw [1]fsr1
  1660  02EA  00D1               	movwf	??_vfpfcnvrt+1
  1661  02EB  0850               	movf	??_vfpfcnvrt,w
  1662  02EC  0084               	movwf	4
  1663  02ED  0851               	movf	??_vfpfcnvrt+1,w
  1664  02EE  0085               	movwf	5
  1665  02EF  0012               	moviw fsr0++
  1666  02F0  3A64               	xorlw	100
  1667  02F1  1903               	btfsc	3,2
  1668  02F2  2AF4               	goto	u1511
  1669  02F3  2AF5               	goto	u1510
  1670  02F4                     u1511:
  1671  02F4  2B06               	goto	l1455
  1672  02F5                     u1510:
  1673  02F5                     l1453:
  1674  02F5  084E               	movf	vfpfcnvrt@fmt,w
  1675  02F6  0086               	movwf	6
  1676  02F7  0187               	clrf	7
  1677  02F8  3F40               	moviw [0]fsr1
  1678  02F9  00D0               	movwf	??_vfpfcnvrt
  1679  02FA  3F41               	moviw [1]fsr1
  1680  02FB  00D1               	movwf	??_vfpfcnvrt+1
  1681  02FC  0850               	movf	??_vfpfcnvrt,w
  1682  02FD  0084               	movwf	4
  1683  02FE  0851               	movf	??_vfpfcnvrt+1,w
  1684  02FF  0085               	movwf	5
  1685  0300  0012               	moviw fsr0++
  1686  0301  3A69               	xorlw	105
  1687  0302  1D03               	btfss	3,2
  1688  0303  2B05               	goto	u1521
  1689  0304  2B06               	goto	u1520
  1690  0305                     u1521:
  1691  0305  2B41               	goto	l1463
  1692  0306                     u1520:
  1693  0306                     l1455:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1696  0306  084E               	movf	vfpfcnvrt@fmt,w
  1697  0307  0086               	movwf	6
  1698  0308  0187               	clrf	7
  1699  0309  3001               	movlw	1
  1700  030A  0781               	addwf	1,f
  1701  030B  3141               	addfsr 1,1
  1702  030C  1803               	skipnc
  1703  030D  0A81               	incf	1,f
  1704  030E                     l1457:
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1707  030E  084F               	movf	vfpfcnvrt@ap,w
  1708  030F  0086               	movwf	6
  1709  0310  0187               	clrf	7
  1710  0311  0801               	movf	1,w
  1711  0312  0084               	movwf	4
  1712  0313  0185               	clrf	5
  1713  0314  3002               	movlw	2
  1714  0315  0781               	addwf	1,f
  1715  0316  3F00               	moviw [0]fsr0
  1716  0317  00D0               	movwf	??_vfpfcnvrt
  1717  0318  3F01               	moviw [1]fsr0
  1718  0319  00D1               	movwf	??_vfpfcnvrt+1
  1719  031A  0850               	movf	??_vfpfcnvrt,w
  1720  031B  00D5               	movwf	vfpfcnvrt@ll
  1721  031C  0851               	movf	??_vfpfcnvrt+1,w
  1722  031D  00D6               	movwf	vfpfcnvrt@ll+1
  1723  031E  0D89               	rlf	9,f
  1724  031F  3B89               	subwfb	9,f
  1725  0320  0989               	comf	9,f
  1726  0321  00D7               	movwf	vfpfcnvrt@ll+2
  1727  0322  00D8               	movwf	vfpfcnvrt@ll+3
  1728  0323  00D9               	movwf	vfpfcnvrt@ll+4
  1729  0324  00DA               	movwf	vfpfcnvrt@ll+5
  1730  0325  00DB               	movwf	vfpfcnvrt@ll+6
  1731  0326  00DC               	movwf	vfpfcnvrt@ll+7
  1732  0327                     l1459:
  1733                           
  1734                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1735  0327  0855               	movf	vfpfcnvrt@ll,w
  1736  0328  00B0               	movwf	dtoa@d
  1737  0329  0856               	movf	vfpfcnvrt@ll+1,w
  1738  032A  00B1               	movwf	dtoa@d+1
  1739  032B  0857               	movf	vfpfcnvrt@ll+2,w
  1740  032C  00B2               	movwf	dtoa@d+2
  1741  032D  0858               	movf	vfpfcnvrt@ll+3,w
  1742  032E  00B3               	movwf	dtoa@d+3
  1743  032F  0859               	movf	vfpfcnvrt@ll+4,w
  1744  0330  00B4               	movwf	dtoa@d+4
  1745  0331  085A               	movf	vfpfcnvrt@ll+5,w
  1746  0332  00B5               	movwf	dtoa@d+5
  1747  0333  085B               	movf	vfpfcnvrt@ll+6,w
  1748  0334  00B6               	movwf	dtoa@d+6
  1749  0335  085C               	movf	vfpfcnvrt@ll+7,w
  1750  0336  00B7               	movwf	dtoa@d+7
  1751  0337  085D               	movf	vfpfcnvrt@fp,w
  1752  0338  3186  268C  3182   	fcall	_dtoa
  1753  033B  0020               	movlb	0	; select bank0
  1754  033C  0831               	movf	?_dtoa+1,w
  1755  033D  00CF               	movwf	?_vfpfcnvrt+1
  1756  033E  0830               	movf	?_dtoa,w
  1757  033F  00CE               	movwf	?_vfpfcnvrt
  1758  0340  2B99               	goto	l682
  1759  0341                     l1463:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1762  0341  084E               	movf	vfpfcnvrt@fmt,w
  1763  0342  0086               	movwf	6
  1764  0343  0187               	clrf	7
  1765  0344  3F40               	moviw [0]fsr1
  1766  0345  00D0               	movwf	??_vfpfcnvrt
  1767  0346  3F41               	moviw [1]fsr1
  1768  0347  00D1               	movwf	??_vfpfcnvrt+1
  1769  0348  0850               	movf	??_vfpfcnvrt,w
  1770  0349  0084               	movwf	4
  1771  034A  0851               	movf	??_vfpfcnvrt+1,w
  1772  034B  0085               	movwf	5
  1773  034C  0012               	moviw fsr0++
  1774  034D  3A25               	xorlw	37
  1775  034E  1D03               	btfss	3,2
  1776  034F  2B51               	goto	u1531
  1777  0350  2B52               	goto	u1530
  1778  0351                     u1531:
  1779  0351  2B6B               	goto	l1473
  1780  0352                     u1530:
  1781  0352                     l1465:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1784  0352  084E               	movf	vfpfcnvrt@fmt,w
  1785  0353  0086               	movwf	6
  1786  0354  0187               	clrf	7
  1787  0355  3001               	movlw	1
  1788  0356  0781               	addwf	1,f
  1789  0357  3141               	addfsr 1,1
  1790  0358  1803               	skipnc
  1791  0359  0A81               	incf	1,f
  1792  035A                     l1467:
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1795  035A  3025               	movlw	37
  1796  035B  00F0               	movwf	fputc@c
  1797  035C  3000               	movlw	0
  1798  035D  00F1               	movwf	fputc@c+1
  1799  035E  085D               	movf	vfpfcnvrt@fp,w
  1800  035F  00D0               	movwf	??_vfpfcnvrt
  1801  0360  0850               	movf	??_vfpfcnvrt,w
  1802  0361  00F2               	movwf	fputc@fp
  1803  0362  3181  2167  3182   	fcall	_fputc
  1804  0365                     l1469:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1807  0365  3001               	movlw	1
  1808  0366  0020               	movlb	0	; select bank0
  1809  0367  00CE               	movwf	?_vfpfcnvrt
  1810  0368  3000               	movlw	0
  1811  0369  00CF               	movwf	?_vfpfcnvrt+1
  1812  036A  2B99               	goto	l682
  1813  036B                     l1473:
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1816  036B  084E               	movf	vfpfcnvrt@fmt,w
  1817  036C  0086               	movwf	6
  1818  036D  0187               	clrf	7
  1819  036E  3001               	movlw	1
  1820  036F  0781               	addwf	1,f
  1821  0370  3141               	addfsr 1,1
  1822  0371  1803               	skipnc
  1823  0372  0A81               	incf	1,f
  1824  0373                     l1475:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1827  0373  01CE               	clrf	?_vfpfcnvrt
  1828  0374  01CF               	clrf	?_vfpfcnvrt+1
  1829  0375  2B99               	goto	l682
  1830  0376                     l1479:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1833  0376  084E               	movf	vfpfcnvrt@fmt,w
  1834  0377  0086               	movwf	6
  1835  0378  0187               	clrf	7
  1836  0379  3F40               	moviw [0]fsr1
  1837  037A  00D0               	movwf	??_vfpfcnvrt
  1838  037B  3F41               	moviw [1]fsr1
  1839  037C  00D1               	movwf	??_vfpfcnvrt+1
  1840  037D  0850               	movf	??_vfpfcnvrt,w
  1841  037E  0084               	movwf	4
  1842  037F  0851               	movf	??_vfpfcnvrt+1,w
  1843  0380  0085               	movwf	5
  1844  0381  0800               	movf	0,w	;code access
  1845  0382  00D2               	movwf	??_vfpfcnvrt+2
  1846  0383  01D3               	clrf	??_vfpfcnvrt+3
  1847  0384  0852               	movf	??_vfpfcnvrt+2,w
  1848  0385  00F0               	movwf	fputc@c
  1849  0386  0853               	movf	??_vfpfcnvrt+3,w
  1850  0387  00F1               	movwf	fputc@c+1
  1851  0388  085D               	movf	vfpfcnvrt@fp,w
  1852  0389  00D4               	movwf	??_vfpfcnvrt+4
  1853  038A  0854               	movf	??_vfpfcnvrt+4,w
  1854  038B  00F2               	movwf	fputc@fp
  1855  038C  3181  2167  3182   	fcall	_fputc
  1856  038F                     l1481:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1859  038F  0020               	movlb	0	; select bank0
  1860  0390  084E               	movf	vfpfcnvrt@fmt,w
  1861  0391  0086               	movwf	6
  1862  0392  0187               	clrf	7
  1863  0393  3001               	movlw	1
  1864  0394  0781               	addwf	1,f
  1865  0395  3141               	addfsr 1,1
  1866  0396  1803               	skipnc
  1867  0397  0A81               	incf	1,f
  1868  0398  2B65               	goto	l1469
  1869  0399                     l682:
  1870  0399  0008               	return
  1871  039A                     __end_of_vfpfcnvrt:
  1872                           
  1873                           	psect	text4
  1874  068C                     __ptext4:	
  1875 ;; *************** function _dtoa *****************
  1876 ;; Defined at:
  1877 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  fp              1    wreg     PTR struct _IO_FILE
  1880 ;;		 -> sprintf@f(10), 
  1881 ;;  d               8   16[BANK0 ] long long 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  1884 ;;		 -> sprintf@f(10), 
  1885 ;;  n               8   36[BANK0 ] long long 
  1886 ;;  i               2   44[BANK0 ] int 
  1887 ;;  s               2   34[BANK0 ] int 
  1888 ;;  w               2   32[BANK0 ] int 
  1889 ;;  p               2   30[BANK0 ] int 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  2   16[BANK0 ] int 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1899 ;;      Params:         0       8       0       0       0       0       0       0
  1900 ;;      Locals:         0      19       0       0       0       0       0       0
  1901 ;;      Temps:          0       3       0       0       0       0       0       0
  1902 ;;      Totals:         0      30       0       0       0       0       0       0
  1903 ;;Total ram usage:       30 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 4
  1906 ;; This function calls:
  1907 ;;		___aodiv
  1908 ;;		___aomod
  1909 ;;		_abs
  1910 ;;		_pad
  1911 ;; This function is called by:
  1912 ;;		_vfpfcnvrt
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916  068C                     _dtoa:	
  1917                           ;psect for function _dtoa
  1918                           
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1922                           ;dtoa@fp stored from wreg
  1923  068C  0020               	movlb	0	; select bank0
  1924  068D  00BD               	movwf	dtoa@fp
  1925  068E                     l1375:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1928  068E  0830               	movf	dtoa@d,w
  1929  068F  00C4               	movwf	dtoa@n
  1930  0690  0831               	movf	dtoa@d+1,w
  1931  0691  00C5               	movwf	dtoa@n+1
  1932  0692  0832               	movf	dtoa@d+2,w
  1933  0693  00C6               	movwf	dtoa@n+2
  1934  0694  0833               	movf	dtoa@d+3,w
  1935  0695  00C7               	movwf	dtoa@n+3
  1936  0696  0834               	movf	dtoa@d+4,w
  1937  0697  00C8               	movwf	dtoa@n+4
  1938  0698  0835               	movf	dtoa@d+5,w
  1939  0699  00C9               	movwf	dtoa@n+5
  1940  069A  0836               	movf	dtoa@d+6,w
  1941  069B  00CA               	movwf	dtoa@n+6
  1942  069C  0837               	movf	dtoa@d+7,w
  1943  069D  00CB               	movwf	dtoa@n+7
  1944  069E                     l1377:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1947  069E  3044               	movlw	low dtoa@n
  1948  069F  0086               	movwf	6
  1949  06A0  3000               	movlw	high dtoa@n
  1950  06A1  0087               	movwf	7
  1951  06A2  3F47               	moviw [7]fsr1
  1952  06A3  00B8               	movwf	??_dtoa
  1953  06A4  1BB8               	btfsc	??_dtoa,7
  1954  06A5  2EA7               	goto	u1331
  1955  06A6  2EA9               	goto	u1330
  1956  06A7                     u1331:
  1957  06A7  3001               	movlw	1
  1958  06A8  2EAA               	goto	u1340
  1959  06A9                     u1330:
  1960  06A9  3000               	movlw	0
  1961  06AA                     u1340:
  1962  06AA  0020               	movlb	0	; select bank0
  1963  06AB  00B9               	movwf	??_dtoa+1
  1964  06AC  01BA               	clrf	??_dtoa+2
  1965  06AD  0839               	movf	??_dtoa+1,w
  1966  06AE  00C2               	movwf	dtoa@s
  1967  06AF  083A               	movf	??_dtoa+2,w
  1968  06B0  00C3               	movwf	dtoa@s+1
  1969  06B1                     l1379:
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1972  06B1  0842               	movf	dtoa@s,w
  1973  06B2  0443               	iorwf	dtoa@s+1,w
  1974  06B3  1903               	btfsc	3,2
  1975  06B4  2EB6               	goto	u1351
  1976  06B5  2EB7               	goto	u1350
  1977  06B6                     u1351:
  1978  06B6  2ED5               	goto	l652
  1979  06B7                     u1350:
  1980  06B7                     l1381:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1983  06B7  09C4               	comf	dtoa@n,f
  1984  06B8  09C5               	comf	dtoa@n+1,f
  1985  06B9  09C6               	comf	dtoa@n+2,f
  1986  06BA  09C7               	comf	dtoa@n+3,f
  1987  06BB  09C8               	comf	dtoa@n+4,f
  1988  06BC  09C9               	comf	dtoa@n+5,f
  1989  06BD  09CA               	comf	dtoa@n+6,f
  1990  06BE  09CB               	comf	dtoa@n+7,f
  1991  06BF  0AC4               	incf	dtoa@n,f
  1992  06C0  1D03               	skipz
  1993  06C1  2ED5               	goto	u136lld
  1994  06C2  0AC5               	incf	dtoa@n+1,f
  1995  06C3  1D03               	skipz
  1996  06C4  2ED5               	goto	u136lld
  1997  06C5  0AC6               	incf	dtoa@n+2,f
  1998  06C6  1D03               	skipz
  1999  06C7  2ED5               	goto	u136lld
  2000  06C8  0AC7               	incf	dtoa@n+3,f
  2001  06C9  1D03               	skipz
  2002  06CA  2ED5               	goto	u136lld
  2003  06CB  0AC8               	incf	dtoa@n+4,f
  2004  06CC  1D03               	skipz
  2005  06CD  2ED5               	goto	u136lld
  2006  06CE  0AC9               	incf	dtoa@n+5,f
  2007  06CF  1D03               	skipz
  2008  06D0  2ED5               	goto	u136lld
  2009  06D1  0ACA               	incf	dtoa@n+6,f
  2010  06D2  1D03               	skipz
  2011  06D3  2ED5               	goto	u136lld
  2012  06D4  0ACB               	incf	dtoa@n+7,f
  2013  06D5                     u136lld:
  2014  06D5                     l652:	
  2015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 297:     }
  2016                           
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2019  06D5  0020               	movlb	0	; select bank0
  2020  06D6  1BEB               	btfsc	_prec+1,7
  2021  06D7  2ED9               	goto	u1371
  2022  06D8  2EDA               	goto	u1370
  2023  06D9                     u1371:
  2024  06D9  2EDE               	goto	l653
  2025  06DA                     u1370:
  2026  06DA                     l1383:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2029  06DA  30FD               	movlw	253
  2030  06DB  05EC               	andwf	_flags,f
  2031  06DC  30FF               	movlw	255
  2032  06DD  05ED               	andwf	_flags+1,f
  2033  06DE                     l653:	
  2034                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 302:     }
  2035                           
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2038  06DE  086B               	movf	_prec+1,w
  2039  06DF  3A80               	xorlw	128
  2040  06E0  00B8               	movwf	??_dtoa
  2041  06E1  3080               	movlw	128
  2042  06E2  0238               	subwf	??_dtoa,w
  2043  06E3  1D03               	skipz
  2044  06E4  2EE7               	goto	u1385
  2045  06E5  3001               	movlw	1
  2046  06E6  026A               	subwf	_prec,w
  2047  06E7                     u1385:
  2048  06E7  1803               	skipnc
  2049  06E8  2EEA               	goto	u1381
  2050  06E9  2EEB               	goto	u1380
  2051  06EA                     u1381:
  2052  06EA  2EF1               	goto	l1387
  2053  06EB                     u1380:
  2054  06EB                     l1385:
  2055  06EB  3001               	movlw	1
  2056  06EC  0020               	movlb	0	; select bank0
  2057  06ED  00BE               	movwf	dtoa@p
  2058  06EE  3000               	movlw	0
  2059  06EF  00BF               	movwf	dtoa@p+1
  2060  06F0  2EF6               	goto	l657
  2061  06F1                     l1387:
  2062  06F1  0020               	movlb	0	; select bank0
  2063  06F2  086B               	movf	_prec+1,w
  2064  06F3  00BF               	movwf	dtoa@p+1
  2065  06F4  086A               	movf	_prec,w
  2066  06F5  00BE               	movwf	dtoa@p
  2067  06F6                     l657:
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2070  06F6  0869               	movf	_width+1,w
  2071  06F7  00C1               	movwf	dtoa@w+1
  2072  06F8  0868               	movf	_width,w
  2073  06F9  00C0               	movwf	dtoa@w
  2074  06FA                     l1389:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2077  06FA  0842               	movf	dtoa@s,w
  2078  06FB  0443               	iorwf	dtoa@s+1,w
  2079  06FC  1D03               	btfss	3,2
  2080  06FD  2EFF               	goto	u1391
  2081  06FE  2F00               	goto	u1390
  2082  06FF                     u1391:
  2083  06FF  2F04               	goto	l1393
  2084  0700                     u1390:
  2085  0700                     l1391:
  2086  0700  1D6C               	btfss	_flags,2
  2087  0701  2F03               	goto	u1401
  2088  0702  2F04               	goto	u1400
  2089  0703                     u1401:
  2090  0703  2F08               	goto	l658
  2091  0704                     u1400:
  2092  0704                     l1393:
  2093                           
  2094                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  2095  0704  30FF               	movlw	255
  2096  0705  07C0               	addwf	dtoa@w,f
  2097  0706  30FF               	movlw	255
  2098  0707  3DC1               	addwfc	dtoa@w+1,f
  2099  0708                     l658:	
  2100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 307:     }
  2101                           
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2104  0708  301F               	movlw	31
  2105  0709  00CC               	movwf	dtoa@i
  2106  070A  3000               	movlw	0
  2107  070B  00CD               	movwf	dtoa@i+1
  2108  070C                     l1395:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2111  070C  0022               	movlb	2	; select bank2
  2112  070D  01BF               	clrf	(_dbuf^(0+256)+31)
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2115  070E  2F78               	goto	l661
  2116  070F                     l1397:
  2117                           
  2118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  2119  070F  30FF               	movlw	255
  2120  0710  0020               	movlb	0	; select bank0
  2121  0711  07CC               	addwf	dtoa@i,f
  2122  0712  30FF               	movlw	255
  2123  0713  3DCD               	addwfc	dtoa@i+1,f
  2124  0714                     l1399:
  2125                           
  2126                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2127  0714  300A               	movlw	10
  2128  0715  00A0               	movwf	___aomod@divisor
  2129  0716  01A1               	clrf	___aomod@divisor+1
  2130  0717  01A2               	clrf	___aomod@divisor+2
  2131  0718  01A3               	clrf	___aomod@divisor+3
  2132  0719  01A4               	clrf	___aomod@divisor+4
  2133  071A  01A5               	clrf	___aomod@divisor+5
  2134  071B  01A6               	clrf	___aomod@divisor+6
  2135  071C  01A7               	clrf	___aomod@divisor+7
  2136  071D  0844               	movf	dtoa@n,w
  2137  071E  00A8               	movwf	___aomod@dividend
  2138  071F  0845               	movf	dtoa@n+1,w
  2139  0720  00A9               	movwf	___aomod@dividend+1
  2140  0721  0846               	movf	dtoa@n+2,w
  2141  0722  00AA               	movwf	___aomod@dividend+2
  2142  0723  0847               	movf	dtoa@n+3,w
  2143  0724  00AB               	movwf	___aomod@dividend+3
  2144  0725  0848               	movf	dtoa@n+4,w
  2145  0726  00AC               	movwf	___aomod@dividend+4
  2146  0727  0849               	movf	dtoa@n+5,w
  2147  0728  00AD               	movwf	___aomod@dividend+5
  2148  0729  084A               	movf	dtoa@n+6,w
  2149  072A  00AE               	movwf	___aomod@dividend+6
  2150  072B  084B               	movf	dtoa@n+7,w
  2151  072C  00AF               	movwf	___aomod@dividend+7
  2152  072D  3183  239A  3186   	fcall	___aomod
  2153  0730  0020               	movlb	0	; select bank0
  2154  0731  0821               	movf	?___aomod+1,w
  2155  0732  00F4               	movwf	abs@a+1
  2156  0733  0820               	movf	?___aomod,w
  2157  0734  00F3               	movwf	abs@a
  2158  0735  318F  2790  3186   	fcall	_abs
  2159  0738  0873               	movf	?_abs,w
  2160  0739  3E30               	addlw	48
  2161  073A  0020               	movlb	0	; select bank0
  2162  073B  00B8               	movwf	??_dtoa
  2163  073C  084C               	movf	dtoa@i,w
  2164  073D  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2165  073E  0086               	movwf	6
  2166  073F  3001               	movlw	1	; select bank2/3
  2167  0740  0087               	movwf	7
  2168  0741  0838               	movf	??_dtoa,w
  2169  0742  0081               	movwf	1
  2170  0743                     l1401:
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  2173  0743  30FF               	movlw	255
  2174  0744  07BE               	addwf	dtoa@p,f
  2175  0745  30FF               	movlw	255
  2176  0746  3DBF               	addwfc	dtoa@p+1,f
  2177  0747                     l1403:
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  2180  0747  30FF               	movlw	255
  2181  0748  07C0               	addwf	dtoa@w,f
  2182  0749  30FF               	movlw	255
  2183  074A  3DC1               	addwfc	dtoa@w+1,f
  2184  074B                     l1405:
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2187  074B  300A               	movlw	10
  2188  074C  00A0               	movwf	___aodiv@divisor
  2189  074D  01A1               	clrf	___aodiv@divisor+1
  2190  074E  01A2               	clrf	___aodiv@divisor+2
  2191  074F  01A3               	clrf	___aodiv@divisor+3
  2192  0750  01A4               	clrf	___aodiv@divisor+4
  2193  0751  01A5               	clrf	___aodiv@divisor+5
  2194  0752  01A6               	clrf	___aodiv@divisor+6
  2195  0753  01A7               	clrf	___aodiv@divisor+7
  2196  0754  0844               	movf	dtoa@n,w
  2197  0755  00A8               	movwf	___aodiv@dividend
  2198  0756  0845               	movf	dtoa@n+1,w
  2199  0757  00A9               	movwf	___aodiv@dividend+1
  2200  0758  0846               	movf	dtoa@n+2,w
  2201  0759  00AA               	movwf	___aodiv@dividend+2
  2202  075A  0847               	movf	dtoa@n+3,w
  2203  075B  00AB               	movwf	___aodiv@dividend+3
  2204  075C  0848               	movf	dtoa@n+4,w
  2205  075D  00AC               	movwf	___aodiv@dividend+4
  2206  075E  0849               	movf	dtoa@n+5,w
  2207  075F  00AD               	movwf	___aodiv@dividend+5
  2208  0760  084A               	movf	dtoa@n+6,w
  2209  0761  00AE               	movwf	___aodiv@dividend+6
  2210  0762  084B               	movf	dtoa@n+7,w
  2211  0763  00AF               	movwf	___aodiv@dividend+7
  2212  0764  3184  2484  3186   	fcall	___aodiv
  2213  0767  0020               	movlb	0	; select bank0
  2214  0768  0820               	movf	?___aodiv,w
  2215  0769  00C4               	movwf	dtoa@n
  2216  076A  0821               	movf	?___aodiv+1,w
  2217  076B  00C5               	movwf	dtoa@n+1
  2218  076C  0822               	movf	?___aodiv+2,w
  2219  076D  00C6               	movwf	dtoa@n+2
  2220  076E  0823               	movf	?___aodiv+3,w
  2221  076F  00C7               	movwf	dtoa@n+3
  2222  0770  0824               	movf	?___aodiv+4,w
  2223  0771  00C8               	movwf	dtoa@n+4
  2224  0772  0825               	movf	?___aodiv+5,w
  2225  0773  00C9               	movwf	dtoa@n+5
  2226  0774  0826               	movf	?___aodiv+6,w
  2227  0775  00CA               	movwf	dtoa@n+6
  2228  0776  0827               	movf	?___aodiv+7,w
  2229  0777  00CB               	movwf	dtoa@n+7
  2230  0778                     l661:	
  2231                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 318:     }
  2232                           
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2235  0778  0020               	movlb	0	; select bank0
  2236  0779  084D               	movf	dtoa@i+1,w
  2237  077A  3A80               	xorlw	128
  2238  077B  00B8               	movwf	??_dtoa
  2239  077C  3080               	movlw	128
  2240  077D  0238               	subwf	??_dtoa,w
  2241  077E  1D03               	skipz
  2242  077F  2F82               	goto	u1415
  2243  0780  3001               	movlw	1
  2244  0781  024C               	subwf	dtoa@i,w
  2245  0782                     u1415:
  2246  0782  1C03               	skipc
  2247  0783  2F85               	goto	u1411
  2248  0784  2F86               	goto	u1410
  2249  0785                     u1411:
  2250  0785  2FB3               	goto	l1415
  2251  0786                     u1410:
  2252  0786                     l1407:
  2253  0786  0020               	movlb	0	; select bank0
  2254  0787  0844               	movf	dtoa@n,w
  2255  0788  0445               	iorwf	dtoa@n+1,w
  2256  0789  0446               	iorwf	dtoa@n+2,w
  2257  078A  0447               	iorwf	dtoa@n+3,w
  2258  078B  0448               	iorwf	dtoa@n+4,w
  2259  078C  0449               	iorwf	dtoa@n+5,w
  2260  078D  044A               	iorwf	dtoa@n+6,w
  2261  078E  044B               	iorwf	dtoa@n+7,w
  2262  078F  1D03               	skipz
  2263  0790  2F92               	goto	u1421
  2264  0791  2F93               	goto	u1420
  2265  0792                     u1421:
  2266  0792  2F0F               	goto	l1397
  2267  0793                     u1420:
  2268  0793                     l1409:
  2269  0793  083F               	movf	dtoa@p+1,w
  2270  0794  3A80               	xorlw	128
  2271  0795  00B8               	movwf	??_dtoa
  2272  0796  3080               	movlw	128
  2273  0797  0238               	subwf	??_dtoa,w
  2274  0798  1D03               	skipz
  2275  0799  2F9C               	goto	u1435
  2276  079A  3001               	movlw	1
  2277  079B  023E               	subwf	dtoa@p,w
  2278  079C                     u1435:
  2279  079C  1803               	skipnc
  2280  079D  2F9F               	goto	u1431
  2281  079E  2FA0               	goto	u1430
  2282  079F                     u1431:
  2283  079F  2F0F               	goto	l1397
  2284  07A0                     u1430:
  2285  07A0                     l1411:
  2286  07A0  0020               	movlb	0	; select bank0
  2287  07A1  0841               	movf	dtoa@w+1,w
  2288  07A2  3A80               	xorlw	128
  2289  07A3  00B8               	movwf	??_dtoa
  2290  07A4  3080               	movlw	128
  2291  07A5  0238               	subwf	??_dtoa,w
  2292  07A6  1D03               	skipz
  2293  07A7  2FAA               	goto	u1445
  2294  07A8  3001               	movlw	1
  2295  07A9  0240               	subwf	dtoa@w,w
  2296  07AA                     u1445:
  2297  07AA  1C03               	skipc
  2298  07AB  2FAD               	goto	u1441
  2299  07AC  2FAE               	goto	u1440
  2300  07AD                     u1441:
  2301  07AD  2FB3               	goto	l1415
  2302  07AE                     u1440:
  2303  07AE                     l1413:
  2304  07AE  0020               	movlb	0	; select bank0
  2305  07AF  18EC               	btfsc	_flags,1
  2306  07B0  2FB2               	goto	u1451
  2307  07B1  2FB3               	goto	u1450
  2308  07B2                     u1451:
  2309  07B2  2F0F               	goto	l1397
  2310  07B3                     u1450:
  2311  07B3                     l1415:
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2314  07B3  0020               	movlb	0	; select bank0
  2315  07B4  0842               	movf	dtoa@s,w
  2316  07B5  0443               	iorwf	dtoa@s+1,w
  2317  07B6  1D03               	btfss	3,2
  2318  07B7  2FB9               	goto	u1461
  2319  07B8  2FBA               	goto	u1460
  2320  07B9                     u1461:
  2321  07B9  2FBE               	goto	l1419
  2322  07BA                     u1460:
  2323  07BA                     l1417:
  2324  07BA  1D6C               	btfss	_flags,2
  2325  07BB  2FBD               	goto	u1471
  2326  07BC  2FBE               	goto	u1470
  2327  07BD                     u1471:
  2328  07BD  2FDA               	goto	l1429
  2329  07BE                     u1470:
  2330  07BE                     l1419:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  2333  07BE  30FF               	movlw	255
  2334  07BF  07CC               	addwf	dtoa@i,f
  2335  07C0  30FF               	movlw	255
  2336  07C1  3DCD               	addwfc	dtoa@i+1,f
  2337  07C2                     l1421:
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2340  07C2  0842               	movf	dtoa@s,w
  2341  07C3  0443               	iorwf	dtoa@s+1,w
  2342  07C4  1D03               	btfss	3,2
  2343  07C5  2FC7               	goto	u1481
  2344  07C6  2FC8               	goto	u1480
  2345  07C7                     u1481:
  2346  07C7  2FCD               	goto	l1425
  2347  07C8                     u1480:
  2348  07C8                     l1423:
  2349  07C8  302B               	movlw	43
  2350  07C9  00BB               	movwf	_dtoa$535
  2351  07CA  3000               	movlw	0
  2352  07CB  00BC               	movwf	_dtoa$535+1
  2353  07CC  2FD1               	goto	l1427
  2354  07CD                     l1425:
  2355  07CD  302D               	movlw	45
  2356  07CE  00BB               	movwf	_dtoa$535
  2357  07CF  3000               	movlw	0
  2358  07D0  00BC               	movwf	_dtoa$535+1
  2359  07D1                     l1427:
  2360  07D1  083B               	movf	_dtoa$535,w
  2361  07D2  00B8               	movwf	??_dtoa
  2362  07D3  084C               	movf	dtoa@i,w
  2363  07D4  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2364  07D5  0086               	movwf	6
  2365  07D6  3001               	movlw	1	; select bank2/3
  2366  07D7  0087               	movwf	7
  2367  07D8  0838               	movf	??_dtoa,w
  2368  07D9  0081               	movwf	1
  2369  07DA                     l1429:
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2372  07DA  084C               	movf	dtoa@i,w
  2373  07DB  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2374  07DC  00B8               	movwf	??_dtoa
  2375  07DD  0838               	movf	??_dtoa,w
  2376  07DE  00A4               	movwf	pad@buf
  2377  07DF  0841               	movf	dtoa@w+1,w
  2378  07E0  00A6               	movwf	pad@p+1
  2379  07E1  0840               	movf	dtoa@w,w
  2380  07E2  00A5               	movwf	pad@p
  2381  07E3  083D               	movf	dtoa@fp,w
  2382  07E4  3182  220C  3186   	fcall	_pad
  2383  07E7  0020               	movlb	0	; select bank0
  2384  07E8  0825               	movf	?_pad+1,w
  2385  07E9  00B1               	movwf	?_dtoa+1
  2386  07EA  0824               	movf	?_pad,w
  2387  07EB  00B0               	movwf	?_dtoa
  2388  07EC                     l675:
  2389  07EC  0008               	return
  2390  07ED                     __end_of_dtoa:
  2391                           
  2392                           	psect	text5
  2393  020C                     __ptext5:	
  2394 ;; *************** function _pad *****************
  2395 ;; Defined at:
  2396 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  fp              1    wreg     PTR struct _IO_FILE
  2399 ;;		 -> sprintf@f(10), 
  2400 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2401 ;;		 -> dbuf(32), 
  2402 ;;  p               2    5[BANK0 ] int 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  2405 ;;		 -> sprintf@f(10), 
  2406 ;;  w               2    9[BANK0 ] int 
  2407 ;;  i               2    7[BANK0 ] int 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  2    4[BANK0 ] int 
  2410 ;; Registers used:
  2411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2417 ;;      Params:         0       3       0       0       0       0       0       0
  2418 ;;      Locals:         0       5       0       0       0       0       0       0
  2419 ;;      Temps:          1       0       0       0       0       0       0       0
  2420 ;;      Totals:         1       8       0       0       0       0       0       0
  2421 ;;Total ram usage:        9 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 3
  2424 ;; This function calls:
  2425 ;;		_fputc
  2426 ;;		_fputs
  2427 ;;		_strlen
  2428 ;; This function is called by:
  2429 ;;		_dtoa
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433  020C                     _pad:	
  2434                           ;psect for function _pad
  2435                           
  2436                           
  2437                           ;incstack = 0
  2438                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2439                           ;pad@fp stored from wreg
  2440  020C  0020               	movlb	0	; select bank0
  2441  020D  00AB               	movwf	pad@fp
  2442  020E                     l1315:
  2443                           
  2444                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2445  020E  1C6C               	btfss	_flags,0
  2446  020F  2A11               	goto	u1201
  2447  0210  2A12               	goto	u1200
  2448  0211                     u1201:
  2449  0211  2A1A               	goto	l1319
  2450  0212                     u1200:
  2451  0212                     l1317:
  2452                           
  2453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2454  0212  082B               	movf	pad@fp,w
  2455  0213  00FC               	movwf	??_pad
  2456  0214  087C               	movf	??_pad,w
  2457  0215  00F8               	movwf	fputs@fp
  2458  0216  0824               	movf	pad@buf,w
  2459  0217  3180  20B6  3182   	fcall	_fputs
  2460  021A                     l1319:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2463  021A  0020               	movlb	0	; select bank0
  2464  021B  1BA6               	btfsc	pad@p+1,7
  2465  021C  2A1E               	goto	u1211
  2466  021D  2A1F               	goto	u1210
  2467  021E                     u1211:
  2468  021E  2A24               	goto	l1323
  2469  021F                     u1210:
  2470  021F                     l1321:
  2471  021F  0826               	movf	pad@p+1,w
  2472  0220  00AA               	movwf	pad@w+1
  2473  0221  0825               	movf	pad@p,w
  2474  0222  00A9               	movwf	pad@w
  2475  0223  2A26               	goto	l644
  2476  0224                     l1323:
  2477  0224  01A9               	clrf	pad@w
  2478  0225  01AA               	clrf	pad@w+1
  2479  0226                     l644:
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2482  0226  01A7               	clrf	pad@i
  2483  0227  01A8               	clrf	pad@i+1
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2486  0228  2A3A               	goto	l1329
  2487  0229                     l1325:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2490  0229  3020               	movlw	32
  2491  022A  00F0               	movwf	fputc@c
  2492  022B  3000               	movlw	0
  2493  022C  00F1               	movwf	fputc@c+1
  2494  022D  0020               	movlb	0	; select bank0
  2495  022E  082B               	movf	pad@fp,w
  2496  022F  00FC               	movwf	??_pad
  2497  0230  087C               	movf	??_pad,w
  2498  0231  00F2               	movwf	fputc@fp
  2499  0232  3181  2167  3182   	fcall	_fputc
  2500  0235                     l1327:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2503  0235  3001               	movlw	1
  2504  0236  0020               	movlb	0	; select bank0
  2505  0237  07A7               	addwf	pad@i,f
  2506  0238  3000               	movlw	0
  2507  0239  3DA8               	addwfc	pad@i+1,f
  2508  023A                     l1329:
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2511  023A  0828               	movf	pad@i+1,w
  2512  023B  3A80               	xorlw	128
  2513  023C  00FC               	movwf	??_pad
  2514  023D  082A               	movf	pad@w+1,w
  2515  023E  3A80               	xorlw	128
  2516  023F  027C               	subwf	??_pad,w
  2517  0240  1D03               	skipz
  2518  0241  2A44               	goto	u1225
  2519  0242  0829               	movf	pad@w,w
  2520  0243  0227               	subwf	pad@i,w
  2521  0244                     u1225:
  2522  0244  1C03               	skipc
  2523  0245  2A47               	goto	u1221
  2524  0246  2A48               	goto	u1220
  2525  0247                     u1221:
  2526  0247  2A29               	goto	l1325
  2527  0248                     u1220:
  2528  0248                     l647:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2531  0248  0020               	movlb	0	; select bank0
  2532  0249  186C               	btfsc	_flags,0
  2533  024A  2A4C               	goto	u1231
  2534  024B  2A4D               	goto	u1230
  2535  024C                     u1231:
  2536  024C  2A55               	goto	l1333
  2537  024D                     u1230:
  2538  024D                     l1331:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2541  024D  082B               	movf	pad@fp,w
  2542  024E  00FC               	movwf	??_pad
  2543  024F  087C               	movf	??_pad,w
  2544  0250  00F8               	movwf	fputs@fp
  2545  0251  0824               	movf	pad@buf,w
  2546  0252  3180  20B6  3182   	fcall	_fputs
  2547  0255                     l1333:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2550  0255  0020               	movlb	0	; select bank0
  2551  0256  0824               	movf	pad@buf,w
  2552  0257  318F  27AA  3182   	fcall	_strlen
  2553  025A  0020               	movlb	0	; select bank0
  2554  025B  0829               	movf	pad@w,w
  2555  025C  0770               	addwf	?_strlen,w
  2556  025D  00A4               	movwf	?_pad
  2557  025E  082A               	movf	pad@w+1,w
  2558  025F  3D71               	addwfc	?_strlen+1,w
  2559  0260  00A5               	movwf	?_pad+1
  2560  0261                     l649:
  2561  0261  0008               	return
  2562  0262                     __end_of_pad:
  2563                           
  2564                           	psect	text6
  2565  0FAA                     __ptext6:	
  2566 ;; *************** function _strlen *****************
  2567 ;; Defined at:
  2568 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  s               1    wreg     PTR const unsigned char 
  2571 ;;		 -> dbuf(32), 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  s               1    4[COMMON] PTR const unsigned char 
  2574 ;;		 -> dbuf(32), 
  2575 ;;  a               1    3[COMMON] PTR const unsigned char 
  2576 ;;		 -> dbuf(32), 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  2    0[COMMON] unsigned int 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2586 ;;      Params:         2       0       0       0       0       0       0       0
  2587 ;;      Locals:         2       0       0       0       0       0       0       0
  2588 ;;      Temps:          1       0       0       0       0       0       0       0
  2589 ;;      Totals:         5       0       0       0       0       0       0       0
  2590 ;;Total ram usage:        5 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_pad
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599  0FAA                     _strlen:	
  2600                           ;psect for function _strlen
  2601                           
  2602                           
  2603                           ;incstack = 0
  2604                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2605                           ;strlen@s stored from wreg
  2606  0FAA  00F4               	movwf	strlen@s
  2607  0FAB                     l1237:
  2608  0FAB  0874               	movf	strlen@s,w
  2609  0FAC  00F2               	movwf	??_strlen
  2610  0FAD  0872               	movf	??_strlen,w
  2611  0FAE  00F3               	movwf	strlen@a
  2612  0FAF  2FB4               	goto	l1241
  2613  0FB0                     l1239:
  2614  0FB0  3001               	movlw	1
  2615  0FB1  00F2               	movwf	??_strlen
  2616  0FB2  0872               	movf	??_strlen,w
  2617  0FB3  07F4               	addwf	strlen@s,f
  2618  0FB4                     l1241:
  2619  0FB4  0874               	movf	strlen@s,w
  2620  0FB5  0086               	movwf	6
  2621  0FB6  3001               	movlw	1	; select bank2/3
  2622  0FB7  0087               	movwf	7
  2623  0FB8  0801               	movf	1,w
  2624  0FB9  1D03               	btfss	3,2
  2625  0FBA  2FBC               	goto	u981
  2626  0FBB  2FBD               	goto	u980
  2627  0FBC                     u981:
  2628  0FBC  2FB0               	goto	l1239
  2629  0FBD                     u980:
  2630  0FBD                     l1243:
  2631  0FBD  0873               	movf	strlen@a,w
  2632  0FBE  0274               	subwf	strlen@s,w
  2633  0FBF  00F0               	movwf	?_strlen
  2634  0FC0  01F1               	clrf	?_strlen+1
  2635  0FC1  1BF0               	btfsc	?_strlen,7
  2636  0FC2  03F1               	decf	?_strlen+1,f
  2637  0FC3                     l725:
  2638  0FC3  0008               	return
  2639  0FC4                     __end_of_strlen:
  2640                           
  2641                           	psect	text7
  2642  00B6                     __ptext7:	
  2643 ;; *************** function _fputs *****************
  2644 ;; Defined at:
  2645 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  s               1    wreg     PTR const unsigned char 
  2648 ;;		 -> dbuf(32), 
  2649 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2650 ;;		 -> sprintf@f(10), 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2653 ;;		 -> dbuf(32), 
  2654 ;;  i               2    1[BANK0 ] int 
  2655 ;;  c               1    0[BANK0 ] unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  2    8[COMMON] int 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2665 ;;      Params:         1       0       0       0       0       0       0       0
  2666 ;;      Locals:         0       4       0       0       0       0       0       0
  2667 ;;      Temps:          3       0       0       0       0       0       0       0
  2668 ;;      Totals:         4       4       0       0       0       0       0       0
  2669 ;;Total ram usage:        8 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 2
  2672 ;; This function calls:
  2673 ;;		_fputc
  2674 ;; This function is called by:
  2675 ;;		_pad
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679  00B6                     _fputs:	
  2680                           ;psect for function _fputs
  2681                           
  2682                           
  2683                           ;incstack = 0
  2684                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2685                           ;fputs@s stored from wreg
  2686  00B6  0020               	movlb	0	; select bank0
  2687  00B7  00A3               	movwf	fputs@s
  2688  00B8                     l1229:
  2689  00B8  01A1               	clrf	fputs@i
  2690  00B9  01A2               	clrf	fputs@i+1
  2691  00BA  28CE               	goto	l1235
  2692  00BB                     l1231:
  2693  00BB  0820               	movf	fputs@c,w
  2694  00BC  00F9               	movwf	??_fputs
  2695  00BD  01FA               	clrf	??_fputs+1
  2696  00BE  0879               	movf	??_fputs,w
  2697  00BF  00F0               	movwf	fputc@c
  2698  00C0  087A               	movf	??_fputs+1,w
  2699  00C1  00F1               	movwf	fputc@c+1
  2700  00C2  0878               	movf	fputs@fp,w
  2701  00C3  00FB               	movwf	??_fputs+2
  2702  00C4  087B               	movf	??_fputs+2,w
  2703  00C5  00F2               	movwf	fputc@fp
  2704  00C6  3181  2167  3180   	fcall	_fputc
  2705  00C9                     l1233:
  2706  00C9  3001               	movlw	1
  2707  00CA  0020               	movlb	0	; select bank0
  2708  00CB  07A1               	addwf	fputs@i,f
  2709  00CC  3000               	movlw	0
  2710  00CD  3DA2               	addwfc	fputs@i+1,f
  2711  00CE                     l1235:
  2712  00CE  0821               	movf	fputs@i,w
  2713  00CF  0723               	addwf	fputs@s,w
  2714  00D0  00F9               	movwf	??_fputs
  2715  00D1  0879               	movf	??_fputs,w
  2716  00D2  0086               	movwf	6
  2717  00D3  3001               	movlw	1	; select bank2/3
  2718  00D4  0087               	movwf	7
  2719  00D5  0801               	movf	1,w
  2720  00D6  00FA               	movwf	??_fputs+1
  2721  00D7  087A               	movf	??_fputs+1,w
  2722  00D8  00A0               	movwf	fputs@c
  2723  00D9  0820               	movf	fputs@c,w
  2724  00DA  1D03               	btfss	3,2
  2725  00DB  28DD               	goto	u971
  2726  00DC  28DE               	goto	u970
  2727  00DD                     u971:
  2728  00DD  28BB               	goto	l1231
  2729  00DE                     u970:
  2730  00DE                     l716:
  2731  00DE  0008               	return
  2732  00DF                     __end_of_fputs:
  2733                           
  2734                           	psect	text8
  2735  0167                     __ptext8:	
  2736 ;; *************** function _fputc *****************
  2737 ;; Defined at:
  2738 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  c               2    0[COMMON] int 
  2741 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  2742 ;;		 -> sprintf@f(10), 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  2    0[COMMON] int 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2754 ;;      Params:         3       0       0       0       0       0       0       0
  2755 ;;      Locals:         0       0       0       0       0       0       0       0
  2756 ;;      Temps:          5       0       0       0       0       0       0       0
  2757 ;;      Totals:         8       0       0       0       0       0       0       0
  2758 ;;Total ram usage:        8 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 1
  2761 ;; This function calls:
  2762 ;;		_putch
  2763 ;; This function is called by:
  2764 ;;		_pad
  2765 ;;		_vfpfcnvrt
  2766 ;;		_fputs
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770  0167                     _fputc:	
  2771                           ;psect for function _fputc
  2772                           
  2773  0167                     l1213:	
  2774                           ;incstack = 0
  2775                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2776                           
  2777  0167  0872               	movf	fputc@fp,w
  2778  0168  1903               	btfsc	3,2
  2779  0169  296B               	goto	u931
  2780  016A  296C               	goto	u930
  2781  016B                     u931:
  2782  016B  2971               	goto	l1217
  2783  016C                     u930:
  2784  016C                     l1215:
  2785  016C  0872               	movf	fputc@fp,w
  2786  016D  1D03               	btfss	3,2
  2787  016E  2970               	goto	u941
  2788  016F  2971               	goto	u940
  2789  0170                     u941:
  2790  0170  2976               	goto	l1219
  2791  0171                     u940:
  2792  0171                     l1217:
  2793  0171  0870               	movf	fputc@c,w
  2794  0172  3180  2015  3181   	fcall	_putch
  2795  0175  29B8               	goto	l708
  2796  0176                     l1219:
  2797  0176  0872               	movf	fputc@fp,w
  2798  0177  3E08               	addlw	8
  2799  0178  0086               	movwf	6
  2800  0179  0187               	clrf	7
  2801  017A  0016               	moviw fsr1++
  2802  017B  0401               	iorwf	1,w
  2803  017C  1903               	btfsc	3,2
  2804  017D  297F               	goto	u951
  2805  017E  2980               	goto	u950
  2806  017F                     u951:
  2807  017F  299E               	goto	l1223
  2808  0180                     u950:
  2809  0180                     l1221:
  2810  0180  0872               	movf	fputc@fp,w
  2811  0181  3E08               	addlw	8
  2812  0182  0086               	movwf	6
  2813  0183  0187               	clrf	7
  2814  0184  3F40               	moviw [0]fsr1
  2815  0185  00F3               	movwf	??_fputc
  2816  0186  3F41               	moviw [1]fsr1
  2817  0187  00F4               	movwf	??_fputc+1
  2818  0188  0872               	movf	fputc@fp,w
  2819  0189  3E02               	addlw	2
  2820  018A  0086               	movwf	6
  2821  018B  0187               	clrf	7
  2822  018C  3F40               	moviw [0]fsr1
  2823  018D  00F5               	movwf	??_fputc+2
  2824  018E  3F41               	moviw [1]fsr1
  2825  018F  00F6               	movwf	??_fputc+3
  2826  0190  0876               	movf	??_fputc+3,w
  2827  0191  3A80               	xorlw	128
  2828  0192  00F7               	movwf	??_fputc+4
  2829  0193  0874               	movf	??_fputc+1,w
  2830  0194  3A80               	xorlw	128
  2831  0195  0277               	subwf	??_fputc+4,w
  2832  0196  1D03               	skipz
  2833  0197  299A               	goto	u965
  2834  0198  0873               	movf	??_fputc,w
  2835  0199  0275               	subwf	??_fputc+2,w
  2836  019A                     u965:
  2837  019A  1803               	skipnc
  2838  019B  299D               	goto	u961
  2839  019C  299E               	goto	u960
  2840  019D                     u961:
  2841  019D  29B8               	goto	l708
  2842  019E                     u960:
  2843  019E                     l1223:
  2844  019E  0870               	movf	fputc@c,w
  2845  019F  00F3               	movwf	??_fputc
  2846  01A0  0872               	movf	fputc@fp,w
  2847  01A1  0086               	movwf	6
  2848  01A2  0187               	clrf	7
  2849  01A3  0872               	movf	fputc@fp,w
  2850  01A4  3E02               	addlw	2
  2851  01A5  0084               	movwf	4
  2852  01A6  0185               	clrf	5
  2853  01A7  0800               	movf	0,w
  2854  01A8  0701               	addwf	1,w
  2855  01A9  00F4               	movwf	??_fputc+1
  2856  01AA  0874               	movf	??_fputc+1,w
  2857  01AB  0086               	movwf	6
  2858  01AC  0187               	clrf	7
  2859  01AD  0873               	movf	??_fputc,w
  2860  01AE  0081               	movwf	1
  2861  01AF                     l1225:
  2862  01AF  0872               	movf	fputc@fp,w
  2863  01B0  3E02               	addlw	2
  2864  01B1  0086               	movwf	6
  2865  01B2  0187               	clrf	7
  2866  01B3  3001               	movlw	1
  2867  01B4  0781               	addwf	1,f
  2868  01B5  3141               	addfsr 1,1
  2869  01B6  1803               	skipnc
  2870  01B7  0A81               	incf	1,f
  2871  01B8                     l708:
  2872  01B8  0008               	return
  2873  01B9                     __end_of_fputc:
  2874                           
  2875                           	psect	text9
  2876  0015                     __ptext9:	
  2877 ;; *************** function _putch *****************
  2878 ;; Defined at:
  2879 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  c               1    wreg     unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  c               1    0[COMMON] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2893 ;;      Params:         0       0       0       0       0       0       0       0
  2894 ;;      Locals:         0       0       0       0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0
  2896 ;;      Totals:         0       0       0       0       0       0       0       0
  2897 ;;Total ram usage:        0 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_fputc
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906  0015                     _putch:	
  2907                           ;psect for function _putch
  2908                           
  2909  0015                     l719:	
  2910                           ;incstack = 0
  2911                           ; Regs used in _putch: [wreg]
  2912                           
  2913  0015  0008               	return
  2914  0016                     __end_of_putch:
  2915                           
  2916                           	psect	text10
  2917  0F90                     __ptext10:	
  2918 ;; *************** function _abs *****************
  2919 ;; Defined at:
  2920 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  a               2    3[COMMON] int 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  2    3[COMMON] int 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2934 ;;      Params:         2       0       0       0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0
  2936 ;;      Temps:          2       0       0       0       0       0       0       0
  2937 ;;      Totals:         4       0       0       0       0       0       0       0
  2938 ;;Total ram usage:        4 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_dtoa
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947  0F90                     _abs:	
  2948                           ;psect for function _abs
  2949                           
  2950  0F90                     l1337:	
  2951                           ;incstack = 0
  2952                           ; Regs used in _abs: [wreg+status,2+status,0]
  2953                           
  2954  0F90  0874               	movf	abs@a+1,w
  2955  0F91  3A80               	xorlw	128
  2956  0F92  00F5               	movwf	??_abs
  2957  0F93  3080               	movlw	128
  2958  0F94  0275               	subwf	??_abs,w
  2959  0F95  1D03               	skipz
  2960  0F96  2F99               	goto	u1245
  2961  0F97  3001               	movlw	1
  2962  0F98  0273               	subwf	abs@a,w
  2963  0F99                     u1245:
  2964  0F99  1803               	skipnc
  2965  0F9A  2F9C               	goto	u1241
  2966  0F9B  2F9D               	goto	u1240
  2967  0F9C                     u1241:
  2968  0F9C  2FA9               	goto	l693
  2969  0F9D                     u1240:
  2970  0F9D                     l1339:
  2971  0F9D  0973               	comf	abs@a,w
  2972  0F9E  00F5               	movwf	??_abs
  2973  0F9F  0974               	comf	abs@a+1,w
  2974  0FA0  00F6               	movwf	??_abs+1
  2975  0FA1  0AF5               	incf	??_abs,f
  2976  0FA2  1903               	skipnz
  2977  0FA3  0AF6               	incf	??_abs+1,f
  2978  0FA4  0875               	movf	??_abs,w
  2979  0FA5  00F3               	movwf	?_abs
  2980  0FA6  0876               	movf	??_abs+1,w
  2981  0FA7  00F4               	movwf	?_abs+1
  2982  0FA8  2FA9               	goto	l696
  2983  0FA9                     l693:
  2984  0FA9                     l696:
  2985  0FA9  0008               	return
  2986  0FAA                     __end_of_abs:
  2987                           
  2988                           	psect	text11
  2989  039A                     __ptext11:	
  2990 ;; *************** function ___aomod *****************
  2991 ;; Defined at:
  2992 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  divisor         8    0[BANK0 ] long long 
  2995 ;;  dividend        8    8[BANK0 ] long long 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  sign            1    2[COMMON] unsigned char 
  2998 ;;  counter         1    1[COMMON] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  8    0[BANK0 ] long long 
  3001 ;; Registers used:
  3002 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3008 ;;      Params:         0      16       0       0       0       0       0       0
  3009 ;;      Locals:         2       0       0       0       0       0       0       0
  3010 ;;      Temps:          1       0       0       0       0       0       0       0
  3011 ;;      Totals:         3      16       0       0       0       0       0       0
  3012 ;;Total ram usage:       19 bytes
  3013 ;; Hardware stack levels used: 1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_dtoa
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021  039A                     ___aomod:	
  3022                           ;psect for function ___aomod
  3023                           
  3024  039A                     l1285:	
  3025                           ;incstack = 0
  3026                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3027                           
  3028  039A  01F2               	clrf	___aomod@sign
  3029  039B                     l1287:
  3030  039B  3028               	movlw	low ___aomod@dividend
  3031  039C  0086               	movwf	6
  3032  039D  3000               	movlw	high ___aomod@dividend
  3033  039E  0087               	movwf	7
  3034  039F  3F47               	moviw [7]fsr1
  3035  03A0  00F0               	movwf	??___aomod
  3036  03A1  1FF0               	btfss	??___aomod,7
  3037  03A2  2BA4               	goto	u1101
  3038  03A3  2BA5               	goto	u1100
  3039  03A4                     u1101:
  3040  03A4  2BC6               	goto	l1291
  3041  03A5                     u1100:
  3042  03A5                     l1289:
  3043  03A5  0020               	movlb	0	; select bank0
  3044  03A6  09A8               	comf	___aomod@dividend,f
  3045  03A7  09A9               	comf	___aomod@dividend+1,f
  3046  03A8  09AA               	comf	___aomod@dividend+2,f
  3047  03A9  09AB               	comf	___aomod@dividend+3,f
  3048  03AA  09AC               	comf	___aomod@dividend+4,f
  3049  03AB  09AD               	comf	___aomod@dividend+5,f
  3050  03AC  09AE               	comf	___aomod@dividend+6,f
  3051  03AD  09AF               	comf	___aomod@dividend+7,f
  3052  03AE  0AA8               	incf	___aomod@dividend,f
  3053  03AF  1D03               	skipz
  3054  03B0  2BC4               	goto	u111lld
  3055  03B1  0AA9               	incf	___aomod@dividend+1,f
  3056  03B2  1D03               	skipz
  3057  03B3  2BC4               	goto	u111lld
  3058  03B4  0AAA               	incf	___aomod@dividend+2,f
  3059  03B5  1D03               	skipz
  3060  03B6  2BC4               	goto	u111lld
  3061  03B7  0AAB               	incf	___aomod@dividend+3,f
  3062  03B8  1D03               	skipz
  3063  03B9  2BC4               	goto	u111lld
  3064  03BA  0AAC               	incf	___aomod@dividend+4,f
  3065  03BB  1D03               	skipz
  3066  03BC  2BC4               	goto	u111lld
  3067  03BD  0AAD               	incf	___aomod@dividend+5,f
  3068  03BE  1D03               	skipz
  3069  03BF  2BC4               	goto	u111lld
  3070  03C0  0AAE               	incf	___aomod@dividend+6,f
  3071  03C1  1D03               	skipz
  3072  03C2  2BC4               	goto	u111lld
  3073  03C3  0AAF               	incf	___aomod@dividend+7,f
  3074  03C4                     u111lld:
  3075  03C4  01F2               	clrf	___aomod@sign
  3076  03C5  0AF2               	incf	___aomod@sign,f
  3077  03C6                     l1291:
  3078  03C6  3020               	movlw	low ___aomod@divisor
  3079  03C7  0086               	movwf	6
  3080  03C8  3000               	movlw	high ___aomod@divisor
  3081  03C9  0087               	movwf	7
  3082  03CA  3F47               	moviw [7]fsr1
  3083  03CB  00F0               	movwf	??___aomod
  3084  03CC  1FF0               	btfss	??___aomod,7
  3085  03CD  2BCF               	goto	u1121
  3086  03CE  2BD0               	goto	u1120
  3087  03CF                     u1121:
  3088  03CF  2BEF               	goto	l1295
  3089  03D0                     u1120:
  3090  03D0                     l1293:
  3091  03D0  0020               	movlb	0	; select bank0
  3092  03D1  09A0               	comf	___aomod@divisor,f
  3093  03D2  09A1               	comf	___aomod@divisor+1,f
  3094  03D3  09A2               	comf	___aomod@divisor+2,f
  3095  03D4  09A3               	comf	___aomod@divisor+3,f
  3096  03D5  09A4               	comf	___aomod@divisor+4,f
  3097  03D6  09A5               	comf	___aomod@divisor+5,f
  3098  03D7  09A6               	comf	___aomod@divisor+6,f
  3099  03D8  09A7               	comf	___aomod@divisor+7,f
  3100  03D9  0AA0               	incf	___aomod@divisor,f
  3101  03DA  1D03               	skipz
  3102  03DB  2BEF               	goto	u113lld
  3103  03DC  0AA1               	incf	___aomod@divisor+1,f
  3104  03DD  1D03               	skipz
  3105  03DE  2BEF               	goto	u113lld
  3106  03DF  0AA2               	incf	___aomod@divisor+2,f
  3107  03E0  1D03               	skipz
  3108  03E1  2BEF               	goto	u113lld
  3109  03E2  0AA3               	incf	___aomod@divisor+3,f
  3110  03E3  1D03               	skipz
  3111  03E4  2BEF               	goto	u113lld
  3112  03E5  0AA4               	incf	___aomod@divisor+4,f
  3113  03E6  1D03               	skipz
  3114  03E7  2BEF               	goto	u113lld
  3115  03E8  0AA5               	incf	___aomod@divisor+5,f
  3116  03E9  1D03               	skipz
  3117  03EA  2BEF               	goto	u113lld
  3118  03EB  0AA6               	incf	___aomod@divisor+6,f
  3119  03EC  1D03               	skipz
  3120  03ED  2BEF               	goto	u113lld
  3121  03EE  0AA7               	incf	___aomod@divisor+7,f
  3122  03EF                     u113lld:
  3123  03EF                     l1295:
  3124  03EF  0020               	movlb	0	; select bank0
  3125  03F0  0820               	movf	___aomod@divisor,w
  3126  03F1  0421               	iorwf	___aomod@divisor+1,w
  3127  03F2  0422               	iorwf	___aomod@divisor+2,w
  3128  03F3  0423               	iorwf	___aomod@divisor+3,w
  3129  03F4  0424               	iorwf	___aomod@divisor+4,w
  3130  03F5  0425               	iorwf	___aomod@divisor+5,w
  3131  03F6  0426               	iorwf	___aomod@divisor+6,w
  3132  03F7  0427               	iorwf	___aomod@divisor+7,w
  3133  03F8  1903               	skipnz
  3134  03F9  2BFB               	goto	u1141
  3135  03FA  2BFC               	goto	u1140
  3136  03FB                     u1141:
  3137  03FB  2C4F               	goto	l1311
  3138  03FC                     u1140:
  3139  03FC                     l1297:
  3140  03FC  01F1               	clrf	___aomod@counter
  3141  03FD  0AF1               	incf	___aomod@counter,f
  3142  03FE  2C0B               	goto	l1303
  3143  03FF                     l1299:
  3144  03FF  35A0               	lslf	___aomod@divisor,f
  3145  0400  0DA1               	rlf	___aomod@divisor+1,f
  3146  0401  0DA2               	rlf	___aomod@divisor+2,f
  3147  0402  0DA3               	rlf	___aomod@divisor+3,f
  3148  0403  0DA4               	rlf	___aomod@divisor+4,f
  3149  0404  0DA5               	rlf	___aomod@divisor+5,f
  3150  0405  0DA6               	rlf	___aomod@divisor+6,f
  3151  0406  0DA7               	rlf	___aomod@divisor+7,f
  3152  0407                     l1301:
  3153  0407  3001               	movlw	1
  3154  0408  00F0               	movwf	??___aomod
  3155  0409  0870               	movf	??___aomod,w
  3156  040A  07F1               	addwf	___aomod@counter,f
  3157  040B                     l1303:
  3158  040B  1FA7               	btfss	___aomod@divisor+7,7
  3159  040C  2C0E               	goto	u1151
  3160  040D  2C0F               	goto	u1150
  3161  040E                     u1151:
  3162  040E  2BFF               	goto	l1299
  3163  040F                     u1150:
  3164  040F                     l1305:
  3165  040F  0827               	movf	___aomod@divisor+7,w
  3166  0410  022F               	subwf	___aomod@dividend+7,w
  3167  0411  1D03               	skipz
  3168  0412  2C2D               	goto	u1165
  3169  0413  0826               	movf	___aomod@divisor+6,w
  3170  0414  022E               	subwf	___aomod@dividend+6,w
  3171  0415  1D03               	skipz
  3172  0416  2C2D               	goto	u1165
  3173  0417  0825               	movf	___aomod@divisor+5,w
  3174  0418  022D               	subwf	___aomod@dividend+5,w
  3175  0419  1D03               	skipz
  3176  041A  2C2D               	goto	u1165
  3177  041B  0824               	movf	___aomod@divisor+4,w
  3178  041C  022C               	subwf	___aomod@dividend+4,w
  3179  041D  1D03               	skipz
  3180  041E  2C2D               	goto	u1165
  3181  041F  0823               	movf	___aomod@divisor+3,w
  3182  0420  022B               	subwf	___aomod@dividend+3,w
  3183  0421  1D03               	skipz
  3184  0422  2C2D               	goto	u1165
  3185  0423  0822               	movf	___aomod@divisor+2,w
  3186  0424  022A               	subwf	___aomod@dividend+2,w
  3187  0425  1D03               	skipz
  3188  0426  2C2D               	goto	u1165
  3189  0427  0821               	movf	___aomod@divisor+1,w
  3190  0428  0229               	subwf	___aomod@dividend+1,w
  3191  0429  1D03               	skipz
  3192  042A  2C2D               	goto	u1165
  3193  042B  0820               	movf	___aomod@divisor,w
  3194  042C  0228               	subwf	___aomod@dividend,w
  3195  042D                     u1165:
  3196  042D  1C03               	skipc
  3197  042E  2C30               	goto	u1161
  3198  042F  2C31               	goto	u1160
  3199  0430                     u1161:
  3200  0430  2C41               	goto	l1309
  3201  0431                     u1160:
  3202  0431                     l1307:
  3203  0431  0820               	movf	___aomod@divisor,w
  3204  0432  02A8               	subwf	___aomod@dividend,f
  3205  0433  0821               	movf	___aomod@divisor+1,w
  3206  0434  3BA9               	subwfb	___aomod@dividend+1,f
  3207  0435  0822               	movf	___aomod@divisor+2,w
  3208  0436  3BAA               	subwfb	___aomod@dividend+2,f
  3209  0437  0823               	movf	___aomod@divisor+3,w
  3210  0438  3BAB               	subwfb	___aomod@dividend+3,f
  3211  0439  0824               	movf	___aomod@divisor+4,w
  3212  043A  3BAC               	subwfb	___aomod@dividend+4,f
  3213  043B  0825               	movf	___aomod@divisor+5,w
  3214  043C  3BAD               	subwfb	___aomod@dividend+5,f
  3215  043D  0826               	movf	___aomod@divisor+6,w
  3216  043E  3BAE               	subwfb	___aomod@dividend+6,f
  3217  043F  0827               	movf	___aomod@divisor+7,w
  3218  0440  3BAF               	subwfb	___aomod@dividend+7,f
  3219  0441                     l1309:
  3220  0441  36A7               	lsrf	___aomod@divisor+7,f
  3221  0442  0CA6               	rrf	___aomod@divisor+6,f
  3222  0443  0CA5               	rrf	___aomod@divisor+5,f
  3223  0444  0CA4               	rrf	___aomod@divisor+4,f
  3224  0445  0CA3               	rrf	___aomod@divisor+3,f
  3225  0446  0CA2               	rrf	___aomod@divisor+2,f
  3226  0447  0CA1               	rrf	___aomod@divisor+1,f
  3227  0448  0CA0               	rrf	___aomod@divisor,f
  3228  0449  3001               	movlw	1
  3229  044A  02F1               	subwf	___aomod@counter,f
  3230  044B  1D03               	btfss	3,2
  3231  044C  2C4E               	goto	u1171
  3232  044D  2C4F               	goto	u1170
  3233  044E                     u1171:
  3234  044E  2C0F               	goto	l1305
  3235  044F                     u1170:
  3236  044F                     l1311:
  3237  044F  0872               	movf	___aomod@sign,w
  3238  0450  1903               	btfsc	3,2
  3239  0451  2C53               	goto	u1181
  3240  0452  2C54               	goto	u1180
  3241  0453                     u1181:
  3242  0453  2C72               	goto	l267
  3243  0454                     u1180:
  3244  0454                     l1313:
  3245  0454  09A8               	comf	___aomod@dividend,f
  3246  0455  09A9               	comf	___aomod@dividend+1,f
  3247  0456  09AA               	comf	___aomod@dividend+2,f
  3248  0457  09AB               	comf	___aomod@dividend+3,f
  3249  0458  09AC               	comf	___aomod@dividend+4,f
  3250  0459  09AD               	comf	___aomod@dividend+5,f
  3251  045A  09AE               	comf	___aomod@dividend+6,f
  3252  045B  09AF               	comf	___aomod@dividend+7,f
  3253  045C  0AA8               	incf	___aomod@dividend,f
  3254  045D  1D03               	skipz
  3255  045E  2C72               	goto	u119lld
  3256  045F  0AA9               	incf	___aomod@dividend+1,f
  3257  0460  1D03               	skipz
  3258  0461  2C72               	goto	u119lld
  3259  0462  0AAA               	incf	___aomod@dividend+2,f
  3260  0463  1D03               	skipz
  3261  0464  2C72               	goto	u119lld
  3262  0465  0AAB               	incf	___aomod@dividend+3,f
  3263  0466  1D03               	skipz
  3264  0467  2C72               	goto	u119lld
  3265  0468  0AAC               	incf	___aomod@dividend+4,f
  3266  0469  1D03               	skipz
  3267  046A  2C72               	goto	u119lld
  3268  046B  0AAD               	incf	___aomod@dividend+5,f
  3269  046C  1D03               	skipz
  3270  046D  2C72               	goto	u119lld
  3271  046E  0AAE               	incf	___aomod@dividend+6,f
  3272  046F  1D03               	skipz
  3273  0470  2C72               	goto	u119lld
  3274  0471  0AAF               	incf	___aomod@dividend+7,f
  3275  0472                     u119lld:
  3276  0472                     l267:
  3277  0472  0020               	movlb	0	; select bank0
  3278  0473  0828               	movf	___aomod@dividend,w
  3279  0474  00A0               	movwf	?___aomod
  3280  0475  0829               	movf	___aomod@dividend+1,w
  3281  0476  00A1               	movwf	?___aomod+1
  3282  0477  082A               	movf	___aomod@dividend+2,w
  3283  0478  00A2               	movwf	?___aomod+2
  3284  0479  082B               	movf	___aomod@dividend+3,w
  3285  047A  00A3               	movwf	?___aomod+3
  3286  047B  082C               	movf	___aomod@dividend+4,w
  3287  047C  00A4               	movwf	?___aomod+4
  3288  047D  082D               	movf	___aomod@dividend+5,w
  3289  047E  00A5               	movwf	?___aomod+5
  3290  047F  082E               	movf	___aomod@dividend+6,w
  3291  0480  00A6               	movwf	?___aomod+6
  3292  0481  082F               	movf	___aomod@dividend+7,w
  3293  0482  00A7               	movwf	?___aomod+7
  3294  0483                     l268:
  3295  0483  0008               	return
  3296  0484                     __end_of___aomod:
  3297                           
  3298                           	psect	text12
  3299  0484                     __ptext12:	
  3300 ;; *************** function ___aodiv *****************
  3301 ;; Defined at:
  3302 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  divisor         8    0[BANK0 ] long long 
  3305 ;;  dividend        8    8[BANK0 ] long long 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  quotient        8    3[COMMON] long long 
  3308 ;;  sign            1    2[COMMON] unsigned char 
  3309 ;;  counter         1    1[COMMON] unsigned char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  8    0[BANK0 ] long long 
  3312 ;; Registers used:
  3313 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3319 ;;      Params:         0      16       0       0       0       0       0       0
  3320 ;;      Locals:        10       0       0       0       0       0       0       0
  3321 ;;      Temps:          1       0       0       0       0       0       0       0
  3322 ;;      Totals:        11      16       0       0       0       0       0       0
  3323 ;;Total ram usage:       27 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_dtoa
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332  0484                     ___aodiv:	
  3333                           ;psect for function ___aodiv
  3334                           
  3335  0484                     l1247:	
  3336                           ;incstack = 0
  3337                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3338                           
  3339  0484  01F2               	clrf	___aodiv@sign
  3340  0485                     l1249:
  3341  0485  3020               	movlw	low ___aodiv@divisor
  3342  0486  0086               	movwf	6
  3343  0487  3000               	movlw	high ___aodiv@divisor
  3344  0488  0087               	movwf	7
  3345  0489  3F47               	moviw [7]fsr1
  3346  048A  00F0               	movwf	??___aodiv
  3347  048B  1FF0               	btfss	??___aodiv,7
  3348  048C  2C8E               	goto	u991
  3349  048D  2C8F               	goto	u990
  3350  048E                     u991:
  3351  048E  2CB0               	goto	l1253
  3352  048F                     u990:
  3353  048F                     l1251:
  3354  048F  0020               	movlb	0	; select bank0
  3355  0490  09A0               	comf	___aodiv@divisor,f
  3356  0491  09A1               	comf	___aodiv@divisor+1,f
  3357  0492  09A2               	comf	___aodiv@divisor+2,f
  3358  0493  09A3               	comf	___aodiv@divisor+3,f
  3359  0494  09A4               	comf	___aodiv@divisor+4,f
  3360  0495  09A5               	comf	___aodiv@divisor+5,f
  3361  0496  09A6               	comf	___aodiv@divisor+6,f
  3362  0497  09A7               	comf	___aodiv@divisor+7,f
  3363  0498  0AA0               	incf	___aodiv@divisor,f
  3364  0499  1D03               	skipz
  3365  049A  2CAE               	goto	u100lld
  3366  049B  0AA1               	incf	___aodiv@divisor+1,f
  3367  049C  1D03               	skipz
  3368  049D  2CAE               	goto	u100lld
  3369  049E  0AA2               	incf	___aodiv@divisor+2,f
  3370  049F  1D03               	skipz
  3371  04A0  2CAE               	goto	u100lld
  3372  04A1  0AA3               	incf	___aodiv@divisor+3,f
  3373  04A2  1D03               	skipz
  3374  04A3  2CAE               	goto	u100lld
  3375  04A4  0AA4               	incf	___aodiv@divisor+4,f
  3376  04A5  1D03               	skipz
  3377  04A6  2CAE               	goto	u100lld
  3378  04A7  0AA5               	incf	___aodiv@divisor+5,f
  3379  04A8  1D03               	skipz
  3380  04A9  2CAE               	goto	u100lld
  3381  04AA  0AA6               	incf	___aodiv@divisor+6,f
  3382  04AB  1D03               	skipz
  3383  04AC  2CAE               	goto	u100lld
  3384  04AD  0AA7               	incf	___aodiv@divisor+7,f
  3385  04AE                     u100lld:
  3386  04AE  01F2               	clrf	___aodiv@sign
  3387  04AF  0AF2               	incf	___aodiv@sign,f
  3388  04B0                     l1253:
  3389  04B0  3028               	movlw	low ___aodiv@dividend
  3390  04B1  0086               	movwf	6
  3391  04B2  3000               	movlw	high ___aodiv@dividend
  3392  04B3  0087               	movwf	7
  3393  04B4  3F47               	moviw [7]fsr1
  3394  04B5  00F0               	movwf	??___aodiv
  3395  04B6  1FF0               	btfss	??___aodiv,7
  3396  04B7  2CB9               	goto	u1011
  3397  04B8  2CBA               	goto	u1010
  3398  04B9                     u1011:
  3399  04B9  2CDD               	goto	l1259
  3400  04BA                     u1010:
  3401  04BA                     l1255:
  3402  04BA  0020               	movlb	0	; select bank0
  3403  04BB  09A8               	comf	___aodiv@dividend,f
  3404  04BC  09A9               	comf	___aodiv@dividend+1,f
  3405  04BD  09AA               	comf	___aodiv@dividend+2,f
  3406  04BE  09AB               	comf	___aodiv@dividend+3,f
  3407  04BF  09AC               	comf	___aodiv@dividend+4,f
  3408  04C0  09AD               	comf	___aodiv@dividend+5,f
  3409  04C1  09AE               	comf	___aodiv@dividend+6,f
  3410  04C2  09AF               	comf	___aodiv@dividend+7,f
  3411  04C3  0AA8               	incf	___aodiv@dividend,f
  3412  04C4  1D03               	skipz
  3413  04C5  2CD9               	goto	u102lld
  3414  04C6  0AA9               	incf	___aodiv@dividend+1,f
  3415  04C7  1D03               	skipz
  3416  04C8  2CD9               	goto	u102lld
  3417  04C9  0AAA               	incf	___aodiv@dividend+2,f
  3418  04CA  1D03               	skipz
  3419  04CB  2CD9               	goto	u102lld
  3420  04CC  0AAB               	incf	___aodiv@dividend+3,f
  3421  04CD  1D03               	skipz
  3422  04CE  2CD9               	goto	u102lld
  3423  04CF  0AAC               	incf	___aodiv@dividend+4,f
  3424  04D0  1D03               	skipz
  3425  04D1  2CD9               	goto	u102lld
  3426  04D2  0AAD               	incf	___aodiv@dividend+5,f
  3427  04D3  1D03               	skipz
  3428  04D4  2CD9               	goto	u102lld
  3429  04D5  0AAE               	incf	___aodiv@dividend+6,f
  3430  04D6  1D03               	skipz
  3431  04D7  2CD9               	goto	u102lld
  3432  04D8  0AAF               	incf	___aodiv@dividend+7,f
  3433  04D9                     u102lld:
  3434  04D9                     l1257:
  3435  04D9  3001               	movlw	1
  3436  04DA  00F0               	movwf	??___aodiv
  3437  04DB  0870               	movf	??___aodiv,w
  3438  04DC  06F2               	xorwf	___aodiv@sign,f
  3439  04DD                     l1259:
  3440  04DD  3073               	movlw	low ___aodiv@quotient
  3441  04DE  0086               	movwf	6
  3442  04DF  3000               	movlw	high ___aodiv@quotient
  3443  04E0  0087               	movwf	7
  3444  04E1  3008               	movlw	8
  3445  04E2  00F0               	movwf	??___aodiv
  3446  04E3  3000               	movlw	0
  3447  04E4                     u1030:
  3448  04E4  001E               	movwi fsr1++
  3449  04E5  0BF0               	decfsz	??___aodiv,f
  3450  04E6  2CE4               	goto	u1030
  3451  04E7                     l1261:
  3452  04E7  0020               	movlb	0	; select bank0
  3453  04E8  0820               	movf	___aodiv@divisor,w
  3454  04E9  0421               	iorwf	___aodiv@divisor+1,w
  3455  04EA  0422               	iorwf	___aodiv@divisor+2,w
  3456  04EB  0423               	iorwf	___aodiv@divisor+3,w
  3457  04EC  0424               	iorwf	___aodiv@divisor+4,w
  3458  04ED  0425               	iorwf	___aodiv@divisor+5,w
  3459  04EE  0426               	iorwf	___aodiv@divisor+6,w
  3460  04EF  0427               	iorwf	___aodiv@divisor+7,w
  3461  04F0  1903               	skipnz
  3462  04F1  2CF3               	goto	u1041
  3463  04F2  2CF4               	goto	u1040
  3464  04F3                     u1041:
  3465  04F3  2D50               	goto	l1281
  3466  04F4                     u1040:
  3467  04F4                     l1263:
  3468  04F4  01F1               	clrf	___aodiv@counter
  3469  04F5  0AF1               	incf	___aodiv@counter,f
  3470  04F6  2D03               	goto	l1269
  3471  04F7                     l1265:
  3472  04F7  35A0               	lslf	___aodiv@divisor,f
  3473  04F8  0DA1               	rlf	___aodiv@divisor+1,f
  3474  04F9  0DA2               	rlf	___aodiv@divisor+2,f
  3475  04FA  0DA3               	rlf	___aodiv@divisor+3,f
  3476  04FB  0DA4               	rlf	___aodiv@divisor+4,f
  3477  04FC  0DA5               	rlf	___aodiv@divisor+5,f
  3478  04FD  0DA6               	rlf	___aodiv@divisor+6,f
  3479  04FE  0DA7               	rlf	___aodiv@divisor+7,f
  3480  04FF                     l1267:
  3481  04FF  3001               	movlw	1
  3482  0500  00F0               	movwf	??___aodiv
  3483  0501  0870               	movf	??___aodiv,w
  3484  0502  07F1               	addwf	___aodiv@counter,f
  3485  0503                     l1269:
  3486  0503  1FA7               	btfss	___aodiv@divisor+7,7
  3487  0504  2D06               	goto	u1051
  3488  0505  2D07               	goto	u1050
  3489  0506                     u1051:
  3490  0506  2CF7               	goto	l1265
  3491  0507                     u1050:
  3492  0507                     l1271:
  3493  0507  35F3               	lslf	___aodiv@quotient,f
  3494  0508  0DF4               	rlf	___aodiv@quotient+1,f
  3495  0509  0DF5               	rlf	___aodiv@quotient+2,f
  3496  050A  0DF6               	rlf	___aodiv@quotient+3,f
  3497  050B  0DF7               	rlf	___aodiv@quotient+4,f
  3498  050C  0DF8               	rlf	___aodiv@quotient+5,f
  3499  050D  0DF9               	rlf	___aodiv@quotient+6,f
  3500  050E  0DFA               	rlf	___aodiv@quotient+7,f
  3501  050F                     l1273:
  3502  050F  0827               	movf	___aodiv@divisor+7,w
  3503  0510  022F               	subwf	___aodiv@dividend+7,w
  3504  0511  1D03               	skipz
  3505  0512  2D2D               	goto	u1065
  3506  0513  0826               	movf	___aodiv@divisor+6,w
  3507  0514  022E               	subwf	___aodiv@dividend+6,w
  3508  0515  1D03               	skipz
  3509  0516  2D2D               	goto	u1065
  3510  0517  0825               	movf	___aodiv@divisor+5,w
  3511  0518  022D               	subwf	___aodiv@dividend+5,w
  3512  0519  1D03               	skipz
  3513  051A  2D2D               	goto	u1065
  3514  051B  0824               	movf	___aodiv@divisor+4,w
  3515  051C  022C               	subwf	___aodiv@dividend+4,w
  3516  051D  1D03               	skipz
  3517  051E  2D2D               	goto	u1065
  3518  051F  0823               	movf	___aodiv@divisor+3,w
  3519  0520  022B               	subwf	___aodiv@dividend+3,w
  3520  0521  1D03               	skipz
  3521  0522  2D2D               	goto	u1065
  3522  0523  0822               	movf	___aodiv@divisor+2,w
  3523  0524  022A               	subwf	___aodiv@dividend+2,w
  3524  0525  1D03               	skipz
  3525  0526  2D2D               	goto	u1065
  3526  0527  0821               	movf	___aodiv@divisor+1,w
  3527  0528  0229               	subwf	___aodiv@dividend+1,w
  3528  0529  1D03               	skipz
  3529  052A  2D2D               	goto	u1065
  3530  052B  0820               	movf	___aodiv@divisor,w
  3531  052C  0228               	subwf	___aodiv@dividend,w
  3532  052D                     u1065:
  3533  052D  1C03               	skipc
  3534  052E  2D30               	goto	u1061
  3535  052F  2D31               	goto	u1060
  3536  0530                     u1061:
  3537  0530  2D42               	goto	l1279
  3538  0531                     u1060:
  3539  0531                     l1275:
  3540  0531  0820               	movf	___aodiv@divisor,w
  3541  0532  02A8               	subwf	___aodiv@dividend,f
  3542  0533  0821               	movf	___aodiv@divisor+1,w
  3543  0534  3BA9               	subwfb	___aodiv@dividend+1,f
  3544  0535  0822               	movf	___aodiv@divisor+2,w
  3545  0536  3BAA               	subwfb	___aodiv@dividend+2,f
  3546  0537  0823               	movf	___aodiv@divisor+3,w
  3547  0538  3BAB               	subwfb	___aodiv@dividend+3,f
  3548  0539  0824               	movf	___aodiv@divisor+4,w
  3549  053A  3BAC               	subwfb	___aodiv@dividend+4,f
  3550  053B  0825               	movf	___aodiv@divisor+5,w
  3551  053C  3BAD               	subwfb	___aodiv@dividend+5,f
  3552  053D  0826               	movf	___aodiv@divisor+6,w
  3553  053E  3BAE               	subwfb	___aodiv@dividend+6,f
  3554  053F  0827               	movf	___aodiv@divisor+7,w
  3555  0540  3BAF               	subwfb	___aodiv@dividend+7,f
  3556  0541                     l1277:
  3557  0541  1473               	bsf	___aodiv@quotient,0
  3558  0542                     l1279:
  3559  0542  36A7               	lsrf	___aodiv@divisor+7,f
  3560  0543  0CA6               	rrf	___aodiv@divisor+6,f
  3561  0544  0CA5               	rrf	___aodiv@divisor+5,f
  3562  0545  0CA4               	rrf	___aodiv@divisor+4,f
  3563  0546  0CA3               	rrf	___aodiv@divisor+3,f
  3564  0547  0CA2               	rrf	___aodiv@divisor+2,f
  3565  0548  0CA1               	rrf	___aodiv@divisor+1,f
  3566  0549  0CA0               	rrf	___aodiv@divisor,f
  3567  054A  3001               	movlw	1
  3568  054B  02F1               	subwf	___aodiv@counter,f
  3569  054C  1D03               	btfss	3,2
  3570  054D  2D4F               	goto	u1071
  3571  054E  2D50               	goto	u1070
  3572  054F                     u1071:
  3573  054F  2D07               	goto	l1271
  3574  0550                     u1070:
  3575  0550                     l1281:
  3576  0550  0872               	movf	___aodiv@sign,w
  3577  0551  1903               	btfsc	3,2
  3578  0552  2D54               	goto	u1081
  3579  0553  2D55               	goto	u1080
  3580  0554                     u1081:
  3581  0554  2D73               	goto	l254
  3582  0555                     u1080:
  3583  0555                     l1283:
  3584  0555  09F3               	comf	___aodiv@quotient,f
  3585  0556  09F4               	comf	___aodiv@quotient+1,f
  3586  0557  09F5               	comf	___aodiv@quotient+2,f
  3587  0558  09F6               	comf	___aodiv@quotient+3,f
  3588  0559  09F7               	comf	___aodiv@quotient+4,f
  3589  055A  09F8               	comf	___aodiv@quotient+5,f
  3590  055B  09F9               	comf	___aodiv@quotient+6,f
  3591  055C  09FA               	comf	___aodiv@quotient+7,f
  3592  055D  0AF3               	incf	___aodiv@quotient,f
  3593  055E  1D03               	skipz
  3594  055F  2D73               	goto	u109lld
  3595  0560  0AF4               	incf	___aodiv@quotient+1,f
  3596  0561  1D03               	skipz
  3597  0562  2D73               	goto	u109lld
  3598  0563  0AF5               	incf	___aodiv@quotient+2,f
  3599  0564  1D03               	skipz
  3600  0565  2D73               	goto	u109lld
  3601  0566  0AF6               	incf	___aodiv@quotient+3,f
  3602  0567  1D03               	skipz
  3603  0568  2D73               	goto	u109lld
  3604  0569  0AF7               	incf	___aodiv@quotient+4,f
  3605  056A  1D03               	skipz
  3606  056B  2D73               	goto	u109lld
  3607  056C  0AF8               	incf	___aodiv@quotient+5,f
  3608  056D  1D03               	skipz
  3609  056E  2D73               	goto	u109lld
  3610  056F  0AF9               	incf	___aodiv@quotient+6,f
  3611  0570  1D03               	skipz
  3612  0571  2D73               	goto	u109lld
  3613  0572  0AFA               	incf	___aodiv@quotient+7,f
  3614  0573                     u109lld:
  3615  0573                     l254:
  3616  0573  0873               	movf	___aodiv@quotient,w
  3617  0574  0020               	movlb	0	; select bank0
  3618  0575  00A0               	movwf	?___aodiv
  3619  0576  0874               	movf	___aodiv@quotient+1,w
  3620  0577  00A1               	movwf	?___aodiv+1
  3621  0578  0875               	movf	___aodiv@quotient+2,w
  3622  0579  00A2               	movwf	?___aodiv+2
  3623  057A  0876               	movf	___aodiv@quotient+3,w
  3624  057B  00A3               	movwf	?___aodiv+3
  3625  057C  0877               	movf	___aodiv@quotient+4,w
  3626  057D  00A4               	movwf	?___aodiv+4
  3627  057E  0878               	movf	___aodiv@quotient+5,w
  3628  057F  00A5               	movwf	?___aodiv+5
  3629  0580  0879               	movf	___aodiv@quotient+6,w
  3630  0581  00A6               	movwf	?___aodiv+6
  3631  0582  087A               	movf	___aodiv@quotient+7,w
  3632  0583  00A7               	movwf	?___aodiv+7
  3633  0584                     l255:
  3634  0584  0008               	return
  3635  0585                     __end_of___aodiv:
  3636                           
  3637                           	psect	text13
  3638  01B9                     __ptext13:	
  3639 ;; *************** function ___awmod *****************
  3640 ;; Defined at:
  3641 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  divisor         2    0[COMMON] int 
  3644 ;;  dividend        2    2[COMMON] int 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  sign            1    6[COMMON] unsigned char 
  3647 ;;  counter         1    5[COMMON] unsigned char 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  2    0[COMMON] int 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3657 ;;      Params:         4       0       0       0       0       0       0       0
  3658 ;;      Locals:         2       0       0       0       0       0       0       0
  3659 ;;      Temps:          1       0       0       0       0       0       0       0
  3660 ;;      Totals:         7       0       0       0       0       0       0       0
  3661 ;;Total ram usage:        7 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670  01B9                     ___awmod:	
  3671                           ;psect for function ___awmod
  3672                           
  3673  01B9                     l1605:	
  3674                           ;incstack = 0
  3675                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3676                           
  3677  01B9  01F6               	clrf	___awmod@sign
  3678  01BA                     l1607:
  3679  01BA  1FF3               	btfss	___awmod@dividend+1,7
  3680  01BB  29BD               	goto	u1721
  3681  01BC  29BE               	goto	u1720
  3682  01BD                     u1721:
  3683  01BD  29C5               	goto	l1613
  3684  01BE                     u1720:
  3685  01BE                     l1609:
  3686  01BE  09F2               	comf	___awmod@dividend,f
  3687  01BF  09F3               	comf	___awmod@dividend+1,f
  3688  01C0  0AF2               	incf	___awmod@dividend,f
  3689  01C1  1903               	skipnz
  3690  01C2  0AF3               	incf	___awmod@dividend+1,f
  3691  01C3                     l1611:
  3692  01C3  01F6               	clrf	___awmod@sign
  3693  01C4  0AF6               	incf	___awmod@sign,f
  3694  01C5                     l1613:
  3695  01C5  1FF1               	btfss	___awmod@divisor+1,7
  3696  01C6  29C8               	goto	u1731
  3697  01C7  29C9               	goto	u1730
  3698  01C8                     u1731:
  3699  01C8  29CE               	goto	l1617
  3700  01C9                     u1730:
  3701  01C9                     l1615:
  3702  01C9  09F0               	comf	___awmod@divisor,f
  3703  01CA  09F1               	comf	___awmod@divisor+1,f
  3704  01CB  0AF0               	incf	___awmod@divisor,f
  3705  01CC  1903               	skipnz
  3706  01CD  0AF1               	incf	___awmod@divisor+1,f
  3707  01CE                     l1617:
  3708  01CE  0870               	movf	___awmod@divisor,w
  3709  01CF  0471               	iorwf	___awmod@divisor+1,w
  3710  01D0  1903               	btfsc	3,2
  3711  01D1  29D3               	goto	u1741
  3712  01D2  29D4               	goto	u1740
  3713  01D3                     u1741:
  3714  01D3  29FD               	goto	l1635
  3715  01D4                     u1740:
  3716  01D4                     l1619:
  3717  01D4  01F5               	clrf	___awmod@counter
  3718  01D5  0AF5               	incf	___awmod@counter,f
  3719  01D6  29E0               	goto	l1625
  3720  01D7                     l1621:
  3721  01D7  3001               	movlw	1
  3722  01D8                     u1755:
  3723  01D8  35F0               	lslf	___awmod@divisor,f
  3724  01D9  0DF1               	rlf	___awmod@divisor+1,f
  3725  01DA  0B89               	decfsz	9,f
  3726  01DB  29D8               	goto	u1755
  3727  01DC                     l1623:
  3728  01DC  3001               	movlw	1
  3729  01DD  00F4               	movwf	??___awmod
  3730  01DE  0874               	movf	??___awmod,w
  3731  01DF  07F5               	addwf	___awmod@counter,f
  3732  01E0                     l1625:
  3733  01E0  1FF1               	btfss	___awmod@divisor+1,7
  3734  01E1  29E3               	goto	u1761
  3735  01E2  29E4               	goto	u1760
  3736  01E3                     u1761:
  3737  01E3  29D7               	goto	l1621
  3738  01E4                     u1760:
  3739  01E4                     l1627:
  3740  01E4  0871               	movf	___awmod@divisor+1,w
  3741  01E5  0273               	subwf	___awmod@dividend+1,w
  3742  01E6  1D03               	skipz
  3743  01E7  29EA               	goto	u1775
  3744  01E8  0870               	movf	___awmod@divisor,w
  3745  01E9  0272               	subwf	___awmod@dividend,w
  3746  01EA                     u1775:
  3747  01EA  1C03               	skipc
  3748  01EB  29ED               	goto	u1771
  3749  01EC  29EE               	goto	u1770
  3750  01ED                     u1771:
  3751  01ED  29F2               	goto	l1631
  3752  01EE                     u1770:
  3753  01EE                     l1629:
  3754  01EE  0870               	movf	___awmod@divisor,w
  3755  01EF  02F2               	subwf	___awmod@dividend,f
  3756  01F0  0871               	movf	___awmod@divisor+1,w
  3757  01F1  3BF3               	subwfb	___awmod@dividend+1,f
  3758  01F2                     l1631:
  3759  01F2  3001               	movlw	1
  3760  01F3                     u1785:
  3761  01F3  36F1               	lsrf	___awmod@divisor+1,f
  3762  01F4  0CF0               	rrf	___awmod@divisor,f
  3763  01F5  0B89               	decfsz	9,f
  3764  01F6  29F3               	goto	u1785
  3765  01F7                     l1633:
  3766  01F7  3001               	movlw	1
  3767  01F8  02F5               	subwf	___awmod@counter,f
  3768  01F9  1D03               	btfss	3,2
  3769  01FA  29FC               	goto	u1791
  3770  01FB  29FD               	goto	u1790
  3771  01FC                     u1791:
  3772  01FC  29E4               	goto	l1627
  3773  01FD                     u1790:
  3774  01FD                     l1635:
  3775  01FD  0876               	movf	___awmod@sign,w
  3776  01FE  1903               	btfsc	3,2
  3777  01FF  2A01               	goto	u1801
  3778  0200  2A02               	goto	u1800
  3779  0201                     u1801:
  3780  0201  2A07               	goto	l1639
  3781  0202                     u1800:
  3782  0202                     l1637:
  3783  0202  09F2               	comf	___awmod@dividend,f
  3784  0203  09F3               	comf	___awmod@dividend+1,f
  3785  0204  0AF2               	incf	___awmod@dividend,f
  3786  0205  1903               	skipnz
  3787  0206  0AF3               	incf	___awmod@dividend+1,f
  3788  0207                     l1639:
  3789  0207  0873               	movf	___awmod@dividend+1,w
  3790  0208  00F1               	movwf	?___awmod+1
  3791  0209  0872               	movf	___awmod@dividend,w
  3792  020A  00F0               	movwf	?___awmod
  3793  020B                     l320:
  3794  020B  0008               	return
  3795  020C                     __end_of___awmod:
  3796                           
  3797                           	psect	text14
  3798  0262                     __ptext14:	
  3799 ;; *************** function ___awdiv *****************
  3800 ;; Defined at:
  3801 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  divisor         2    0[COMMON] int 
  3804 ;;  dividend        2    2[COMMON] int 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  quotient        2    7[COMMON] int 
  3807 ;;  sign            1    6[COMMON] unsigned char 
  3808 ;;  counter         1    5[COMMON] unsigned char 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  2    0[COMMON] int 
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3818 ;;      Params:         4       0       0       0       0       0       0       0
  3819 ;;      Locals:         4       0       0       0       0       0       0       0
  3820 ;;      Temps:          1       0       0       0       0       0       0       0
  3821 ;;      Totals:         9       0       0       0       0       0       0       0
  3822 ;;Total ram usage:        9 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_main
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831  0262                     ___awdiv:	
  3832                           ;psect for function ___awdiv
  3833                           
  3834  0262                     l1561:	
  3835                           ;incstack = 0
  3836                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3837                           
  3838  0262  01F6               	clrf	___awdiv@sign
  3839  0263                     l1563:
  3840  0263  1FF1               	btfss	___awdiv@divisor+1,7
  3841  0264  2A66               	goto	u1621
  3842  0265  2A67               	goto	u1620
  3843  0266                     u1621:
  3844  0266  2A6E               	goto	l1569
  3845  0267                     u1620:
  3846  0267                     l1565:
  3847  0267  09F0               	comf	___awdiv@divisor,f
  3848  0268  09F1               	comf	___awdiv@divisor+1,f
  3849  0269  0AF0               	incf	___awdiv@divisor,f
  3850  026A  1903               	skipnz
  3851  026B  0AF1               	incf	___awdiv@divisor+1,f
  3852  026C                     l1567:
  3853  026C  01F6               	clrf	___awdiv@sign
  3854  026D  0AF6               	incf	___awdiv@sign,f
  3855  026E                     l1569:
  3856  026E  1FF3               	btfss	___awdiv@dividend+1,7
  3857  026F  2A71               	goto	u1631
  3858  0270  2A72               	goto	u1630
  3859  0271                     u1631:
  3860  0271  2A7B               	goto	l1575
  3861  0272                     u1630:
  3862  0272                     l1571:
  3863  0272  09F2               	comf	___awdiv@dividend,f
  3864  0273  09F3               	comf	___awdiv@dividend+1,f
  3865  0274  0AF2               	incf	___awdiv@dividend,f
  3866  0275  1903               	skipnz
  3867  0276  0AF3               	incf	___awdiv@dividend+1,f
  3868  0277                     l1573:
  3869  0277  3001               	movlw	1
  3870  0278  00F4               	movwf	??___awdiv
  3871  0279  0874               	movf	??___awdiv,w
  3872  027A  06F6               	xorwf	___awdiv@sign,f
  3873  027B                     l1575:
  3874  027B  01F7               	clrf	___awdiv@quotient
  3875  027C  01F8               	clrf	___awdiv@quotient+1
  3876  027D                     l1577:
  3877  027D  0870               	movf	___awdiv@divisor,w
  3878  027E  0471               	iorwf	___awdiv@divisor+1,w
  3879  027F  1903               	btfsc	3,2
  3880  0280  2A82               	goto	u1641
  3881  0281  2A83               	goto	u1640
  3882  0282                     u1641:
  3883  0282  2AB2               	goto	l1597
  3884  0283                     u1640:
  3885  0283                     l1579:
  3886  0283  01F5               	clrf	___awdiv@counter
  3887  0284  0AF5               	incf	___awdiv@counter,f
  3888  0285  2A8F               	goto	l1585
  3889  0286                     l1581:
  3890  0286  3001               	movlw	1
  3891  0287                     u1655:
  3892  0287  35F0               	lslf	___awdiv@divisor,f
  3893  0288  0DF1               	rlf	___awdiv@divisor+1,f
  3894  0289  0B89               	decfsz	9,f
  3895  028A  2A87               	goto	u1655
  3896  028B                     l1583:
  3897  028B  3001               	movlw	1
  3898  028C  00F4               	movwf	??___awdiv
  3899  028D  0874               	movf	??___awdiv,w
  3900  028E  07F5               	addwf	___awdiv@counter,f
  3901  028F                     l1585:
  3902  028F  1FF1               	btfss	___awdiv@divisor+1,7
  3903  0290  2A92               	goto	u1661
  3904  0291  2A93               	goto	u1660
  3905  0292                     u1661:
  3906  0292  2A86               	goto	l1581
  3907  0293                     u1660:
  3908  0293                     l1587:
  3909  0293  3001               	movlw	1
  3910  0294                     u1675:
  3911  0294  35F7               	lslf	___awdiv@quotient,f
  3912  0295  0DF8               	rlf	___awdiv@quotient+1,f
  3913  0296  0B89               	decfsz	9,f
  3914  0297  2A94               	goto	u1675
  3915  0298  0871               	movf	___awdiv@divisor+1,w
  3916  0299  0273               	subwf	___awdiv@dividend+1,w
  3917  029A  1D03               	skipz
  3918  029B  2A9E               	goto	u1685
  3919  029C  0870               	movf	___awdiv@divisor,w
  3920  029D  0272               	subwf	___awdiv@dividend,w
  3921  029E                     u1685:
  3922  029E  1C03               	skipc
  3923  029F  2AA1               	goto	u1681
  3924  02A0  2AA2               	goto	u1680
  3925  02A1                     u1681:
  3926  02A1  2AA7               	goto	l1593
  3927  02A2                     u1680:
  3928  02A2                     l1589:
  3929  02A2  0870               	movf	___awdiv@divisor,w
  3930  02A3  02F2               	subwf	___awdiv@dividend,f
  3931  02A4  0871               	movf	___awdiv@divisor+1,w
  3932  02A5  3BF3               	subwfb	___awdiv@dividend+1,f
  3933  02A6                     l1591:
  3934  02A6  1477               	bsf	___awdiv@quotient,0
  3935  02A7                     l1593:
  3936  02A7  3001               	movlw	1
  3937  02A8                     u1695:
  3938  02A8  36F1               	lsrf	___awdiv@divisor+1,f
  3939  02A9  0CF0               	rrf	___awdiv@divisor,f
  3940  02AA  0B89               	decfsz	9,f
  3941  02AB  2AA8               	goto	u1695
  3942  02AC                     l1595:
  3943  02AC  3001               	movlw	1
  3944  02AD  02F5               	subwf	___awdiv@counter,f
  3945  02AE  1D03               	btfss	3,2
  3946  02AF  2AB1               	goto	u1701
  3947  02B0  2AB2               	goto	u1700
  3948  02B1                     u1701:
  3949  02B1  2A93               	goto	l1587
  3950  02B2                     u1700:
  3951  02B2                     l1597:
  3952  02B2  0876               	movf	___awdiv@sign,w
  3953  02B3  1903               	btfsc	3,2
  3954  02B4  2AB6               	goto	u1711
  3955  02B5  2AB7               	goto	u1710
  3956  02B6                     u1711:
  3957  02B6  2ABC               	goto	l1601
  3958  02B7                     u1710:
  3959  02B7                     l1599:
  3960  02B7  09F7               	comf	___awdiv@quotient,f
  3961  02B8  09F8               	comf	___awdiv@quotient+1,f
  3962  02B9  0AF7               	incf	___awdiv@quotient,f
  3963  02BA  1903               	skipnz
  3964  02BB  0AF8               	incf	___awdiv@quotient+1,f
  3965  02BC                     l1601:
  3966  02BC  0878               	movf	___awdiv@quotient+1,w
  3967  02BD  00F1               	movwf	?___awdiv+1
  3968  02BE  0877               	movf	___awdiv@quotient,w
  3969  02BF  00F0               	movwf	?___awdiv
  3970  02C0                     l307:
  3971  02C0  0008               	return
  3972  02C1                     __end_of___awdiv:
  3973                           
  3974                           	psect	text15
  3975  001C                     __ptext15:	
  3976 ;; *************** function _LCD_Initialize *****************
  3977 ;; Defined at:
  3978 ;;		line 46 in file "lcd.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0, pclath, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3992 ;;      Params:         0       0       0       0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0
  3994 ;;      Temps:          1       0       0       0       0       0       0       0
  3995 ;;      Totals:         1       0       0       0       0       0       0       0
  3996 ;;Total ram usage:        1 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 2
  3999 ;; This function calls:
  4000 ;;		_LCDPutCmd
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006  001C                     _LCD_Initialize:	
  4007                           ;psect for function _LCD_Initialize
  4008                           
  4009  001C                     l1521:	
  4010                           ;incstack = 0
  4011                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4012                           
  4013                           
  4014                           ;lcd.c: 49:     LATC = 0x00;
  4015  001C  0022               	movlb	2	; select bank2
  4016  001D  018E               	clrf	14	;volatile
  4017                           
  4018                           ;lcd.c: 50:     LATB = 0x00;
  4019  001E  018D               	clrf	13	;volatile
  4020                           
  4021                           ;lcd.c: 52:     TRISB = 0x00;
  4022  001F  0021               	movlb	1	; select bank1
  4023  0020  018D               	clrf	13	;volatile
  4024                           
  4025                           ;lcd.c: 53:     TRISC = 0x00;
  4026  0021  018E               	clrf	14	;volatile
  4027                           
  4028                           ;lcd.c: 54:     ANSELC = 0x00;
  4029  0022  0023               	movlb	3	; select bank3
  4030  0023  018E               	clrf	14	;volatile
  4031                           
  4032                           ;lcd.c: 55:     ANSELB = 0x00;
  4033  0024  018D               	clrf	13	;volatile
  4034  0025                     l1523:
  4035                           
  4036                           ;lcd.c: 61:     _delay((unsigned long)((15)*(1000000/4000.0)));
  4037  0025  3005               	movlw	5
  4038  0026  00F6               	movwf	??_LCD_Initialize
  4039  0027  30DE               	movlw	222
  4040  0028                     u1867:
  4041  0028  0B89               	decfsz	9,f
  4042  0029  2828               	goto	u1867
  4043  002A  0BF6               	decfsz	??_LCD_Initialize,f
  4044  002B  2828               	goto	u1867
  4045  002C                     l1525:
  4046                           
  4047                           ;lcd.c: 64:     LCDPutCmd(0x32);
  4048  002C  3032               	movlw	50
  4049  002D  318F  27E1  3180   	fcall	_LCDPutCmd
  4050  0030                     l1527:
  4051                           
  4052                           ;lcd.c: 67:     LCDPutCmd(0x28);
  4053  0030  3028               	movlw	40
  4054  0031  318F  27E1  3180   	fcall	_LCDPutCmd
  4055  0034                     l1529:
  4056                           
  4057                           ;lcd.c: 70:     LCDPutCmd(0x0C);
  4058  0034  300C               	movlw	12
  4059  0035  318F  27E1  3180   	fcall	_LCDPutCmd
  4060  0038                     l1531:
  4061                           
  4062                           ;lcd.c: 72:     LCDPutCmd(0x01);
  4063  0038  3001               	movlw	1
  4064  0039  318F  27E1  3180   	fcall	_LCDPutCmd
  4065  003C                     l1533:
  4066                           
  4067                           ;lcd.c: 75:     LCDPutCmd(0x06);
  4068  003C  3006               	movlw	6
  4069  003D  318F  27E1  3180   	fcall	_LCDPutCmd
  4070  0040                     l23:
  4071  0040  0008               	return
  4072  0041                     __end_of_LCD_Initialize:
  4073                           
  4074                           	psect	text16
  4075  00DF                     __ptext16:	
  4076 ;; *************** function _LCDPutStr2 *****************
  4077 ;; Defined at:
  4078 ;;		line 192 in file "lcd.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  str             2   10[COMMON] PTR const unsigned char 
  4081 ;;		 -> main@time_string(9), STR_2(9), STR_1(16), 
  4082 ;;  _pos            1   12[COMMON] unsigned char 
  4083 ;;  _line           1   13[COMMON] unsigned char 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  i               1    3[BANK0 ] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4095 ;;      Params:         4       0       0       0       0       0       0       0
  4096 ;;      Locals:         0       1       0       0       0       0       0       0
  4097 ;;      Temps:          0       3       0       0       0       0       0       0
  4098 ;;      Totals:         4       4       0       0       0       0       0       0
  4099 ;;Total ram usage:        8 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 3
  4102 ;; This function calls:
  4103 ;;		_LCDGoto
  4104 ;;		_LCDPutChar
  4105 ;; This function is called by:
  4106 ;;		_main
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110  00DF                     _LCDPutStr2:	
  4111                           ;psect for function _LCDPutStr2
  4112                           
  4113  00DF                     l1535:	
  4114                           ;incstack = 0
  4115                           ; Regs used in _LCDPutStr2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4116                           
  4117                           
  4118                           ;lcd.c: 192: void LCDPutStr2(const char *str, char _pos, char _line);lcd.c: 193: {;lcd.c
      +                          : 196:     if ((_pos>=0&&_pos<=15)&&(_line>=0&&_line<=1)){
  4119  00DF  3010               	movlw	16
  4120  00E0  027C               	subwf	LCDPutStr2@_pos,w
  4121  00E1  1803               	skipnc
  4122  00E2  28E4               	goto	u1591
  4123  00E3  28E5               	goto	u1590
  4124  00E4                     u1591:
  4125  00E4  291B               	goto	l61
  4126  00E5                     u1590:
  4127  00E5                     l1537:
  4128  00E5  3002               	movlw	2
  4129  00E6  027D               	subwf	LCDPutStr2@_line,w
  4130  00E7  1803               	skipnc
  4131  00E8  28EA               	goto	u1601
  4132  00E9  28EB               	goto	u1600
  4133  00EA                     u1601:
  4134  00EA  291B               	goto	l61
  4135  00EB                     u1600:
  4136  00EB                     l1539:
  4137                           
  4138                           ;lcd.c: 198:          LCDGoto(_pos, _line);
  4139  00EB  087D               	movf	LCDPutStr2@_line,w
  4140  00EC  0020               	movlb	0	; select bank0
  4141  00ED  00A0               	movwf	??_LCDPutStr2
  4142  00EE  0820               	movf	??_LCDPutStr2,w
  4143  00EF  00F6               	movwf	LCDGoto@ln
  4144  00F0  087C               	movf	LCDPutStr2@_pos,w
  4145  00F1  3180  2067  3180   	fcall	_LCDGoto
  4146  00F4                     l1541:	
  4147                           ;lcd.c: 199:     } else {
  4148                           
  4149                           
  4150                           ;lcd.c: 203:     uint8_t i=0;
  4151  00F4  0020               	movlb	0	; select bank0
  4152  00F5  01A3               	clrf	LCDPutStr2@i
  4153                           
  4154                           ;lcd.c: 206:     while (str[i])
  4155  00F6  290B               	goto	l1547
  4156  00F7                     l1543:
  4157                           
  4158                           ;lcd.c: 207:     {;lcd.c: 209:         LCDPutChar(str[i++]);
  4159  00F7  087B               	movf	LCDPutStr2@str+1,w
  4160  00F8  00A1               	movwf	??_LCDPutStr2+1
  4161  00F9  087A               	movf	LCDPutStr2@str,w
  4162  00FA  00A0               	movwf	??_LCDPutStr2
  4163  00FB  0823               	movf	LCDPutStr2@i,w
  4164  00FC  0720               	addwf	??_LCDPutStr2,w
  4165  00FD  0084               	movwf	4
  4166  00FE  0821               	movf	??_LCDPutStr2+1,w
  4167  00FF  1803               	skipnc
  4168  0100  0A21               	incf	??_LCDPutStr2+1,w
  4169  0101  0085               	movwf	5
  4170  0102  0800               	movf	0,w	;code access
  4171  0103  318F  27C4  3180   	fcall	_LCDPutChar
  4172  0106                     l1545:
  4173  0106  3001               	movlw	1
  4174  0107  0020               	movlb	0	; select bank0
  4175  0108  00A0               	movwf	??_LCDPutStr2
  4176  0109  0820               	movf	??_LCDPutStr2,w
  4177  010A  07A3               	addwf	LCDPutStr2@i,f
  4178  010B                     l1547:
  4179                           
  4180                           ;lcd.c: 206:     while (str[i])
  4181  010B  087B               	movf	LCDPutStr2@str+1,w
  4182  010C  00A1               	movwf	??_LCDPutStr2+1
  4183  010D  087A               	movf	LCDPutStr2@str,w
  4184  010E  00A0               	movwf	??_LCDPutStr2
  4185  010F  0823               	movf	LCDPutStr2@i,w
  4186  0110  0720               	addwf	??_LCDPutStr2,w
  4187  0111  0084               	movwf	4
  4188  0112  0821               	movf	??_LCDPutStr2+1,w
  4189  0113  1803               	skipnc
  4190  0114  0A21               	incf	??_LCDPutStr2+1,w
  4191  0115  0085               	movwf	5
  4192  0116  0012               	moviw fsr0++
  4193  0117  1D03               	btfss	3,2
  4194  0118  291A               	goto	u1611
  4195  0119  291B               	goto	u1610
  4196  011A                     u1611:
  4197  011A  28F7               	goto	l1543
  4198  011B                     u1610:
  4199  011B                     l61:
  4200  011B  0008               	return
  4201  011C                     __end_of_LCDPutStr2:
  4202                           
  4203                           	psect	text17
  4204  0FC4                     __ptext17:	
  4205 ;; *************** function _LCDPutChar *****************
  4206 ;; Defined at:
  4207 ;;		line 133 in file "lcd.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  ch              1    wreg     unsigned char 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  ch              1    5[COMMON] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4221 ;;      Params:         0       0       0       0       0       0       0       0
  4222 ;;      Locals:         1       0       0       0       0       0       0       0
  4223 ;;      Temps:          2       0       0       0       0       0       0       0
  4224 ;;      Totals:         3       0       0       0       0       0       0       0
  4225 ;;Total ram usage:        3 bytes
  4226 ;; Hardware stack levels used: 1
  4227 ;; Hardware stack levels required when called: 1
  4228 ;; This function calls:
  4229 ;;		_LCDWriteNibble
  4230 ;; This function is called by:
  4231 ;;		_LCDPutStr2
  4232 ;;		_LCDPutStr
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236  0FC4                     _LCDPutChar:	
  4237                           ;psect for function _LCDPutChar
  4238                           
  4239                           
  4240                           ;incstack = 0
  4241                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  4242                           ;LCDPutChar@ch stored from wreg
  4243  0FC4  00F5               	movwf	LCDPutChar@ch
  4244  0FC5                     l1487:
  4245                           
  4246                           ;lcd.c: 133: void LCDPutChar(uint8_t ch);lcd.c: 134: {;lcd.c: 135:     _delay((unsigned 
      +                          long)((5)*(1000000/4000.0)));
  4247  0FC5  30FA               	movlw	250
  4248  0FC6                     u1877:
  4249  0FC6  3200               	nop2
  4250  0FC7  0B89               	decfsz	9,f
  4251  0FC8  2FC6               	goto	u1877
  4252  0FC9                     l1489:
  4253                           
  4254                           ;lcd.c: 138:     LCDWriteNibble(ch,1);
  4255  0FC9  01F0               	clrf	LCDWriteNibble@rs
  4256  0FCA  0AF0               	incf	LCDWriteNibble@rs,f
  4257  0FCB  0875               	movf	LCDPutChar@ch,w
  4258  0FCC  3181  211C  318F   	fcall	_LCDWriteNibble
  4259  0FCF                     l1491:
  4260                           
  4261                           ;lcd.c: 141:     ch = (ch << 4);
  4262  0FCF  0875               	movf	LCDPutChar@ch,w
  4263  0FD0  00F3               	movwf	??_LCDPutChar
  4264  0FD1  3003               	movlw	3
  4265  0FD2                     u1545:
  4266  0FD2  35F3               	lslf	??_LCDPutChar,f
  4267  0FD3  3EFF               	addlw	-1
  4268  0FD4  1D03               	skipz
  4269  0FD5  2FD2               	goto	u1545
  4270  0FD6  3573               	lslf	??_LCDPutChar,w
  4271  0FD7  00F4               	movwf	??_LCDPutChar+1
  4272  0FD8  0874               	movf	??_LCDPutChar+1,w
  4273  0FD9  00F5               	movwf	LCDPutChar@ch
  4274  0FDA                     l1493:
  4275                           
  4276                           ;lcd.c: 144:     LCDWriteNibble(ch,1);
  4277  0FDA  01F0               	clrf	LCDWriteNibble@rs
  4278  0FDB  0AF0               	incf	LCDWriteNibble@rs,f
  4279  0FDC  0875               	movf	LCDPutChar@ch,w
  4280  0FDD  3181  211C  318F   	fcall	_LCDWriteNibble
  4281  0FE0                     l37:
  4282  0FE0  0008               	return
  4283  0FE1                     __end_of_LCDPutChar:
  4284                           
  4285                           	psect	text18
  4286  0067                     __ptext18:	
  4287 ;; *************** function _LCDGoto *****************
  4288 ;; Defined at:
  4289 ;;		line 177 in file "lcd.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  pos             1    wreg     unsigned char 
  4292 ;;  ln              1    6[COMMON] unsigned char 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  pos             1    9[COMMON] unsigned char 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0, pclath, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4304 ;;      Params:         1       0       0       0       0       0       0       0
  4305 ;;      Locals:         3       0       0       0       0       0       0       0
  4306 ;;      Temps:          0       0       0       0       0       0       0       0
  4307 ;;      Totals:         4       0       0       0       0       0       0       0
  4308 ;;Total ram usage:        4 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 2
  4311 ;; This function calls:
  4312 ;;		_LCDPutCmd
  4313 ;; This function is called by:
  4314 ;;		_LCDPutStr2
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318  0067                     _LCDGoto:	
  4319                           ;psect for function _LCDGoto
  4320                           
  4321                           
  4322                           ;incstack = 0
  4323                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  4324                           ;LCDGoto@pos stored from wreg
  4325  0067  00F9               	movwf	LCDGoto@pos
  4326  0068                     l1495:
  4327                           
  4328                           ;lcd.c: 177: void LCDGoto(uint8_t pos,uint8_t ln);lcd.c: 178: {;lcd.c: 180:     if ((ln 
      +                          > (2 -1)) || (pos > (16 -1)))
  4329  0068  3002               	movlw	2
  4330  0069  0276               	subwf	LCDGoto@ln,w
  4331  006A  1803               	skipnc
  4332  006B  286D               	goto	u1551
  4333  006C  286E               	goto	u1550
  4334  006D                     u1551:
  4335  006D  288D               	goto	l52
  4336  006E                     u1550:
  4337  006E                     l1497:
  4338  006E  3010               	movlw	16
  4339  006F  0279               	subwf	LCDGoto@pos,w
  4340  0070  1C03               	skipc
  4341  0071  2873               	goto	u1561
  4342  0072  2874               	goto	u1560
  4343  0073                     u1561:
  4344  0073  2875               	goto	l1499
  4345  0074                     u1560:
  4346  0074  288D               	goto	l52
  4347  0075                     l1499:
  4348                           
  4349                           ;lcd.c: 187:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  4350  0075  0376               	decf	LCDGoto@ln,w
  4351  0076  1903               	btfsc	3,2
  4352  0077  2879               	goto	u1571
  4353  0078  287A               	goto	u1570
  4354  0079                     u1571:
  4355  0079  2880               	goto	l1503
  4356  007A                     u1570:
  4357  007A                     l1501:
  4358  007A  3080               	movlw	128
  4359  007B  0479               	iorwf	LCDGoto@pos,w
  4360  007C  00F7               	movwf	_LCDGoto$104
  4361  007D  3000               	movlw	0
  4362  007E  00F8               	movwf	_LCDGoto$104+1
  4363  007F  2885               	goto	l1505
  4364  0080                     l1503:
  4365  0080  30C0               	movlw	192
  4366  0081  0479               	iorwf	LCDGoto@pos,w
  4367  0082  00F7               	movwf	_LCDGoto$104
  4368  0083  3000               	movlw	0
  4369  0084  00F8               	movwf	_LCDGoto$104+1
  4370  0085                     l1505:
  4371  0085  0877               	movf	_LCDGoto$104,w
  4372  0086  318F  27E1  3180   	fcall	_LCDPutCmd
  4373  0089                     l1507:
  4374                           
  4375                           ;lcd.c: 190:     _delay((unsigned long)((5)*(1000000/4000.0)));
  4376  0089  30FA               	movlw	250
  4377  008A                     u1887:
  4378  008A  3200               	nop2
  4379  008B  0B89               	decfsz	9,f
  4380  008C  288A               	goto	u1887
  4381  008D                     l52:
  4382  008D  0008               	return
  4383  008E                     __end_of_LCDGoto:
  4384                           
  4385                           	psect	text19
  4386  0FE1                     __ptext19:	
  4387 ;; *************** function _LCDPutCmd *****************
  4388 ;; Defined at:
  4389 ;;		line 148 in file "lcd.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  ch              1    wreg     unsigned char 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  ch              1    5[COMMON] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      void 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0, pclath, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4403 ;;      Params:         0       0       0       0       0       0       0       0
  4404 ;;      Locals:         1       0       0       0       0       0       0       0
  4405 ;;      Temps:          2       0       0       0       0       0       0       0
  4406 ;;      Totals:         3       0       0       0       0       0       0       0
  4407 ;;Total ram usage:        3 bytes
  4408 ;; Hardware stack levels used: 1
  4409 ;; Hardware stack levels required when called: 1
  4410 ;; This function calls:
  4411 ;;		_LCDWriteNibble
  4412 ;; This function is called by:
  4413 ;;		_LCD_Initialize
  4414 ;;		_LCDGoto
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418  0FE1                     _LCDPutCmd:	
  4419                           ;psect for function _LCDPutCmd
  4420                           
  4421                           
  4422                           ;incstack = 0
  4423                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  4424                           ;LCDPutCmd@ch stored from wreg
  4425  0FE1  00F5               	movwf	LCDPutCmd@ch
  4426  0FE2                     l1433:
  4427                           
  4428                           ;lcd.c: 148: void LCDPutCmd(uint8_t ch);lcd.c: 149: {;lcd.c: 150:     _delay((unsigned l
      +                          ong)((5)*(1000000/4000.0)));
  4429  0FE2  30FA               	movlw	250
  4430  0FE3                     u1897:
  4431  0FE3  3200               	nop2
  4432  0FE4  0B89               	decfsz	9,f
  4433  0FE5  2FE3               	goto	u1897
  4434  0FE6                     l1435:
  4435                           
  4436                           ;lcd.c: 153:     LCDWriteNibble(ch,0);
  4437  0FE6  01F0               	clrf	LCDWriteNibble@rs
  4438  0FE7  0875               	movf	LCDPutCmd@ch,w
  4439  0FE8  3181  211C  318F   	fcall	_LCDWriteNibble
  4440  0FEB                     l1437:
  4441                           
  4442                           ;lcd.c: 156:     ch = (ch << 4);
  4443  0FEB  0875               	movf	LCDPutCmd@ch,w
  4444  0FEC  00F3               	movwf	??_LCDPutCmd
  4445  0FED  3003               	movlw	3
  4446  0FEE                     u1495:
  4447  0FEE  35F3               	lslf	??_LCDPutCmd,f
  4448  0FEF  3EFF               	addlw	-1
  4449  0FF0  1D03               	skipz
  4450  0FF1  2FEE               	goto	u1495
  4451  0FF2  3573               	lslf	??_LCDPutCmd,w
  4452  0FF3  00F4               	movwf	??_LCDPutCmd+1
  4453  0FF4  0874               	movf	??_LCDPutCmd+1,w
  4454  0FF5  00F5               	movwf	LCDPutCmd@ch
  4455  0FF6                     l1439:
  4456                           
  4457                           ;lcd.c: 158:     _delay((unsigned long)((1)*(1000000/4000.0)));
  4458  0FF6  3053               	movlw	83
  4459  0FF7                     u1907:
  4460  0FF7  0B89               	decfsz	9,f
  4461  0FF8  2FF7               	goto	u1907
  4462  0FF9  0000               	nop
  4463  0FFA                     l1441:
  4464                           
  4465                           ;lcd.c: 161:     LCDWriteNibble(ch,0);
  4466  0FFA  01F0               	clrf	LCDWriteNibble@rs
  4467  0FFB  0875               	movf	LCDPutCmd@ch,w
  4468  0FFC  3181  211C  318F   	fcall	_LCDWriteNibble
  4469  0FFF                     l40:
  4470  0FFF  0008               	return
  4471  1000                     __end_of_LCDPutCmd:
  4472                           
  4473                           	psect	text20
  4474  011C                     __ptext20:	
  4475 ;; *************** function _LCDWriteNibble *****************
  4476 ;; Defined at:
  4477 ;;		line 80 in file "lcd.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  ch              1    wreg     unsigned char 
  4480 ;;  rs              1    0[COMMON] unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  ch              1    2[COMMON] unsigned char 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4492 ;;      Params:         1       0       0       0       0       0       0       0
  4493 ;;      Locals:         1       0       0       0       0       0       0       0
  4494 ;;      Temps:          1       0       0       0       0       0       0       0
  4495 ;;      Totals:         3       0       0       0       0       0       0       0
  4496 ;;Total ram usage:        3 bytes
  4497 ;; Hardware stack levels used: 1
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_LCDPutChar
  4502 ;;		_LCDPutCmd
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506  011C                     _LCDWriteNibble:	
  4507                           ;psect for function _LCDWriteNibble
  4508                           
  4509                           
  4510                           ;incstack = 0
  4511                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  4512                           ;LCDWriteNibble@ch stored from wreg
  4513  011C  00F2               	movwf	LCDWriteNibble@ch
  4514  011D                     l1341:
  4515                           
  4516                           ;lcd.c: 80: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 81: {;lcd.c: 83:     ch = 
      +                          (ch & 0xF0);
  4517  011D  0872               	movf	LCDWriteNibble@ch,w
  4518  011E  39F0               	andlw	240
  4519  011F  00F1               	movwf	??_LCDWriteNibble
  4520  0120  0871               	movf	??_LCDWriteNibble,w
  4521  0121  00F2               	movwf	LCDWriteNibble@ch
  4522                           
  4523                           ;lcd.c: 86:     LATC = (LATC & 0x0F);
  4524  0122  0022               	movlb	2	; select bank2
  4525  0123  080E               	movf	14,w	;volatile
  4526  0124  390F               	andlw	15
  4527  0125  008E               	movwf	14	;volatile
  4528  0126                     l1343:
  4529                           
  4530                           ;lcd.c: 87:     LATBbits.LATB4 = 0;
  4531  0126  120D               	bcf	13,4	;volatile
  4532  0127                     l1345:
  4533                           
  4534                           ;lcd.c: 88:     LATBbits.LATB5 = 0;
  4535  0127  128D               	bcf	13,5	;volatile
  4536  0128                     l1347:
  4537                           
  4538                           ;lcd.c: 89:     LATBbits.LATB6 = 0;
  4539  0128  130D               	bcf	13,6	;volatile
  4540  0129                     l1349:
  4541                           
  4542                           ;lcd.c: 90:     LATBbits.LATB7 = 0;
  4543  0129  138D               	bcf	13,7	;volatile
  4544  012A                     l1351:
  4545                           
  4546                           ;lcd.c: 94:     if(((ch & 0x80)>>7)==1){
  4547  012A  0872               	movf	LCDWriteNibble@ch,w
  4548  012B  00F1               	movwf	??_LCDWriteNibble
  4549  012C  3007               	movlw	7
  4550  012D                     u1255:
  4551  012D  36F1               	lsrf	??_LCDWriteNibble,f
  4552  012E  0B89               	decfsz	9,f
  4553  012F  292D               	goto	u1255
  4554  0130  1C71               	btfss	??_LCDWriteNibble,0
  4555  0131  2933               	goto	u1261
  4556  0132  2934               	goto	u1260
  4557  0133                     u1261:
  4558  0133  2936               	goto	l26
  4559  0134                     u1260:
  4560  0134                     l1353:
  4561                           
  4562                           ;lcd.c: 95:         LATBbits.LATB7 = 1;
  4563  0134  178D               	bsf	13,7	;volatile
  4564                           
  4565                           ;lcd.c: 96:     } else{
  4566  0135  2937               	goto	l1355
  4567  0136                     l26:
  4568                           
  4569                           ;lcd.c: 97:         LATBbits.LATB7 = 0;
  4570  0136  138D               	bcf	13,7	;volatile
  4571  0137                     l1355:
  4572                           
  4573                           ;lcd.c: 100:     if(((ch & 0x40)>>6)==1){
  4574  0137  0872               	movf	LCDWriteNibble@ch,w
  4575  0138  00F1               	movwf	??_LCDWriteNibble
  4576  0139  3006               	movlw	6
  4577  013A                     u1275:
  4578  013A  36F1               	lsrf	??_LCDWriteNibble,f
  4579  013B  0B89               	decfsz	9,f
  4580  013C  293A               	goto	u1275
  4581  013D  1C71               	btfss	??_LCDWriteNibble,0
  4582  013E  2940               	goto	u1281
  4583  013F  2941               	goto	u1280
  4584  0140                     u1281:
  4585  0140  2943               	goto	l28
  4586  0141                     u1280:
  4587  0141                     l1357:
  4588                           
  4589                           ;lcd.c: 101:         LATBbits.LATB6 = 1;
  4590  0141  170D               	bsf	13,6	;volatile
  4591                           
  4592                           ;lcd.c: 102:     } else{
  4593  0142  2944               	goto	l1359
  4594  0143                     l28:
  4595                           
  4596                           ;lcd.c: 103:         LATBbits.LATB6 = 0;
  4597  0143  130D               	bcf	13,6	;volatile
  4598  0144                     l1359:
  4599                           
  4600                           ;lcd.c: 106:     if(((ch & 0x20)>>5)==1){
  4601  0144  0872               	movf	LCDWriteNibble@ch,w
  4602  0145  00F1               	movwf	??_LCDWriteNibble
  4603  0146  3005               	movlw	5
  4604  0147                     u1295:
  4605  0147  36F1               	lsrf	??_LCDWriteNibble,f
  4606  0148  0B89               	decfsz	9,f
  4607  0149  2947               	goto	u1295
  4608  014A  1C71               	btfss	??_LCDWriteNibble,0
  4609  014B  294D               	goto	u1301
  4610  014C  294E               	goto	u1300
  4611  014D                     u1301:
  4612  014D  2950               	goto	l30
  4613  014E                     u1300:
  4614  014E                     l1361:
  4615                           
  4616                           ;lcd.c: 107:         LATBbits.LATB5 = 1;
  4617  014E  168D               	bsf	13,5	;volatile
  4618                           
  4619                           ;lcd.c: 108:     } else{
  4620  014F  2951               	goto	l1363
  4621  0150                     l30:
  4622                           
  4623                           ;lcd.c: 109:         LATBbits.LATB5 = 0;
  4624  0150  128D               	bcf	13,5	;volatile
  4625  0151                     l1363:
  4626                           
  4627                           ;lcd.c: 112:     if(((ch & 0x10)>>4)==1){
  4628  0151  0872               	movf	LCDWriteNibble@ch,w
  4629  0152  00F1               	movwf	??_LCDWriteNibble
  4630  0153  3004               	movlw	4
  4631  0154                     u1315:
  4632  0154  36F1               	lsrf	??_LCDWriteNibble,f
  4633  0155  0B89               	decfsz	9,f
  4634  0156  2954               	goto	u1315
  4635  0157  1C71               	btfss	??_LCDWriteNibble,0
  4636  0158  295A               	goto	u1321
  4637  0159  295B               	goto	u1320
  4638  015A                     u1321:
  4639  015A  295D               	goto	l32
  4640  015B                     u1320:
  4641  015B                     l1365:
  4642                           
  4643                           ;lcd.c: 113:         LATBbits.LATB4 = 1;
  4644  015B  160D               	bsf	13,4	;volatile
  4645                           
  4646                           ;lcd.c: 114:     } else{
  4647  015C  295E               	goto	l1367
  4648  015D                     l32:
  4649                           
  4650                           ;lcd.c: 115:         LATBbits.LATB4 = 0;
  4651  015D  120D               	bcf	13,4	;volatile
  4652  015E                     l1367:
  4653                           
  4654                           ;lcd.c: 121:     LATCbits.LATC0 = rs;
  4655  015E  0C70               	rrf	LCDWriteNibble@rs,w
  4656  015F  1C03               	skipc
  4657  0160  100E               	bcf	14,0	;volatile
  4658  0161  1803               	skipnc
  4659  0162  140E               	bsf	14,0	;volatile
  4660  0163                     l1369:
  4661                           
  4662                           ;lcd.c: 124:     LATCbits.LATC1 = 0;
  4663  0163  108E               	bcf	14,1	;volatile
  4664  0164                     l1371:
  4665                           
  4666                           ;lcd.c: 127:     LATCbits.LATC2 = 1;
  4667  0164  150E               	bsf	14,2	;volatile
  4668  0165                     l1373:
  4669                           
  4670                           ;lcd.c: 130:     LATCbits.LATC2 = 0;
  4671  0165  110E               	bcf	14,2	;volatile
  4672  0166                     l34:
  4673  0166  0008               	return
  4674  0167                     __end_of_LCDWriteNibble:
  4675  007E                     btemp	set	126	;btemp
  4676  007E                     wtemp0	set	126
  4677                           
  4678                           	psect	idloc
  4679                           
  4680                           ;Config register IDLOC0 @ 0x8000
  4681                           ;	unspecified, using default values
  4682  8000                     	org	32768
  4683  8000  3FFF               	dw	16383
  4684                           
  4685                           ;Config register IDLOC1 @ 0x8001
  4686                           ;	unspecified, using default values
  4687  8001                     	org	32769
  4688  8001  3FFF               	dw	16383
  4689                           
  4690                           ;Config register IDLOC2 @ 0x8002
  4691                           ;	unspecified, using default values
  4692  8002                     	org	32770
  4693  8002  3FFF               	dw	16383
  4694                           
  4695                           ;Config register IDLOC3 @ 0x8003
  4696                           ;	unspecified, using default values
  4697  8003                     	org	32771
  4698  8003  3FFF               	dw	16383
  4699                           
  4700                           	psect	config
  4701                           
  4702                           ;Config register CONFIG1 @ 0x8007
  4703                           ;	Oscillator Selection Bits
  4704                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4705                           ;	Watchdog Timer Enable
  4706                           ;	WDTE = OFF, WDT disabled
  4707                           ;	Power-up Timer Enable
  4708                           ;	PWRTE = OFF, PWRT disabled
  4709                           ;	MCLR Pin Function Select
  4710                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4711                           ;	Flash Program Memory Code Protection
  4712                           ;	CP = OFF, Program memory code protection is disabled
  4713                           ;	Brown-out Reset Enable
  4714                           ;	BOREN = OFF, Brown-out Reset disabled
  4715                           ;	Clock Out Enable
  4716                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4717                           ;	Internal/External Switchover Mode
  4718                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  4719                           ;	Fail-Safe Clock Monitor Enable
  4720                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4721  8007                     	org	32775
  4722  8007  09A4               	dw	2468
  4723                           
  4724                           ;Config register CONFIG2 @ 0x8008
  4725                           ;	Flash Memory Self-Write Protection
  4726                           ;	WRT = OFF, Write protection off
  4727                           ;	Stack Overflow/Underflow Reset Enable
  4728                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  4729                           ;	Brown-out Reset Voltage Selection
  4730                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4731                           ;	Low-Power Brown Out Reset
  4732                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4733                           ;	Low-Voltage Programming Enable
  4734                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4735  8008                     	org	32776
  4736  8008  1DFF               	dw	7679

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         40
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      78
    BANK1            80     56      56
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 9
		 -> main@time_string(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S453$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S453$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    LCDPutStr2@str	PTR const unsigned char  size(2) Largest target is 16
		 -> main@time_string(BANK1[9]), STR_2(CODE[9]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_LCDPutStr2
    _main->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr2->_LCDGoto
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   10674
                                             26 BANK1     30    30      0
                         _LCDPutStr2
                     _LCD_Initialize
                            ___awdiv
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    6112
                                             13 COMMON     1     1      0
                                              0 BANK1     26    12     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     504
                                              6 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr2                                           8     4      4    2080
                                             10 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            _LCDGoto
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     504
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              4     3      1     714
                                              6 COMMON     4     3      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     504
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       3     2      1     437
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDPutStr2
     _LCDGoto
       _LCDPutCmd
         _LCDWriteNibble
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
   ___awdiv
   ___awmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B4       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     46      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     38      38       8       70.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      B4      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 07 18:22:13 2022

         _LCD_Initialize 001C                       l30 0150                       l23 0040  
                     l32 015D                       l40 0FFF                       l34 0166  
                     l26 0136              ?_LCDPutChar 0070                       l28 0143  
                     l52 008D                       l37 0FE0                       l61 011B  
           ___awdiv@sign 0076              ?_LCDPutStr2 007A                      l320 020B  
                    l307 02C0                      l254 0573                      l255 0584  
                    l267 0472                      l268 0483                      l617 0066  
                    l708 01B8                      l716 00DE                      l644 0226  
                    l652 06D5                      l725 0FC3                      l661 0778  
                    l653 06DE                      l719 0015                      l647 0248  
                    l649 0261                      l657 06F6                      l658 0708  
                    l682 0399                      l675 07EC                      l693 0FA9  
                    l696 0FA9                      l689 00B5                      u930 016C  
                    u931 016B                      u940 0171                      u941 0170  
                    u950 0180                      u951 017F                      u960 019E  
                    u961 019D                      u970 00DE                      u971 00DD  
                    u980 0FBD                      u965 019A                      u981 0FBC  
                    u990 048F                      u991 048E                      _abs 0F90  
                    _pad 020C             ___awmod@sign 0076                      wreg 0009  
        __end_of_LCDGoto 008E                     ?_abs 0073                     l1301 0407  
                   l1221 0180                     l1213 0167                     l1303 040B  
                   l1311 044F                     l1223 019E                     l1215 016C  
                   l1231 00BB                     l1313 0454                     l1305 040F  
                   l1225 01AF                     l1217 0171                     l1233 00C9  
                   l1241 0FB4                     l1321 021F                     l1401 0743  
                   l1251 048F                     l1307 0431                     l1219 0176  
                   l1235 00CE                     l1243 0FBD                     l1331 024D  
                   l1323 0224                     l1315 020E                     l1411 07A0  
                   l1403 0747                     l1341 011D                     l1501 007A  
                   l1261 04E7                     l1253 04B0                     l1309 0441  
                   l1229 00B8                     l1237 0FAB                     l1333 0255  
                   l1325 0229                     l1317 0212                     l1421 07C2  
                   l1413 07AE                     l1405 074B                     l1351 012A  
                   l1343 0126                     l1503 0080                     l1271 0507  
                   l1263 04F4                     l1255 04BA                     l1247 0484  
                   l1239 0FB0                     l1327 0235                     l1319 021A  
                   l1423 07C8                     l1407 0786                     l1415 07B3  
                   l1511 0094                     l1361 014E                     l1353 0134  
                   l1345 0127                     l1441 0FFA                     l1433 0FE2  
                   l1505 0085                     l1521 001C                     l1601 02BC  
                   l1273 050F                     l1265 04F7                     l1281 0550  
                   l1257 04D9                     l1249 0485                     l1337 0F90  
                   l1329 023A                     l1425 07CD                     l1417 07BA  
                   l1409 0793                     l1513 0097                     l1371 0164  
                   l1363 0151                     l1355 0137                     l1347 0128  
                   l1435 0FE6                     l1507 0089                     l1531 0038  
                   l1523 0025                     l1611 01C3                     l1283 0555  
                   l1275 0531                     l1267 04FF                     l1259 04DD  
                   l1291 03C6                     l1339 0F9D                     l1427 07D1  
                   l1419 07BE                     l1451 02E4                     l1443 02C3  
                   l1515 00A8                     l1373 0165                     l1365 015B  
                   l1357 0141                     l1349 0129                     l1437 0FEB  
                   l1541 00F4                     l1533 003C                     l1525 002C  
                   l1621 01D7                     l1613 01C5                     l1605 01B9  
                   l1277 0541                     l1269 0503                     l1293 03D0  
                   l1285 039A                     l1429 07DA                     l1381 06B7  
                   l1453 02F5                     l1445 02D4                     l1517 00B1  
                   l1509 0090                     l1367 015E                     l1359 0144  
                   l1439 0FF6                     l1543 00F7                     l1535 00DF  
                   l1527 0030                     l1631 01F2                     l1623 01DC  
                   l1615 01C9                     l1607 01BA                     l1279 0542  
                   l1295 03EF                     l1287 039B                     l1391 0700  
                   l1383 06DA                     l1375 068E                     l1463 0341  
                   l1455 0306                     l1447 02DC                     l1551 004B  
                   l1369 0163                     l1545 0106                     l1537 00E5  
                   l1529 0034                     l1561 0262                     l1633 01F7  
                   l1625 01E0                     l1617 01CE                     l1609 01BE  
                   l1297 03FC                     l1289 03A5                     l1393 0704  
                   l1385 06EB                     l1377 069E                     l1481 038F  
                   l1465 0352                     l1473 036B                     l1457 030E  
                   l1449 02E0                     l1553 004D                     l1491 0FCF  
                   l1547 010B                     l1539 00EB                     l1571 0272  
                   l1563 0263                     l1627 01E4                     l1619 01D4  
                   l1635 01FD                     l1299 03FF                     l1395 070C  
                   l1387 06F1                     l1379 06B1                     l1475 0373  
                   l1467 035A                     l1459 0327                     l1555 004F  
                   l1651 0585                     l1493 0FDA                     l1581 0286  
                   l1573 0277                     l1565 0267                     l1637 0202  
                   l1629 01EE                     l1397 070F                     l1389 06FA  
                   l1469 0365                     l1557 005E                     l1549 0043  
                   l1653 058E                     l1495 0068                     l1487 0FC5  
                   l1591 02A6                     l1583 028B                     l1575 027B  
                   l1567 026C                     l1639 0207                     l1399 0714  
                   l1479 0376                     l1671 05AC                     l1655 0591  
                   l1497 006E                     l1489 0FC9                     l1593 02A7  
                   l1585 028F                     l1577 027D                     l1569 026E  
                   l1681 0651                     l1665 05AB                     l1657 059B  
                   l1499 0075                     l1595 02AC                     l1587 0293  
                   l1579 0283                     l1691 0677                     l1683 065F  
                   l1659 05A9                     l1589 02A2                     l1597 02B2  
                   l1693 067D                     l1685 0668                     l1677 05AD  
                   l1599 02B7                     l1695 0681                     l1687 066D  
                   l1679 061F                     l1697 0687                     l1689 0673  
                   ?_pad 0024                     STR_1 1000                     STR_2 101F  
                   STR_3 1010                     u1010 04BA                     u1011 04B9  
                   u1100 03A5                     u1101 03A4                     u1030 04E4  
                   u1040 04F4                     u1120 03D0                     u1200 0212  
                   u1041 04F3                     u1121 03CF                     u1201 0211  
                   u1050 0507                     u1210 021F                     u1051 0506  
                   u1211 021E                     u1300 014E                     u1060 0531  
                   u1140 03FC                     u1220 0248                     u1301 014D  
                   u1061 0530                     u1141 03FB                     u1221 0247  
                   u1070 0550                     u1150 040F                     u1230 024D  
                   u1071 054F                     u1151 040E                     u1231 024C  
                   u1320 015B                     u1080 0555                     u1160 0431  
                   u1240 0F9D                     u1400 0704                     u1321 015A  
                   u1081 0554                     u1065 052D                     u1161 0430  
                   u1241 0F9C                     u1225 0244                     u1401 0703  
                   u1170 044F                     u1410 0786                     u1330 06A9  
                   u1315 0154                     u1171 044E                     u1411 0785  
                   u1331 06A7                     u1260 0134                     u1180 0454  
                   u1420 0793                     u1340 06AA                     u1500 02D4  
                   u1261 0133                     u1181 0453                     u1165 042D  
                   u1245 0F99                     u1421 0792                     u1501 02D3  
                   u1430 07A0                     u1350 06B7                     u1510 02F5  
                   _LATB 010D                     u1255 012D                     u1431 079F  
                   u1415 0782                     u1351 06B6                     u1511 02F4  
                   _LATC 010E                     u1280 0141                     u1600 00EB  
                   u1440 07AE                     u1520 0306                     u1281 0140  
                   u1601 00EA                     u1441 07AD                     u1521 0305  
                   u1610 011B                     u1450 07B3                     u1370 06DA  
                   u1530 0352                     u1275 013A                     u1611 011A  
                   u1451 07B2                     u1435 079C                     u1371 06D9  
                   u1531 0351                     u1700 02B2                     u1620 0267  
                   u1460 07BA                     u1380 06EB                     u1701 02B1  
                   u1621 0266                     u1461 07B9                     u1445 07AA  
                   u1381 06EA                     u1550 006E                     u1710 02B7  
                   u1630 0272                     u1470 07BE                     u1390 0700  
                   u1295 0147                     u1551 006D                     u1711 02B6  
                   u1631 0271                     u1471 07BD                     u1391 06FF  
                   u1560 0074                     u1640 0283                     u1800 0202  
                   u1720 01BE                     u1480 07C8                     u1561 0073  
                   u1545 0FD2                     u1641 0282                     u1801 0201  
                   u1721 01BD                     u1481 07C7                     u1385 06E7  
                   u1570 007A                     u1730 01C9                     u1571 0079  
                   u1731 01C8                     u1660 0293                     u1740 01D4  
                   u1580 00B1                     u1820 0673                     u1661 0292  
                   u1741 01D3                     u1581 00B0                     u1821 0672  
                   u1590 00E5                     u1830 067D                     u1495 0FEE  
                   u1591 00E4                     u1655 0287                     u1831 067C  
                   u1680 02A2                     u1760 01E4                     u1840 0687  
                   u1681 02A1                     u1761 01E3                     u1841 0686  
                   u1770 01EE                     u1907 0FF7                     u1675 0294  
                   u1771 01ED                     u1755 01D8                     u1685 029E  
                   u1790 01FD                     u1695 02A8                     u1791 01FC  
                   u1775 01EA                     u1785 01F3                     u1857 0663  
                   u1867 0028                     u1877 0FC6                     u1887 008A  
                   u1897 0FE3                     abs@a 0073                     _dbuf 0120  
                   _main 0585                     _dtoa 068C                     _prec 006A  
                   _nout 0066                     pad@i 0027                     pad@p 0025  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   pad@w 0029                     btemp 007E                     start 0002  
 __end_of_LCD_Initialize 0041                    ??_abs 0075                    ??_pad 007C  
            LCDPutCmd@ch 0075          __end_of___aodiv 0585                    ?_main 0070  
                  ?_dtoa 0030          __end_of___aomod 0484          __end_of___awdiv 02C1  
        __end_of___awmod 020C          ___awdiv@divisor 0070              LCDPutStr2@i 0023  
        ___awdiv@counter 0075             vfpfcnvrt@fmt 004E                    _TRISB 008D  
                  _TRISC 008E                    _flags 006C                    _fputc 0167  
                  _fputs 00B6                    pad@fp 002B                    _width 0068  
                  _putch 0015                    dtoa@d 0030                    dtoa@i 004C  
                  dtoa@n 0044                    dtoa@p 003E                    dtoa@s 0042  
                  dtoa@w 0040                    status 0003                    wtemp0 007E  
        __end_of_sprintf 0067          ?_LCD_Initialize 0070          __initialization 07ED  
           __end_of_main 068C             __end_of_dtoa 07ED                   ??_main 00BA  
                 ??_dtoa 0038                ??_LCDGoto 0077        __end_of_LCDPutCmd 1000  
           LCDPutChar@ch 0075                   ?_fputc 0070                   ?_fputs 0078  
       ___awdiv@dividend 0072                   ?_putch 0070                   _ANSELB 018D  
                 _ANSELC 018E                   u100lld 04AE                   u102lld 04D9  
                 u111lld 03C4                   u113lld 03EF                   u109lld 0573  
                 u119lld 0472                   u136lld 06D5           _LCDWriteNibble 011C  
           vfprintf@cfmt 0064                ??___aodiv 0070                ??___aomod 0070  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075                   pad@buf 0024  
                 dtoa@fp 003D                   _strlen 0FAA                   fputc@c 0070  
                 fputs@c 0020                   fputs@i 0021                   fputs@s 0023  
                 putch@c 0070         __end_of_vfprintf 00B6                ??_sprintf 007D  
 __end_of_LCDWriteNibble 0167  __end_of__initialization 07FD                LCDGoto@ln 0076  
         __pcstackCOMMON 0070            __end_of_fputc 01B9             ??_LCDPutChar 0073  
          __end_of_fputs 00DF             ??_LCDPutStr2 0020            __end_of_putch 0016  
      main@minute_digit1 00D1        main@minute_digit2 00D2        main@second_digit1 00D3  
      main@second_digit2 00D4                  ??_fputc 0073                  ??_fputs 0079  
                ??_putch 0070               __pbssBANK0 0066               __pbssBANK2 0120  
        ?_LCDWriteNibble 0070       __end_of_LCDPutChar 0FE1       __end_of_LCDPutStr2 011C  
             __pmaintext 0585                  ?_strlen 0070                  _LCDGoto 0067  
          LCDPutStr2@str 007A         ??_LCD_Initialize 0076                  ___aodiv 0484  
                ___aomod 039A                  ___awdiv 0262                  ___awmod 01B9  
              ?_vfprintf 005E                  __ptext1 0041                  __ptext2 008E  
                __ptext3 02C1                  __ptext4 068C                  __ptext5 020C  
                __ptext6 0FAA                  __ptext7 00B6                  __ptext8 0167  
                __ptext9 0015         ___awmod@dividend 0072          LCDPutStr2@_line 007D  
              _LCDPutCmd 0FE1                  _sprintf 0041                  clrloop0 0017  
   end_of_initialization 07FD                  fputc@fp 0072                  fputs@fp 0078  
      __end_of_vfpfcnvrt 039A               ??_vfprintf 0061                  strlen@a 0073  
                strlen@s 0074               ?_LCDPutCmd 0070               LCDGoto@pos 0079  
            vfpfcnvrt@ap 004F              vfpfcnvrt@fp 005D              vfpfcnvrt@ll 0055  
         __end_of_strlen 0FC4      start_initialization 07ED         ??_LCDWriteNibble 0071  
            __end_of_abs 0FAA              __end_of_pad 0262         main@hour_counter 00D5  
     main@minute_counter 00D6              vfprintf@fmt 005E       main@second_counter 00D7  
               ??_strlen 0072                 ?_LCDGoto 0076                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0         ___aodiv@dividend 0028  
            ??_LCDPutCmd 0073                 ?___aodiv 0020                 ?___aomod 0020  
               ?___awdiv 0070         ___aodiv@quotient 0073                 ?___awmod 0070  
       LCDWriteNibble@ch 0072         LCDWriteNibble@rs 0070                 ?_sprintf 00A0  
         LCDPutStr2@_pos 007C                 _LATBbits 010D                 _LATCbits 010E  
              clear_ram0 0016              _LCDGoto$104 0077                _vfpfcnvrt 02C1  
        main@hour_digit1 00CF          main@hour_digit2 00D0               vfprintf@ap 0060  
             vfprintf@fp 0063               ?_vfpfcnvrt 004E          ___aodiv@divisor 0020  
        ___aodiv@counter 0071               sprintf@fmt 00A0                 _dtoa$535 003B  
               __ptext10 0F90                 __ptext11 039A                 __ptext20 011C  
               __ptext12 0484                 __ptext13 01B9                 __ptext14 0262  
               __ptext15 001C                 __ptext16 00DF                 __ptext17 0FC4  
               __ptext18 0067                 __ptext19 0FE1                 _vfprintf 008E  
             _LCDPutChar 0FC4               _LCDPutStr2 00DF         ___aomod@dividend 0028  
        main@time_string 00C6                sprintf@ap 00AE          ___aomod@divisor 0020  
            ??_vfpfcnvrt 0050          ___aomod@counter 0071            __pstringtext1 1000  
          __pstringtext2 1010            __pstringtext3 101F            __pstringtext4 0000  
               sprintf@f 00B0                 sprintf@s 00AF             ___aodiv@sign 0072  
           ___aomod@sign 0072  
