

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 17 09:25:32 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F1509 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  0111                     	;# 
   139  0112                     	;# 
   140  0113                     	;# 
   141  0114                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0118                     	;# 
   146  0119                     	;# 
   147  011D                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  0191                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  020C                     	;# 
   169  020D                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  0391                     	;# 
   186  0392                     	;# 
   187  0393                     	;# 
   188  0394                     	;# 
   189  0395                     	;# 
   190  0396                     	;# 
   191  0498                     	;# 
   192  0498                     	;# 
   193  0499                     	;# 
   194  049A                     	;# 
   195  049B                     	;# 
   196  049B                     	;# 
   197  049C                     	;# 
   198  049D                     	;# 
   199  049E                     	;# 
   200  049F                     	;# 
   201  0611                     	;# 
   202  0612                     	;# 
   203  0613                     	;# 
   204  0613                     	;# 
   205  0614                     	;# 
   206  0615                     	;# 
   207  0616                     	;# 
   208  0616                     	;# 
   209  0617                     	;# 
   210  0618                     	;# 
   211  0619                     	;# 
   212  0619                     	;# 
   213  061A                     	;# 
   214  061B                     	;# 
   215  061C                     	;# 
   216  061C                     	;# 
   217  0691                     	;# 
   218  0692                     	;# 
   219  0693                     	;# 
   220  0694                     	;# 
   221  0695                     	;# 
   222  0F0F                     	;# 
   223  0F10                     	;# 
   224  0F11                     	;# 
   225  0F12                     	;# 
   226  0F13                     	;# 
   227  0F14                     	;# 
   228  0F15                     	;# 
   229  0F16                     	;# 
   230  0F17                     	;# 
   231  0F18                     	;# 
   232  0F19                     	;# 
   233  0F1A                     	;# 
   234  0F1B                     	;# 
   235  0F1C                     	;# 
   236  0F1D                     	;# 
   237  0F1E                     	;# 
   238  0F1F                     	;# 
   239  0F20                     	;# 
   240  0F21                     	;# 
   241  0F22                     	;# 
   242  0F23                     	;# 
   243  0F24                     	;# 
   244  0F25                     	;# 
   245  0F26                     	;# 
   246  0F27                     	;# 
   247  0F28                     	;# 
   248  0F29                     	;# 
   249  0F2A                     	;# 
   250  0F2B                     	;# 
   251  0F2C                     	;# 
   252  0F2D                     	;# 
   253  0F2E                     	;# 
   254  0F2F                     	;# 
   255  0F8C                     	;# 
   256  0F8D                     	;# 
   257  0F91                     	;# 
   258  0F95                     	;# 
   259  0F96                     	;# 
   260  0F97                     	;# 
   261  0F9C                     	;# 
   262  0F9D                     	;# 
   263  0F9E                     	;# 
   264  0FE3                     	;# 
   265  0FE4                     	;# 
   266  0FE5                     	;# 
   267  0FE6                     	;# 
   268  0FE7                     	;# 
   269  0FE8                     	;# 
   270  0FE9                     	;# 
   271  0FEA                     	;# 
   272  0FEB                     	;# 
   273  0FED                     	;# 
   274  0FEE                     	;# 
   275  0FEF                     	;# 
   276  0000                     	;# 
   277  0001                     	;# 
   278  0002                     	;# 
   279  0003                     	;# 
   280  0004                     	;# 
   281  0005                     	;# 
   282  0006                     	;# 
   283  0007                     	;# 
   284  0008                     	;# 
   285  0009                     	;# 
   286  000A                     	;# 
   287  000B                     	;# 
   288  000C                     	;# 
   289  000D                     	;# 
   290  000E                     	;# 
   291  0011                     	;# 
   292  0012                     	;# 
   293  0013                     	;# 
   294  0015                     	;# 
   295  0016                     	;# 
   296  0016                     	;# 
   297  0017                     	;# 
   298  0018                     	;# 
   299  0019                     	;# 
   300  001A                     	;# 
   301  001B                     	;# 
   302  001C                     	;# 
   303  008C                     	;# 
   304  008D                     	;# 
   305  008E                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0095                     	;# 
   310  0096                     	;# 
   311  0097                     	;# 
   312  0099                     	;# 
   313  009A                     	;# 
   314  009B                     	;# 
   315  009B                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  009F                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  0111                     	;# 
   324  0112                     	;# 
   325  0113                     	;# 
   326  0114                     	;# 
   327  0115                     	;# 
   328  0116                     	;# 
   329  0117                     	;# 
   330  0118                     	;# 
   331  0119                     	;# 
   332  011D                     	;# 
   333  018C                     	;# 
   334  018D                     	;# 
   335  018E                     	;# 
   336  0191                     	;# 
   337  0191                     	;# 
   338  0192                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0197                     	;# 
   345  0199                     	;# 
   346  019A                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019C                     	;# 
   350  019D                     	;# 
   351  019E                     	;# 
   352  019F                     	;# 
   353  020C                     	;# 
   354  020D                     	;# 
   355  0211                     	;# 
   356  0211                     	;# 
   357  0212                     	;# 
   358  0212                     	;# 
   359  0213                     	;# 
   360  0213                     	;# 
   361  0214                     	;# 
   362  0214                     	;# 
   363  0215                     	;# 
   364  0215                     	;# 
   365  0215                     	;# 
   366  0216                     	;# 
   367  0216                     	;# 
   368  0217                     	;# 
   369  0217                     	;# 
   370  0391                     	;# 
   371  0392                     	;# 
   372  0393                     	;# 
   373  0394                     	;# 
   374  0395                     	;# 
   375  0396                     	;# 
   376  0498                     	;# 
   377  0498                     	;# 
   378  0499                     	;# 
   379  049A                     	;# 
   380  049B                     	;# 
   381  049B                     	;# 
   382  049C                     	;# 
   383  049D                     	;# 
   384  049E                     	;# 
   385  049F                     	;# 
   386  0611                     	;# 
   387  0612                     	;# 
   388  0613                     	;# 
   389  0613                     	;# 
   390  0614                     	;# 
   391  0615                     	;# 
   392  0616                     	;# 
   393  0616                     	;# 
   394  0617                     	;# 
   395  0618                     	;# 
   396  0619                     	;# 
   397  0619                     	;# 
   398  061A                     	;# 
   399  061B                     	;# 
   400  061C                     	;# 
   401  061C                     	;# 
   402  0691                     	;# 
   403  0692                     	;# 
   404  0693                     	;# 
   405  0694                     	;# 
   406  0695                     	;# 
   407  0F0F                     	;# 
   408  0F10                     	;# 
   409  0F11                     	;# 
   410  0F12                     	;# 
   411  0F13                     	;# 
   412  0F14                     	;# 
   413  0F15                     	;# 
   414  0F16                     	;# 
   415  0F17                     	;# 
   416  0F18                     	;# 
   417  0F19                     	;# 
   418  0F1A                     	;# 
   419  0F1B                     	;# 
   420  0F1C                     	;# 
   421  0F1D                     	;# 
   422  0F1E                     	;# 
   423  0F1F                     	;# 
   424  0F20                     	;# 
   425  0F21                     	;# 
   426  0F22                     	;# 
   427  0F23                     	;# 
   428  0F24                     	;# 
   429  0F25                     	;# 
   430  0F26                     	;# 
   431  0F27                     	;# 
   432  0F28                     	;# 
   433  0F29                     	;# 
   434  0F2A                     	;# 
   435  0F2B                     	;# 
   436  0F2C                     	;# 
   437  0F2D                     	;# 
   438  0F2E                     	;# 
   439  0F2F                     	;# 
   440  0F8C                     	;# 
   441  0F8D                     	;# 
   442  0F91                     	;# 
   443  0F95                     	;# 
   444  0F96                     	;# 
   445  0F97                     	;# 
   446  0F9C                     	;# 
   447  0F9D                     	;# 
   448  0F9E                     	;# 
   449  0FE3                     	;# 
   450  0FE4                     	;# 
   451  0FE5                     	;# 
   452  0FE6                     	;# 
   453  0FE7                     	;# 
   454  0FE8                     	;# 
   455  0FE9                     	;# 
   456  0FEA                     	;# 
   457  0FEB                     	;# 
   458  0FED                     	;# 
   459  0FEE                     	;# 
   460  0FEF                     	;# 
   461  0000                     	;# 
   462  0001                     	;# 
   463  0002                     	;# 
   464  0003                     	;# 
   465  0004                     	;# 
   466  0005                     	;# 
   467  0006                     	;# 
   468  0007                     	;# 
   469  0008                     	;# 
   470  0009                     	;# 
   471  000A                     	;# 
   472  000B                     	;# 
   473  000C                     	;# 
   474  000D                     	;# 
   475  000E                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0013                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  008C                     	;# 
   489  008D                     	;# 
   490  008E                     	;# 
   491  0091                     	;# 
   492  0092                     	;# 
   493  0093                     	;# 
   494  0095                     	;# 
   495  0096                     	;# 
   496  0097                     	;# 
   497  0099                     	;# 
   498  009A                     	;# 
   499  009B                     	;# 
   500  009B                     	;# 
   501  009C                     	;# 
   502  009D                     	;# 
   503  009E                     	;# 
   504  009F                     	;# 
   505  010C                     	;# 
   506  010D                     	;# 
   507  010E                     	;# 
   508  0111                     	;# 
   509  0112                     	;# 
   510  0113                     	;# 
   511  0114                     	;# 
   512  0115                     	;# 
   513  0116                     	;# 
   514  0117                     	;# 
   515  0118                     	;# 
   516  0119                     	;# 
   517  011D                     	;# 
   518  018C                     	;# 
   519  018D                     	;# 
   520  018E                     	;# 
   521  0191                     	;# 
   522  0191                     	;# 
   523  0192                     	;# 
   524  0193                     	;# 
   525  0193                     	;# 
   526  0194                     	;# 
   527  0195                     	;# 
   528  0196                     	;# 
   529  0197                     	;# 
   530  0199                     	;# 
   531  019A                     	;# 
   532  019B                     	;# 
   533  019B                     	;# 
   534  019C                     	;# 
   535  019D                     	;# 
   536  019E                     	;# 
   537  019F                     	;# 
   538  020C                     	;# 
   539  020D                     	;# 
   540  0211                     	;# 
   541  0211                     	;# 
   542  0212                     	;# 
   543  0212                     	;# 
   544  0213                     	;# 
   545  0213                     	;# 
   546  0214                     	;# 
   547  0214                     	;# 
   548  0215                     	;# 
   549  0215                     	;# 
   550  0215                     	;# 
   551  0216                     	;# 
   552  0216                     	;# 
   553  0217                     	;# 
   554  0217                     	;# 
   555  0391                     	;# 
   556  0392                     	;# 
   557  0393                     	;# 
   558  0394                     	;# 
   559  0395                     	;# 
   560  0396                     	;# 
   561  0498                     	;# 
   562  0498                     	;# 
   563  0499                     	;# 
   564  049A                     	;# 
   565  049B                     	;# 
   566  049B                     	;# 
   567  049C                     	;# 
   568  049D                     	;# 
   569  049E                     	;# 
   570  049F                     	;# 
   571  0611                     	;# 
   572  0612                     	;# 
   573  0613                     	;# 
   574  0613                     	;# 
   575  0614                     	;# 
   576  0615                     	;# 
   577  0616                     	;# 
   578  0616                     	;# 
   579  0617                     	;# 
   580  0618                     	;# 
   581  0619                     	;# 
   582  0619                     	;# 
   583  061A                     	;# 
   584  061B                     	;# 
   585  061C                     	;# 
   586  061C                     	;# 
   587  0691                     	;# 
   588  0692                     	;# 
   589  0693                     	;# 
   590  0694                     	;# 
   591  0695                     	;# 
   592  0F0F                     	;# 
   593  0F10                     	;# 
   594  0F11                     	;# 
   595  0F12                     	;# 
   596  0F13                     	;# 
   597  0F14                     	;# 
   598  0F15                     	;# 
   599  0F16                     	;# 
   600  0F17                     	;# 
   601  0F18                     	;# 
   602  0F19                     	;# 
   603  0F1A                     	;# 
   604  0F1B                     	;# 
   605  0F1C                     	;# 
   606  0F1D                     	;# 
   607  0F1E                     	;# 
   608  0F1F                     	;# 
   609  0F20                     	;# 
   610  0F21                     	;# 
   611  0F22                     	;# 
   612  0F23                     	;# 
   613  0F24                     	;# 
   614  0F25                     	;# 
   615  0F26                     	;# 
   616  0F27                     	;# 
   617  0F28                     	;# 
   618  0F29                     	;# 
   619  0F2A                     	;# 
   620  0F2B                     	;# 
   621  0F2C                     	;# 
   622  0F2D                     	;# 
   623  0F2E                     	;# 
   624  0F2F                     	;# 
   625  0F8C                     	;# 
   626  0F8D                     	;# 
   627  0F91                     	;# 
   628  0F95                     	;# 
   629  0F96                     	;# 
   630  0F97                     	;# 
   631  0F9C                     	;# 
   632  0F9D                     	;# 
   633  0F9E                     	;# 
   634  0FE3                     	;# 
   635  0FE4                     	;# 
   636  0FE5                     	;# 
   637  0FE6                     	;# 
   638  0FE7                     	;# 
   639  0FE8                     	;# 
   640  0FE9                     	;# 
   641  0FEA                     	;# 
   642  0FEB                     	;# 
   643  0FED                     	;# 
   644  0FEE                     	;# 
   645  0FEF                     	;# 
   646  0000                     	;# 
   647  0001                     	;# 
   648  0002                     	;# 
   649  0003                     	;# 
   650  0004                     	;# 
   651  0005                     	;# 
   652  0006                     	;# 
   653  0007                     	;# 
   654  0008                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  008C                     	;# 
   674  008D                     	;# 
   675  008E                     	;# 
   676  0091                     	;# 
   677  0092                     	;# 
   678  0093                     	;# 
   679  0095                     	;# 
   680  0096                     	;# 
   681  0097                     	;# 
   682  0099                     	;# 
   683  009A                     	;# 
   684  009B                     	;# 
   685  009B                     	;# 
   686  009C                     	;# 
   687  009D                     	;# 
   688  009E                     	;# 
   689  009F                     	;# 
   690  010C                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0113                     	;# 
   696  0114                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0117                     	;# 
   700  0118                     	;# 
   701  0119                     	;# 
   702  011D                     	;# 
   703  018C                     	;# 
   704  018D                     	;# 
   705  018E                     	;# 
   706  0191                     	;# 
   707  0191                     	;# 
   708  0192                     	;# 
   709  0193                     	;# 
   710  0193                     	;# 
   711  0194                     	;# 
   712  0195                     	;# 
   713  0196                     	;# 
   714  0197                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019C                     	;# 
   720  019D                     	;# 
   721  019E                     	;# 
   722  019F                     	;# 
   723  020C                     	;# 
   724  020D                     	;# 
   725  0211                     	;# 
   726  0211                     	;# 
   727  0212                     	;# 
   728  0212                     	;# 
   729  0213                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0214                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0216                     	;# 
   737  0216                     	;# 
   738  0217                     	;# 
   739  0217                     	;# 
   740  0391                     	;# 
   741  0392                     	;# 
   742  0393                     	;# 
   743  0394                     	;# 
   744  0395                     	;# 
   745  0396                     	;# 
   746  0498                     	;# 
   747  0498                     	;# 
   748  0499                     	;# 
   749  049A                     	;# 
   750  049B                     	;# 
   751  049B                     	;# 
   752  049C                     	;# 
   753  049D                     	;# 
   754  049E                     	;# 
   755  049F                     	;# 
   756  0611                     	;# 
   757  0612                     	;# 
   758  0613                     	;# 
   759  0613                     	;# 
   760  0614                     	;# 
   761  0615                     	;# 
   762  0616                     	;# 
   763  0616                     	;# 
   764  0617                     	;# 
   765  0618                     	;# 
   766  0619                     	;# 
   767  0619                     	;# 
   768  061A                     	;# 
   769  061B                     	;# 
   770  061C                     	;# 
   771  061C                     	;# 
   772  0691                     	;# 
   773  0692                     	;# 
   774  0693                     	;# 
   775  0694                     	;# 
   776  0695                     	;# 
   777  0F0F                     	;# 
   778  0F10                     	;# 
   779  0F11                     	;# 
   780  0F12                     	;# 
   781  0F13                     	;# 
   782  0F14                     	;# 
   783  0F15                     	;# 
   784  0F16                     	;# 
   785  0F17                     	;# 
   786  0F18                     	;# 
   787  0F19                     	;# 
   788  0F1A                     	;# 
   789  0F1B                     	;# 
   790  0F1C                     	;# 
   791  0F1D                     	;# 
   792  0F1E                     	;# 
   793  0F1F                     	;# 
   794  0F20                     	;# 
   795  0F21                     	;# 
   796  0F22                     	;# 
   797  0F23                     	;# 
   798  0F24                     	;# 
   799  0F25                     	;# 
   800  0F26                     	;# 
   801  0F27                     	;# 
   802  0F28                     	;# 
   803  0F29                     	;# 
   804  0F2A                     	;# 
   805  0F2B                     	;# 
   806  0F2C                     	;# 
   807  0F2D                     	;# 
   808  0F2E                     	;# 
   809  0F2F                     	;# 
   810  0F8C                     	;# 
   811  0F8D                     	;# 
   812  0F91                     	;# 
   813  0F95                     	;# 
   814  0F96                     	;# 
   815  0F97                     	;# 
   816  0F9C                     	;# 
   817  0F9D                     	;# 
   818  0F9E                     	;# 
   819  0FE3                     	;# 
   820  0FE4                     	;# 
   821  0FE5                     	;# 
   822  0FE6                     	;# 
   823  0FE7                     	;# 
   824  0FE8                     	;# 
   825  0FE9                     	;# 
   826  0FEA                     	;# 
   827  0FEB                     	;# 
   828  0FED                     	;# 
   829  0FEE                     	;# 
   830  0FEF                     	;# 
   831                           
   832 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   833  0000                     
   834 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   835  0000                     
   836 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   837  0000                     
   838                           	psect	idataBANK1
   839  0E2E                     __pidataBANK1:
   840                           
   841                           ;initializer for _steps
   842  0E2E  3405               	retlw	5
   843  0E2F  3402               	retlw	2
   844  0E30  3401               	retlw	1
   845                           
   846                           	psect	nvBANK1
   847  00E2                     __pnvBANK1:
   848  00E2                     _EUSART_ErrorHandler:
   849  00E2                     	ds	2
   850  00E4                     _EUSART_OverrunErrorHandler:
   851  00E4                     	ds	2
   852  00E6                     _EUSART_FramingErrorHandler:
   853  00E6                     	ds	2
   854  0011                     _PIR1bits	set	17
   855  0095                     _OPTION_REGbits	set	149
   856  008E                     _TRISC	set	142
   857  008D                     _TRISB	set	141
   858  008C                     _TRISA	set	140
   859  0097                     _WDTCON	set	151
   860  0099                     _OSCCON	set	153
   861  011D                     _APFCON	set	285
   862  010E                     _LATC	set	270
   863  010D                     _LATB	set	269
   864  010C                     _LATA	set	268
   865  0116                     _BORCON	set	278
   866  019A                     _TXREG	set	410
   867  0199                     _RCREG	set	409
   868  019D                     _RCSTAbits	set	413
   869  019E                     _TXSTAbits	set	414
   870  019C                     _SPBRGH	set	412
   871  019B                     _SPBRGL	set	411
   872  019E                     _TXSTA	set	414
   873  019D                     _RCSTA	set	413
   874  019F                     _BAUDCON	set	415
   875  018C                     _ANSELA	set	396
   876  018D                     _ANSELB	set	397
   877  018E                     _ANSELC	set	398
   878  020C                     _WPUA	set	524
   879  020D                     _WPUB	set	525
   880                           
   881                           	psect	stringtext1
   882  1000                     __pstringtext1:
   883  1000                     STR_5:
   884  1000  344D               	retlw	77	;'M'
   885  1001  3443               	retlw	67	;'C'
   886  1002  3455               	retlw	85	;'U'
   887  1003  3420               	retlw	32	;' '
   888  1004  3469               	retlw	105	;'i'
   889  1005  3473               	retlw	115	;'s'
   890  1006  3420               	retlw	32	;' '
   891  1007  3463               	retlw	99	;'c'
   892  1008  346F               	retlw	111	;'o'
   893  1009  346E               	retlw	110	;'n'
   894  100A  3466               	retlw	102	;'f'
   895  100B  3475               	retlw	117	;'u'
   896  100C  3473               	retlw	115	;'s'
   897  100D  3469               	retlw	105	;'i'
   898  100E  346E               	retlw	110	;'n'
   899  100F  3467               	retlw	103	;'g'
   900  1010  342E               	retlw	46	;'.'
   901  1011  3420               	retlw	32	;' '
   902  1012  3449               	retlw	73	;'I'
   903  1013  346E               	retlw	110	;'n'
   904  1014  3476               	retlw	118	;'v'
   905  1015  3461               	retlw	97	;'a'
   906  1016  346C               	retlw	108	;'l'
   907  1017  3469               	retlw	105	;'i'
   908  1018  3464               	retlw	100	;'d'
   909  1019  3420               	retlw	32	;' '
   910  101A  3467               	retlw	103	;'g'
   911  101B  3461               	retlw	97	;'a'
   912  101C  346D               	retlw	109	;'m'
   913  101D  3465               	retlw	101	;'e'
   914  101E  3421               	retlw	33	;'!'
   915  101F  3400               	retlw	0
   916                           
   917                           	psect	stringtext2
   918  1020                     __pstringtext2:
   919  1020                     STR_8:
   920  1020  342E               	retlw	46	;'.'
   921  1021  3420               	retlw	32	;' '
   922  1022  344C               	retlw	76	;'L'
   923  1023  3465               	retlw	101	;'e'
   924  1024  3474               	retlw	116	;'t'
   925  1025  3427               	retlw	39	;'''
   926  1026  3473               	retlw	115	;'s'
   927  1027  3420               	retlw	32	;' '
   928  1028  3467               	retlw	103	;'g'
   929  1029  3475               	retlw	117	;'u'
   930  102A  3465               	retlw	101	;'e'
   931  102B  3473               	retlw	115	;'s'
   932  102C  3473               	retlw	115	;'s'
   933  102D  3420               	retlw	32	;' '
   934  102E  3479               	retlw	121	;'y'
   935  102F  346F               	retlw	111	;'o'
   936  1030  3475               	retlw	117	;'u'
   937  1031  3472               	retlw	114	;'r'
   938  1032  3420               	retlw	32	;' '
   939  1033  3461               	retlw	97	;'a'
   940  1034  3467               	retlw	103	;'g'
   941  1035  3465               	retlw	101	;'e'
   942  1036  340D               	retlw	13
   943  1037  3400               	retlw	0
   944                           
   945                           	psect	stringtext3
   946  1038                     __pstringtext3:
   947  1038                     STR_3:
   948  1038  3459               	retlw	89	;'Y'
   949  1039  3461               	retlw	97	;'a'
   950  103A  3479               	retlw	121	;'y'
   951  103B  342C               	retlw	44	;','
   952  103C  3420               	retlw	32	;' '
   953  103D  3449               	retlw	73	;'I'
   954  103E  3427               	retlw	39	;'''
   955  103F  346D               	retlw	109	;'m'
   956  1040  3420               	retlw	32	;' '
   957  1041  3467               	retlw	103	;'g'
   958  1042  346F               	retlw	111	;'o'
   959  1043  346F               	retlw	111	;'o'
   960  1044  3464               	retlw	100	;'d'
   961  1045  3420               	retlw	32	;' '
   962  1046  3472               	retlw	114	;'r'
   963  1047  3469               	retlw	105	;'i'
   964  1048  3467               	retlw	103	;'g'
   965  1049  3468               	retlw	104	;'h'
   966  104A  3474               	retlw	116	;'t'
   967  104B  343F               	retlw	63	;'?'
   968  104C  3400               	retlw	0
   969                           
   970                           	psect	stringtext4
   971  104D                     __pstringtext4:
   972  104D                     STR_11:
   973  104D  3449               	retlw	73	;'I'
   974  104E  3420               	retlw	32	;' '
   975  104F  3467               	retlw	103	;'g'
   976  1050  3475               	retlw	117	;'u'
   977  1051  3465               	retlw	101	;'e'
   978  1052  3473               	retlw	115	;'s'
   979  1053  3473               	retlw	115	;'s'
   980  1054  3420               	retlw	32	;' '
   981  1055  3400               	retlw	0
   982                           
   983                           	psect	stringtext5
   984  1056                     __pstringtext5:
   985  1056                     STR_1:
   986  1056  340D               	retlw	13
   987  1057  3455               	retlw	85	;'U'
   988  1058  3473               	retlw	115	;'s'
   989  1059  3465               	retlw	101	;'e'
   990  105A  3472               	retlw	114	;'r'
   991  105B  343A               	retlw	58	;':'
   992  105C  3420               	retlw	32	;' '
   993  105D  3400               	retlw	0
   994                           
   995                           	psect	stringtext6
   996  105E                     __pstringtext6:
   997  105E                     STR_7:
   998  105E  3457               	retlw	87	;'W'
   999  105F  3465               	retlw	101	;'e'
  1000  1060  346C               	retlw	108	;'l'
  1001  1061  3463               	retlw	99	;'c'
  1002  1062  346F               	retlw	111	;'o'
  1003  1063  346D               	retlw	109	;'m'
  1004  1064  3465               	retlw	101	;'e'
  1005  1065  3400               	retlw	0
  1006                           
  1007                           	psect	stringtext7
  1008  1066                     __pstringtext7:
  1009  1066                     STR_2:
  1010  1066  340D               	retlw	13
  1011  1067  344D               	retlw	77	;'M'
  1012  1068  3443               	retlw	67	;'C'
  1013  1069  3455               	retlw	85	;'U'
  1014  106A  343A               	retlw	58	;':'
  1015  106B  3420               	retlw	32	;' '
  1016  106C  3400               	retlw	0
  1017                           
  1018                           	psect	stringtext8
  1019  106D                     __pstringtext8:
  1020  106D                     STR_9:
  1021  106D  3425               	retlw	37	;'%'
  1022  106E  3464               	retlw	100	;'d'
  1023  106F  340D               	retlw	13
  1024  1070  3400               	retlw	0
  1025                           
  1026                           	psect	stringtext9
  1027  0000                     __pstringtext9:
  1028  106D                     
  1029                           	psect	cinit
  1030  07E3                     start_initialization:	
  1031                           ; #config settings
  1032                           
  1033  07E3                     __initialization:
  1034                           
  1035                           ; Initialize objects allocated to BANK1
  1036  07E3  0021               	movlb	1	; select bank1
  1037  07E4  318E  262E  3187   	fcall	__pidataBANK1	;fetch initializer
  1038  07E7  00E8               	movwf	__pdataBANK1& (0+127)
  1039  07E8  318E  262F  3187   	fcall	__pidataBANK1+1	;fetch initializer
  1040  07EB  00E9               	movwf	(__pdataBANK1+1)& (0+127)
  1041  07EC  318E  2630  3187   	fcall	__pidataBANK1+2	;fetch initializer
  1042  07EF  00EA               	movwf	(__pdataBANK1+2)& (0+127)
  1043                           
  1044                           ; Clear objects allocated to BANK0
  1045  07F0  0020               	movlb	0	; select bank0
  1046  07F1  01EC               	clrf	__pbssBANK0& (0+127)
  1047  07F2  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  1048  07F3  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  1049  07F4  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  1050                           
  1051                           ; Clear objects allocated to BANK1
  1052  07F5  30A0               	movlw	low __pbssBANK1
  1053  07F6  0084               	movwf	4
  1054  07F7  3000               	movlw	high __pbssBANK1
  1055  07F8  0085               	movwf	5
  1056  07F9  3025               	movlw	37
  1057  07FA  318E  2652  3187   	fcall	clear_ram0
  1058  07FD                     end_of_initialization:	
  1059                           ;End of C runtime variable initialization code
  1060                           
  1061  07FD                     __end_of__initialization:
  1062  07FD  0020               	movlb	0
  1063  07FE  3184  2CC0         	ljmp	_main	;jump to C main() function
  1064                           
  1065                           	psect	bssBANK0
  1066  006C                     __pbssBANK0:
  1067  006C                     _prec:
  1068  006C                     	ds	2
  1069  006E                     _flags:
  1070  006E                     	ds	2
  1071                           
  1072                           	psect	bssBANK1
  1073  00A0                     __pbssBANK1:
  1074  00A0                     _nout:
  1075  00A0                     	ds	2
  1076  00A2                     _width:
  1077  00A2                     	ds	2
  1078  00A4                     _eusartRxLastError:
  1079  00A4                     	ds	1
  1080  00A5                     _dbuf:
  1081  00A5                     	ds	32
  1082                           
  1083                           	psect	dataBANK1
  1084  00E8                     __pdataBANK1:
  1085  00E8                     _steps:
  1086  00E8                     	ds	3
  1087                           
  1088                           	psect	clrtext
  1089  0E52                     clear_ram0:	
  1090                           ;	Called with FSR0 containing the base address, and
  1091                           ;	WREG with the size to clear
  1092                           
  1093  0E52  0064               	clrwdt	;clear the watchdog before getting into this loop
  1094  0E53                     clrloop0:
  1095  0E53  0180               	clrf	0	;clear RAM location pointed to by FSR
  1096  0E54  3101               	addfsr 0,1
  1097  0E55  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1098  0E56  2E53               	goto	clrloop0	;have we reached the end yet?
  1099  0E57  3400               	retlw	0	;all done for this memory range, return
  1100                           
  1101                           	psect	cstackBANK1
  1102  00C5                     __pcstackBANK1:
  1103  00C5                     sprintf@ap:
  1104                           
  1105                           ; 1 bytes @ 0x0
  1106  00C5                     	ds	1
  1107  00C6                     sprintf@s:
  1108                           
  1109                           ; 1 bytes @ 0x1
  1110  00C6                     	ds	1
  1111  00C7                     sprintf@f:
  1112                           
  1113                           ; 10 bytes @ 0x2
  1114  00C7                     	ds	10
  1115  00D1                     main@age_str:
  1116                           
  1117                           ; 10 bytes @ 0xC
  1118  00D1                     	ds	10
  1119  00DB                     main@age_track:
  1120                           
  1121                           ; 2 bytes @ 0x16
  1122  00DB                     	ds	2
  1123  00DD                     main@i:
  1124                           
  1125                           ; 1 bytes @ 0x18
  1126  00DD                     	ds	1
  1127  00DE                     main@state:
  1128                           
  1129                           ; 1 bytes @ 0x19
  1130  00DE                     	ds	1
  1131  00DF                     main@user_input:
  1132                           
  1133                           ; 1 bytes @ 0x1A
  1134  00DF                     	ds	1
  1135  00E0                     main@init_age:
  1136                           
  1137                           ; 2 bytes @ 0x1B
  1138  00E0                     	ds	2
  1139                           
  1140                           	psect	cstackCOMMON
  1141  0070                     __pcstackCOMMON:
  1142  0070                     ?_PIN_MANAGER_Initialize:
  1143  0070                     ??_PIN_MANAGER_Initialize:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_OSCILLATOR_Initialize:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ??_OSCILLATOR_Initialize:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_WDT_Initialize:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ??_WDT_Initialize:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_EUSART_Initialize:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_EUSART_SetFramingErrorHandler:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_EUSART_SetErrorHandler:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_putch:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ??_putch:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_SYSTEM_Initialize:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_EUSART_is_tx_ready:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ??_EUSART_is_tx_ready:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_EUSART_is_rx_ready:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ??_EUSART_is_rx_ready:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_EUSART_Read:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ??_EUSART_Read:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_EUSART_Write:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ??_EUSART_Write:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_user_wait:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_correct_guess:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_confuse_guess:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_main:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ??___aodiv:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ??___aomod:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_fputc:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_strlen:	
  1225                           ; 2 bytes @ 0x0
  1226                           
  1227  0070                     _EUSART_is_tx_ready$241:	
  1228                           ; 2 bytes @ 0x0
  1229                           
  1230  0070                     EUSART_Write@txData:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     putch@c:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1240                           ; 2 bytes @ 0x0
  1241                           
  1242  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1243                           ; 2 bytes @ 0x0
  1244                           
  1245  0070                     fputc@c:	
  1246                           ; 2 bytes @ 0x0
  1247                           
  1248                           
  1249                           ; 2 bytes @ 0x0
  1250  0070                     	ds	1
  1251  0071                     ?_EUSART_Write_Text:
  1252  0071                     ___aodiv@counter:	
  1253                           ; 1 bytes @ 0x1
  1254                           
  1255  0071                     ___aomod@counter:	
  1256                           ; 1 bytes @ 0x1
  1257                           
  1258  0071                     EUSART_Write_Text@textData:	
  1259                           ; 1 bytes @ 0x1
  1260                           
  1261                           
  1262                           ; 2 bytes @ 0x1
  1263  0071                     	ds	1
  1264  0072                     ??_EUSART_Initialize:
  1265  0072                     ??_EUSART_SetFramingErrorHandler:	
  1266                           ; 1 bytes @ 0x2
  1267                           
  1268  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1269                           ; 1 bytes @ 0x2
  1270                           
  1271  0072                     ??_EUSART_SetErrorHandler:	
  1272                           ; 1 bytes @ 0x2
  1273                           
  1274  0072                     ??_strlen:	
  1275                           ; 1 bytes @ 0x2
  1276                           
  1277  0072                     ??_SYSTEM_Initialize:	
  1278                           ; 1 bytes @ 0x2
  1279                           
  1280  0072                     ___aodiv@sign:	
  1281                           ; 1 bytes @ 0x2
  1282                           
  1283  0072                     ___aomod@sign:	
  1284                           ; 1 bytes @ 0x2
  1285                           
  1286  0072                     fputc@fp:	
  1287                           ; 1 bytes @ 0x2
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0x2
  1291  0072                     	ds	1
  1292  0073                     ??_fputc:
  1293  0073                     ??_EUSART_Write_Text:	
  1294                           ; 1 bytes @ 0x3
  1295                           
  1296  0073                     ?_abs:	
  1297                           ; 1 bytes @ 0x3
  1298                           
  1299  0073                     strlen@a:	
  1300                           ; 2 bytes @ 0x3
  1301                           
  1302  0073                     abs@a:	
  1303                           ; 1 bytes @ 0x3
  1304                           
  1305  0073                     ___aodiv@quotient:	
  1306                           ; 2 bytes @ 0x3
  1307                           
  1308                           
  1309                           ; 8 bytes @ 0x3
  1310  0073                     	ds	1
  1311  0074                     strlen@s:
  1312  0074                     EUSART_Write_Text@i:	
  1313                           ; 1 bytes @ 0x4
  1314                           
  1315                           
  1316                           ; 2 bytes @ 0x4
  1317  0074                     	ds	1
  1318  0075                     ??_abs:
  1319                           
  1320                           ; 1 bytes @ 0x5
  1321  0075                     	ds	1
  1322  0076                     EUSART_Write_Text@endTrig:
  1323                           
  1324                           ; 1 bytes @ 0x6
  1325  0076                     	ds	1
  1326  0077                     ??_user_wait:
  1327  0077                     ??_correct_guess:	
  1328                           ; 1 bytes @ 0x7
  1329                           
  1330  0077                     ??_confuse_guess:	
  1331                           ; 1 bytes @ 0x7
  1332                           
  1333  0077                     correct_guess@user_res:	
  1334                           ; 1 bytes @ 0x7
  1335                           
  1336                           
  1337                           ; 1 bytes @ 0x7
  1338  0077                     	ds	1
  1339  0078                     ?_fputs:
  1340  0078                     user_wait@user_res:	
  1341                           ; 2 bytes @ 0x8
  1342                           
  1343  0078                     fputs@fp:	
  1344                           ; 1 bytes @ 0x8
  1345                           
  1346                           
  1347                           ; 1 bytes @ 0x8
  1348  0078                     	ds	1
  1349  0079                     ??_fputs:
  1350                           
  1351                           ; 1 bytes @ 0x9
  1352  0079                     	ds	3
  1353  007C                     ??_pad:
  1354                           
  1355                           ; 1 bytes @ 0xC
  1356  007C                     	ds	1
  1357  007D                     ??_sprintf:
  1358                           
  1359                           ; 1 bytes @ 0xD
  1360  007D                     	ds	1
  1361                           
  1362                           	psect	cstackBANK0
  1363  0020                     __pcstackBANK0:
  1364  0020                     ?___aodiv:
  1365  0020                     ?___aomod:	
  1366                           ; 8 bytes @ 0x0
  1367                           
  1368  0020                     fputs@c:	
  1369                           ; 8 bytes @ 0x0
  1370                           
  1371  0020                     ___aodiv@divisor:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0020                     ___aomod@divisor:	
  1375                           ; 8 bytes @ 0x0
  1376                           
  1377                           
  1378                           ; 8 bytes @ 0x0
  1379  0020                     	ds	1
  1380  0021                     fputs@i:
  1381                           
  1382                           ; 2 bytes @ 0x1
  1383  0021                     	ds	2
  1384  0023                     fputs@s:
  1385                           
  1386                           ; 1 bytes @ 0x3
  1387  0023                     	ds	1
  1388  0024                     ?_pad:
  1389  0024                     pad@buf:	
  1390                           ; 2 bytes @ 0x4
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x4
  1394  0024                     	ds	1
  1395  0025                     pad@p:
  1396                           
  1397                           ; 2 bytes @ 0x5
  1398  0025                     	ds	2
  1399  0027                     pad@i:
  1400                           
  1401                           ; 2 bytes @ 0x7
  1402  0027                     	ds	1
  1403  0028                     ___aodiv@dividend:
  1404  0028                     ___aomod@dividend:	
  1405                           ; 8 bytes @ 0x8
  1406                           
  1407                           
  1408                           ; 8 bytes @ 0x8
  1409  0028                     	ds	1
  1410  0029                     pad@w:
  1411                           
  1412                           ; 2 bytes @ 0x9
  1413  0029                     	ds	2
  1414  002B                     pad@fp:
  1415                           
  1416                           ; 1 bytes @ 0xB
  1417  002B                     	ds	5
  1418  0030                     ?_dtoa:
  1419  0030                     dtoa@d:	
  1420                           ; 2 bytes @ 0x10
  1421                           
  1422                           
  1423                           ; 8 bytes @ 0x10
  1424  0030                     	ds	8
  1425  0038                     ??_dtoa:
  1426                           
  1427                           ; 1 bytes @ 0x18
  1428  0038                     	ds	3
  1429  003B                     _dtoa$729:
  1430                           
  1431                           ; 2 bytes @ 0x1B
  1432  003B                     	ds	2
  1433  003D                     dtoa@fp:
  1434                           
  1435                           ; 1 bytes @ 0x1D
  1436  003D                     	ds	1
  1437  003E                     dtoa@p:
  1438                           
  1439                           ; 2 bytes @ 0x1E
  1440  003E                     	ds	2
  1441  0040                     dtoa@w:
  1442                           
  1443                           ; 2 bytes @ 0x20
  1444  0040                     	ds	2
  1445  0042                     dtoa@s:
  1446                           
  1447                           ; 2 bytes @ 0x22
  1448  0042                     	ds	2
  1449  0044                     dtoa@n:
  1450                           
  1451                           ; 8 bytes @ 0x24
  1452  0044                     	ds	8
  1453  004C                     dtoa@i:
  1454                           
  1455                           ; 2 bytes @ 0x2C
  1456  004C                     	ds	2
  1457  004E                     ?_vfpfcnvrt:
  1458  004E                     vfpfcnvrt@fmt:	
  1459                           ; 2 bytes @ 0x2E
  1460                           
  1461                           
  1462                           ; 1 bytes @ 0x2E
  1463  004E                     	ds	1
  1464  004F                     vfpfcnvrt@ap:
  1465                           
  1466                           ; 1 bytes @ 0x2F
  1467  004F                     	ds	1
  1468  0050                     ??_vfpfcnvrt:
  1469                           
  1470                           ; 1 bytes @ 0x30
  1471  0050                     	ds	5
  1472  0055                     vfpfcnvrt@ll:
  1473                           
  1474                           ; 8 bytes @ 0x35
  1475  0055                     	ds	8
  1476  005D                     vfpfcnvrt@fp:
  1477                           
  1478                           ; 1 bytes @ 0x3D
  1479  005D                     	ds	1
  1480  005E                     ?_vfprintf:
  1481  005E                     vfprintf@fmt:	
  1482                           ; 2 bytes @ 0x3E
  1483                           
  1484                           
  1485                           ; 2 bytes @ 0x3E
  1486  005E                     	ds	2
  1487  0060                     vfprintf@ap:
  1488                           
  1489                           ; 1 bytes @ 0x40
  1490  0060                     	ds	1
  1491  0061                     ??_vfprintf:
  1492                           
  1493                           ; 1 bytes @ 0x41
  1494  0061                     	ds	2
  1495  0063                     vfprintf@fp:
  1496                           
  1497                           ; 1 bytes @ 0x43
  1498  0063                     	ds	1
  1499  0064                     vfprintf@cfmt:
  1500                           
  1501                           ; 2 bytes @ 0x44
  1502  0064                     	ds	2
  1503  0066                     ?_sprintf:
  1504  0066                     sprintf@fmt:	
  1505                           ; 2 bytes @ 0x46
  1506                           
  1507                           
  1508                           ; 2 bytes @ 0x46
  1509  0066                     	ds	4
  1510  006A                     ??_main:
  1511                           
  1512                           ; 1 bytes @ 0x4A
  1513  006A                     	ds	2
  1514                           
  1515                           	psect	maintext
  1516  04C0                     __pmaintext:	
  1517 ;;
  1518 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1519 ;;
  1520 ;; *************** function _main *****************
  1521 ;; Defined at:
  1522 ;;		line 142 in file "main.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  age_str        10   12[BANK1 ] unsigned char [10]
  1527 ;;  init_age        2   27[BANK1 ] int 
  1528 ;;  age_track       2   22[BANK1 ] int 
  1529 ;;  user_input      1   26[BANK1 ] unsigned char 
  1530 ;;  state           1   25[BANK1 ] unsigned char 
  1531 ;;  i               1   24[BANK1 ] unsigned char 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : B1F/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1541 ;;      Params:         0       0       0       0       0       0       0       0
  1542 ;;      Locals:         0       0      17       0       0       0       0       0
  1543 ;;      Temps:          0       2       0       0       0       0       0       0
  1544 ;;      Totals:         0       2      17       0       0       0       0       0
  1545 ;;Total ram usage:       19 bytes
  1546 ;; Hardware stack levels required when called: 8
  1547 ;; This function calls:
  1548 ;;		_EUSART_Write_Text
  1549 ;;		_SYSTEM_Initialize
  1550 ;;		_confuse_guess
  1551 ;;		_correct_guess
  1552 ;;		_sprintf
  1553 ;;		_user_wait
  1554 ;; This function is called by:
  1555 ;;		Startup code after reset
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559  04C0                     _main:	
  1560                           ;psect for function _main
  1561                           
  1562  04C0                     l1832:	
  1563                           ;incstack = 0
  1564                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1565                           
  1566                           
  1567                           ;main.c: 145:     SYSTEM_Initialize();
  1568  04C0  318E  2658  3184   	fcall	_SYSTEM_Initialize
  1569  04C3                     l1834:
  1570  04C3                     l1836:
  1571                           
  1572                           ;main.c: 148:     int age_track = 0;
  1573  04C3  0021               	movlb	1	; select bank1
  1574  04C4  01DB               	clrf	main@age_track^(0+128)
  1575  04C5  01DC               	clrf	(main@age_track+1)^(0+128)
  1576  04C6                     l1838:
  1577                           
  1578                           ;main.c: 149:     char age_str[10];;main.c: 151:     unsigned char state = 0;
  1579  04C6  01DE               	clrf	main@state^(0+128)
  1580  04C7                     l1840:
  1581                           
  1582                           ;main.c: 152:     unsigned char user_input = 0;
  1583  04C7  01DF               	clrf	main@user_input^(0+128)
  1584  04C8                     l1842:
  1585                           
  1586                           ;main.c: 153:     unsigned char i = 0;
  1587  04C8  01DD               	clrf	main@i^(0+128)
  1588  04C9                     l1844:
  1589                           
  1590                           ;main.c: 171:     EUSART_Write_Text("\rMCU: ");
  1591  04C9  3066               	movlw	low (STR_2| (0+32768))
  1592  04CA  00F1               	movwf	EUSART_Write_Text@textData
  1593  04CB  3090               	movlw	high (STR_2| (0+32768))
  1594  04CC  00F2               	movwf	EUSART_Write_Text@textData+1
  1595  04CD  3180  200F  3184   	fcall	_EUSART_Write_Text
  1596  04D0                     l1846:
  1597                           
  1598                           ;main.c: 172:     EUSART_Write_Text("Welcome");
  1599  04D0  305E               	movlw	low (STR_7| (0+32768))
  1600  04D1  00F1               	movwf	EUSART_Write_Text@textData
  1601  04D2  3090               	movlw	high (STR_7| (0+32768))
  1602  04D3  00F2               	movwf	EUSART_Write_Text@textData+1
  1603  04D4  3180  200F  3184   	fcall	_EUSART_Write_Text
  1604  04D7                     l1848:
  1605                           
  1606                           ;main.c: 173:     EUSART_Write_Text(". Let's guess your age\r");
  1607  04D7  3020               	movlw	low (STR_8| (0+32768))
  1608  04D8  00F1               	movwf	EUSART_Write_Text@textData
  1609  04D9  3090               	movlw	high (STR_8| (0+32768))
  1610  04DA  00F2               	movwf	EUSART_Write_Text@textData+1
  1611  04DB  3180  200F  3184   	fcall	_EUSART_Write_Text
  1612  04DE                     l1850:
  1613                           
  1614                           ;main.c: 176:     init_age = 52;
  1615  04DE  3034               	movlw	52
  1616  04DF  0021               	movlb	1	; select bank1
  1617  04E0  00E0               	movwf	main@init_age^(0+128)
  1618  04E1  3000               	movlw	0
  1619  04E2  00E1               	movwf	(main@init_age^(0+128)+1)
  1620  04E3                     l1852:
  1621                           
  1622                           ;main.c: 177:     sprintf(age_str, "%d\r", init_age);
  1623  04E3  306D               	movlw	low (STR_9| (0+32768))
  1624  04E4  0020               	movlb	0	; select bank0
  1625  04E5  00E6               	movwf	sprintf@fmt
  1626  04E6  3090               	movlw	high (STR_9| (0+32768))
  1627  04E7  00E7               	movwf	sprintf@fmt+1
  1628  04E8  3034               	movlw	52
  1629  04E9  00E8               	movwf	?_sprintf+2
  1630  04EA  3000               	movlw	0
  1631  04EB  00E9               	movwf	?_sprintf+3
  1632  04EC  30D1               	movlw	(low (main@age_str| 0))& (0+255)
  1633  04ED  318F  2731  3184   	fcall	_sprintf
  1634  04F0                     l1854:
  1635                           
  1636                           ;main.c: 180:     EUSART_Write_Text("\rMCU: ");
  1637  04F0  3066               	movlw	low (STR_2| (0+32768))
  1638  04F1  00F1               	movwf	EUSART_Write_Text@textData
  1639  04F2  3090               	movlw	high (STR_2| (0+32768))
  1640  04F3  00F2               	movwf	EUSART_Write_Text@textData+1
  1641  04F4  3180  200F  3184   	fcall	_EUSART_Write_Text
  1642  04F7                     l1856:
  1643                           
  1644                           ;main.c: 181:     EUSART_Write_Text("I guess ");
  1645  04F7  304D               	movlw	low (STR_11| (0+32768))
  1646  04F8  00F1               	movwf	EUSART_Write_Text@textData
  1647  04F9  3090               	movlw	high (STR_11| (0+32768))
  1648  04FA  00F2               	movwf	EUSART_Write_Text@textData+1
  1649  04FB  3180  200F  3184   	fcall	_EUSART_Write_Text
  1650  04FE                     l1858:
  1651                           
  1652                           ;main.c: 182:     EUSART_Write_Text(age_str);
  1653  04FE  30D1               	movlw	low main@age_str
  1654  04FF  00F1               	movwf	EUSART_Write_Text@textData
  1655  0500  3000               	movlw	high main@age_str
  1656  0501  00F2               	movwf	EUSART_Write_Text@textData+1
  1657  0502  3180  200F  3184   	fcall	_EUSART_Write_Text
  1658  0505                     l1860:
  1659                           
  1660                           ;main.c: 188:         if(state==0){
  1661  0505  0021               	movlb	1	; select bank1
  1662  0506  085E               	movf	main@state^(0+128),w
  1663  0507  1D03               	btfss	3,2
  1664  0508  2D0A               	goto	u1591
  1665  0509  2D0B               	goto	u1590
  1666  050A                     u1591:
  1667  050A  2D15               	goto	l1866
  1668  050B                     u1590:
  1669  050B                     l1862:
  1670                           
  1671                           ;main.c: 191:             user_input = user_wait();
  1672  050B  318E  26AB  3184   	fcall	_user_wait
  1673  050E  0020               	movlb	0	; select bank0
  1674  050F  00EA               	movwf	??_main
  1675  0510  086A               	movf	??_main,w
  1676  0511  0021               	movlb	1	; select bank1
  1677  0512  00DF               	movwf	main@user_input^(0+128)
  1678  0513                     l1864:
  1679                           
  1680                           ;main.c: 194:             state = 1;
  1681  0513  01DE               	clrf	main@state^(0+128)
  1682  0514  0ADE               	incf	main@state^(0+128),f
  1683  0515                     l1866:
  1684                           
  1685                           ;main.c: 200:         if(state==1){
  1686  0515  035E               	decf	main@state^(0+128),w
  1687  0516  1D03               	btfss	3,2
  1688  0517  2D19               	goto	u1601
  1689  0518  2D1A               	goto	u1600
  1690  0519                     u1601:
  1691  0519  2DC5               	goto	l1914
  1692  051A                     u1600:
  1693  051A                     l1868:
  1694                           
  1695                           ;main.c: 203:             correct_guess(user_input);
  1696  051A  085F               	movf	main@user_input^(0+128),w
  1697  051B  318E  2694  3184   	fcall	_correct_guess
  1698                           
  1699                           ;main.c: 206:             while((user_input == '2') && (state==1)){
  1700  051E  2D66               	goto	l1888
  1701  051F                     l1870:
  1702                           
  1703                           ;main.c: 209:                 init_age -= 10;
  1704  051F  30F6               	movlw	246
  1705  0520  07E0               	addwf	main@init_age^(0+128),f
  1706  0521  30FF               	movlw	255
  1707  0522  3DE1               	addwfc	(main@init_age+1)^(0+128),f
  1708  0523                     l1872:
  1709                           
  1710                           ;main.c: 210:                 sprintf(age_str, "%d\r", init_age);
  1711  0523  306D               	movlw	low (STR_9| (0+32768))
  1712  0524  0020               	movlb	0	; select bank0
  1713  0525  00E6               	movwf	sprintf@fmt
  1714  0526  3090               	movlw	high (STR_9| (0+32768))
  1715  0527  00E7               	movwf	sprintf@fmt+1
  1716  0528  0021               	movlb	1	; select bank1
  1717  0529  0861               	movf	(main@init_age+1)^(0+128),w
  1718  052A  0020               	movlb	0	; select bank0
  1719  052B  00E9               	movwf	?_sprintf+3
  1720  052C  0021               	movlb	1	; select bank1
  1721  052D  0860               	movf	main@init_age^(0+128),w
  1722  052E  0020               	movlb	0	; select bank0
  1723  052F  00E8               	movwf	?_sprintf+2
  1724  0530  30D1               	movlw	(low (main@age_str| 0))& (0+255)
  1725  0531  318F  2731  3184   	fcall	_sprintf
  1726  0534                     l1874:
  1727                           
  1728                           ;main.c: 213:                 EUSART_Write_Text("\rMCU: ");
  1729  0534  3066               	movlw	low (STR_2| (0+32768))
  1730  0535  00F1               	movwf	EUSART_Write_Text@textData
  1731  0536  3090               	movlw	high (STR_2| (0+32768))
  1732  0537  00F2               	movwf	EUSART_Write_Text@textData+1
  1733  0538  3180  200F  3184   	fcall	_EUSART_Write_Text
  1734  053B                     l1876:
  1735                           
  1736                           ;main.c: 214:                 EUSART_Write_Text("I guess ");
  1737  053B  304D               	movlw	low (STR_11| (0+32768))
  1738  053C  00F1               	movwf	EUSART_Write_Text@textData
  1739  053D  3090               	movlw	high (STR_11| (0+32768))
  1740  053E  00F2               	movwf	EUSART_Write_Text@textData+1
  1741  053F  3180  200F  3184   	fcall	_EUSART_Write_Text
  1742  0542                     l1878:
  1743                           
  1744                           ;main.c: 215:                 EUSART_Write_Text(age_str);
  1745  0542  30D1               	movlw	low main@age_str
  1746  0543  00F1               	movwf	EUSART_Write_Text@textData
  1747  0544  3000               	movlw	high main@age_str
  1748  0545  00F2               	movwf	EUSART_Write_Text@textData+1
  1749  0546  3180  200F  3184   	fcall	_EUSART_Write_Text
  1750  0549                     l1880:
  1751                           
  1752                           ;main.c: 218:                 user_input = user_wait();
  1753  0549  318E  26AB  3184   	fcall	_user_wait
  1754  054C  0020               	movlb	0	; select bank0
  1755  054D  00EA               	movwf	??_main
  1756  054E  086A               	movf	??_main,w
  1757  054F  0021               	movlb	1	; select bank1
  1758  0550  00DF               	movwf	main@user_input^(0+128)
  1759  0551                     l1882:
  1760                           
  1761                           ;main.c: 221:                 correct_guess(user_input);
  1762  0551  085F               	movf	main@user_input^(0+128),w
  1763  0552  318E  2694  3184   	fcall	_correct_guess
  1764  0555                     l1884:
  1765                           
  1766                           ;main.c: 224:                 if(user_input == '3'){
  1767  0555  3033               	movlw	51
  1768  0556  0021               	movlb	1	; select bank1
  1769  0557  065F               	xorwf	main@user_input^(0+128),w
  1770  0558  1D03               	btfss	3,2
  1771  0559  2D5B               	goto	u1611
  1772  055A  2D5C               	goto	u1610
  1773  055B                     u1611:
  1774  055B  2D66               	goto	l1888
  1775  055C                     u1610:
  1776  055C                     l1886:
  1777                           
  1778                           ;main.c: 227:                     age_track = init_age;
  1779  055C  0861               	movf	(main@init_age+1)^(0+128),w
  1780  055D  00DC               	movwf	(main@age_track+1)^(0+128)
  1781  055E  0860               	movf	main@init_age^(0+128),w
  1782  055F  00DB               	movwf	main@age_track^(0+128)
  1783                           
  1784                           ;main.c: 228:                     state = 2;
  1785  0560  3002               	movlw	2
  1786  0561  0020               	movlb	0	; select bank0
  1787  0562  00EA               	movwf	??_main
  1788  0563  086A               	movf	??_main,w
  1789  0564  0021               	movlb	1	; select bank1
  1790  0565  00DE               	movwf	main@state^(0+128)
  1791  0566                     l1888:
  1792                           
  1793                           ;main.c: 206:             while((user_input == '2') && (state==1)){
  1794  0566  3032               	movlw	50
  1795  0567  0021               	movlb	1	; select bank1
  1796  0568  065F               	xorwf	main@user_input^(0+128),w
  1797  0569  1D03               	btfss	3,2
  1798  056A  2D6C               	goto	u1621
  1799  056B  2D6D               	goto	u1620
  1800  056C                     u1621:
  1801  056C  2DBA               	goto	l1910
  1802  056D                     u1620:
  1803  056D                     l1890:
  1804  056D  035E               	decf	main@state^(0+128),w
  1805  056E  1903               	btfsc	3,2
  1806  056F  2D71               	goto	u1631
  1807  0570  2D72               	goto	u1630
  1808  0571                     u1631:
  1809  0571  2D1F               	goto	l1870
  1810  0572                     u1630:
  1811  0572  2DBA               	goto	l1910
  1812  0573                     l1892:
  1813                           
  1814                           ;main.c: 238:                 init_age += 10;
  1815  0573  300A               	movlw	10
  1816  0574  07E0               	addwf	main@init_age^(0+128),f
  1817  0575  3000               	movlw	0
  1818  0576  3DE1               	addwfc	(main@init_age+1)^(0+128),f
  1819  0577                     l1894:
  1820                           
  1821                           ;main.c: 239:                 sprintf(age_str, "%d\r", init_age);
  1822  0577  306D               	movlw	low (STR_9| (0+32768))
  1823  0578  0020               	movlb	0	; select bank0
  1824  0579  00E6               	movwf	sprintf@fmt
  1825  057A  3090               	movlw	high (STR_9| (0+32768))
  1826  057B  00E7               	movwf	sprintf@fmt+1
  1827  057C  0021               	movlb	1	; select bank1
  1828  057D  0861               	movf	(main@init_age+1)^(0+128),w
  1829  057E  0020               	movlb	0	; select bank0
  1830  057F  00E9               	movwf	?_sprintf+3
  1831  0580  0021               	movlb	1	; select bank1
  1832  0581  0860               	movf	main@init_age^(0+128),w
  1833  0582  0020               	movlb	0	; select bank0
  1834  0583  00E8               	movwf	?_sprintf+2
  1835  0584  30D1               	movlw	(low (main@age_str| 0))& (0+255)
  1836  0585  318F  2731  3184   	fcall	_sprintf
  1837  0588                     l1896:
  1838                           
  1839                           ;main.c: 242:                 EUSART_Write_Text("\rMCU: ");
  1840  0588  3066               	movlw	low (STR_2| (0+32768))
  1841  0589  00F1               	movwf	EUSART_Write_Text@textData
  1842  058A  3090               	movlw	high (STR_2| (0+32768))
  1843  058B  00F2               	movwf	EUSART_Write_Text@textData+1
  1844  058C  3180  200F  3184   	fcall	_EUSART_Write_Text
  1845  058F                     l1898:
  1846                           
  1847                           ;main.c: 243:                 EUSART_Write_Text("I guess ");
  1848  058F  304D               	movlw	low (STR_11| (0+32768))
  1849  0590  00F1               	movwf	EUSART_Write_Text@textData
  1850  0591  3090               	movlw	high (STR_11| (0+32768))
  1851  0592  00F2               	movwf	EUSART_Write_Text@textData+1
  1852  0593  3180  200F  3184   	fcall	_EUSART_Write_Text
  1853  0596                     l1900:
  1854                           
  1855                           ;main.c: 244:                 EUSART_Write_Text(age_str);
  1856  0596  30D1               	movlw	low main@age_str
  1857  0597  00F1               	movwf	EUSART_Write_Text@textData
  1858  0598  3000               	movlw	high main@age_str
  1859  0599  00F2               	movwf	EUSART_Write_Text@textData+1
  1860  059A  3180  200F  3184   	fcall	_EUSART_Write_Text
  1861  059D                     l1902:
  1862                           
  1863                           ;main.c: 247:                 user_input = user_wait();
  1864  059D  318E  26AB  3184   	fcall	_user_wait
  1865  05A0  0020               	movlb	0	; select bank0
  1866  05A1  00EA               	movwf	??_main
  1867  05A2  086A               	movf	??_main,w
  1868  05A3  0021               	movlb	1	; select bank1
  1869  05A4  00DF               	movwf	main@user_input^(0+128)
  1870  05A5                     l1904:
  1871                           
  1872                           ;main.c: 250:                 correct_guess(user_input);
  1873  05A5  085F               	movf	main@user_input^(0+128),w
  1874  05A6  318E  2694  3184   	fcall	_correct_guess
  1875  05A9                     l1906:
  1876                           
  1877                           ;main.c: 253:                 if(user_input == '2'){
  1878  05A9  3032               	movlw	50
  1879  05AA  0021               	movlb	1	; select bank1
  1880  05AB  065F               	xorwf	main@user_input^(0+128),w
  1881  05AC  1D03               	btfss	3,2
  1882  05AD  2DAF               	goto	u1641
  1883  05AE  2DB0               	goto	u1640
  1884  05AF                     u1641:
  1885  05AF  2DBA               	goto	l1910
  1886  05B0                     u1640:
  1887  05B0                     l1908:
  1888                           
  1889                           ;main.c: 256:                     age_track = init_age;
  1890  05B0  0861               	movf	(main@init_age+1)^(0+128),w
  1891  05B1  00DC               	movwf	(main@age_track+1)^(0+128)
  1892  05B2  0860               	movf	main@init_age^(0+128),w
  1893  05B3  00DB               	movwf	main@age_track^(0+128)
  1894                           
  1895                           ;main.c: 257:                     state = 2;
  1896  05B4  3002               	movlw	2
  1897  05B5  0020               	movlb	0	; select bank0
  1898  05B6  00EA               	movwf	??_main
  1899  05B7  086A               	movf	??_main,w
  1900  05B8  0021               	movlb	1	; select bank1
  1901  05B9  00DE               	movwf	main@state^(0+128)
  1902  05BA                     l1910:
  1903                           
  1904                           ;main.c: 235:             while((user_input == '3') && (state==1)){
  1905  05BA  3033               	movlw	51
  1906  05BB  065F               	xorwf	main@user_input^(0+128),w
  1907  05BC  1D03               	btfss	3,2
  1908  05BD  2DBF               	goto	u1651
  1909  05BE  2DC0               	goto	u1650
  1910  05BF                     u1651:
  1911  05BF  2DC5               	goto	l1914
  1912  05C0                     u1650:
  1913  05C0                     l1912:
  1914  05C0  035E               	decf	main@state^(0+128),w
  1915  05C1  1903               	btfsc	3,2
  1916  05C2  2DC4               	goto	u1661
  1917  05C3  2DC5               	goto	u1660
  1918  05C4                     u1661:
  1919  05C4  2D73               	goto	l1892
  1920  05C5                     u1660:
  1921  05C5                     l1914:
  1922                           
  1923                           ;main.c: 267:         if(state == 2){
  1924  05C5  3002               	movlw	2
  1925  05C6  065E               	xorwf	main@state^(0+128),w
  1926  05C7  1D03               	btfss	3,2
  1927  05C8  2DCA               	goto	u1671
  1928  05C9  2DCB               	goto	u1670
  1929  05CA                     u1671:
  1930  05CA  2EFB               	goto	l1986
  1931  05CB                     u1670:
  1932  05CB  2E57               	goto	l1948
  1933  05CC                     l1918:
  1934                           
  1935                           ;main.c: 273:                 init_age += steps[i];
  1936  05CC  085D               	movf	main@i^(0+128),w
  1937  05CD  3EE8               	addlw	(low (_steps| 0))& (0+255)
  1938  05CE  0086               	movwf	6
  1939  05CF  0187               	clrf	7
  1940  05D0  0801               	movf	1,w
  1941  05D1  0020               	movlb	0	; select bank0
  1942  05D2  00EA               	movwf	??_main
  1943  05D3  01EB               	clrf	??_main+1
  1944  05D4  086A               	movf	??_main,w
  1945  05D5  0021               	movlb	1	; select bank1
  1946  05D6  07E0               	addwf	main@init_age^(0+128),f
  1947  05D7  0020               	movlb	0	; select bank0
  1948  05D8  086B               	movf	??_main+1,w
  1949  05D9  0021               	movlb	1	; select bank1
  1950  05DA  3DE1               	addwfc	(main@init_age+1)^(0+128),f
  1951  05DB                     l1920:
  1952                           
  1953                           ;main.c: 276:                 if((init_age == (init_age+10))||(init_age<0)){
  1954  05DB  0860               	movf	main@init_age^(0+128),w
  1955  05DC  3E0A               	addlw	10
  1956  05DD  0020               	movlb	0	; select bank0
  1957  05DE  00EA               	movwf	??_main
  1958  05DF  3000               	movlw	0
  1959  05E0  0021               	movlb	1	; select bank1
  1960  05E1  3D61               	addwfc	(main@init_age+1)^(0+128),w
  1961  05E2  0020               	movlb	0	; select bank0
  1962  05E3  00EB               	movwf	??_main+1
  1963  05E4  0021               	movlb	1	; select bank1
  1964  05E5  0861               	movf	(main@init_age+1)^(0+128),w
  1965  05E6  0020               	movlb	0	; select bank0
  1966  05E7  066B               	xorwf	??_main+1,w
  1967  05E8  1D03               	skipz
  1968  05E9  2DEE               	goto	u1685
  1969  05EA  0021               	movlb	1	; select bank1
  1970  05EB  0860               	movf	main@init_age^(0+128),w
  1971  05EC  0020               	movlb	0	; select bank0
  1972  05ED  066A               	xorwf	??_main,w
  1973  05EE                     u1685:
  1974  05EE  1903               	skipnz
  1975  05EF  2DF1               	goto	u1681
  1976  05F0  2DF2               	goto	u1680
  1977  05F1                     u1681:
  1978  05F1  2DF7               	goto	l1924
  1979  05F2                     u1680:
  1980  05F2                     l1922:
  1981  05F2  0021               	movlb	1	; select bank1
  1982  05F3  1FE1               	btfss	(main@init_age+1)^(0+128),7
  1983  05F4  2DF6               	goto	u1691
  1984  05F5  2DF7               	goto	u1690
  1985  05F6                     u1691:
  1986  05F6  2E01               	goto	l1928
  1987  05F7                     u1690:
  1988  05F7                     l1924:
  1989                           
  1990                           ;main.c: 278:                     confuse_guess();
  1991  05F7  318E  2674  3184   	fcall	_confuse_guess
  1992  05FA                     l1926:
  1993                           
  1994                           ;main.c: 279:                     state = 4;
  1995  05FA  3004               	movlw	4
  1996  05FB  0020               	movlb	0	; select bank0
  1997  05FC  00EA               	movwf	??_main
  1998  05FD  086A               	movf	??_main,w
  1999  05FE  0021               	movlb	1	; select bank1
  2000  05FF  00DE               	movwf	main@state^(0+128)
  2001                           
  2002                           ;main.c: 280:                     break;
  2003  0600  2EEF               	goto	l1982
  2004  0601                     l1928:
  2005                           
  2006                           ;main.c: 284:                 sprintf(age_str, "%d\r", init_age);
  2007  0601  306D               	movlw	low (STR_9| (0+32768))
  2008  0602  0020               	movlb	0	; select bank0
  2009  0603  00E6               	movwf	sprintf@fmt
  2010  0604  3090               	movlw	high (STR_9| (0+32768))
  2011  0605  00E7               	movwf	sprintf@fmt+1
  2012  0606  0021               	movlb	1	; select bank1
  2013  0607  0861               	movf	(main@init_age+1)^(0+128),w
  2014  0608  0020               	movlb	0	; select bank0
  2015  0609  00E9               	movwf	?_sprintf+3
  2016  060A  0021               	movlb	1	; select bank1
  2017  060B  0860               	movf	main@init_age^(0+128),w
  2018  060C  0020               	movlb	0	; select bank0
  2019  060D  00E8               	movwf	?_sprintf+2
  2020  060E  30D1               	movlw	(low (main@age_str| 0))& (0+255)
  2021  060F  318F  2731  3184   	fcall	_sprintf
  2022  0612                     l1930:
  2023                           
  2024                           ;main.c: 287:                 EUSART_Write_Text("\rMCU: ");
  2025  0612  3066               	movlw	low (STR_2| (0+32768))
  2026  0613  00F1               	movwf	EUSART_Write_Text@textData
  2027  0614  3090               	movlw	high (STR_2| (0+32768))
  2028  0615  00F2               	movwf	EUSART_Write_Text@textData+1
  2029  0616  3180  200F  3184   	fcall	_EUSART_Write_Text
  2030  0619                     l1932:
  2031                           
  2032                           ;main.c: 288:                 EUSART_Write_Text("I guess ");
  2033  0619  304D               	movlw	low (STR_11| (0+32768))
  2034  061A  00F1               	movwf	EUSART_Write_Text@textData
  2035  061B  3090               	movlw	high (STR_11| (0+32768))
  2036  061C  00F2               	movwf	EUSART_Write_Text@textData+1
  2037  061D  3180  200F  3184   	fcall	_EUSART_Write_Text
  2038  0620                     l1934:
  2039                           
  2040                           ;main.c: 289:                 EUSART_Write_Text(age_str);
  2041  0620  30D1               	movlw	low main@age_str
  2042  0621  00F1               	movwf	EUSART_Write_Text@textData
  2043  0622  3000               	movlw	high main@age_str
  2044  0623  00F2               	movwf	EUSART_Write_Text@textData+1
  2045  0624  3180  200F  3184   	fcall	_EUSART_Write_Text
  2046  0627                     l1936:
  2047                           
  2048                           ;main.c: 292:                 user_input = user_wait();
  2049  0627  318E  26AB  3184   	fcall	_user_wait
  2050  062A  0020               	movlb	0	; select bank0
  2051  062B  00EA               	movwf	??_main
  2052  062C  086A               	movf	??_main,w
  2053  062D  0021               	movlb	1	; select bank1
  2054  062E  00DF               	movwf	main@user_input^(0+128)
  2055  062F                     l1938:
  2056                           
  2057                           ;main.c: 295:                 correct_guess(user_input);
  2058  062F  085F               	movf	main@user_input^(0+128),w
  2059  0630  318E  2694  3184   	fcall	_correct_guess
  2060  0633                     l1940:
  2061                           
  2062                           ;main.c: 298:                 if(user_input == '2'){
  2063  0633  3032               	movlw	50
  2064  0634  0021               	movlb	1	; select bank1
  2065  0635  065F               	xorwf	main@user_input^(0+128),w
  2066  0636  1D03               	btfss	3,2
  2067  0637  2E39               	goto	u1701
  2068  0638  2E3A               	goto	u1700
  2069  0639                     u1701:
  2070  0639  2E44               	goto	l214
  2071  063A                     u1700:
  2072  063A                     l1942:
  2073                           
  2074                           ;main.c: 301:                     age_track = init_age;
  2075  063A  0861               	movf	(main@init_age+1)^(0+128),w
  2076  063B  00DC               	movwf	(main@age_track+1)^(0+128)
  2077  063C  0860               	movf	main@init_age^(0+128),w
  2078  063D  00DB               	movwf	main@age_track^(0+128)
  2079                           
  2080                           ;main.c: 302:                     state = 3;
  2081  063E  3003               	movlw	3
  2082  063F  0020               	movlb	0	; select bank0
  2083  0640  00EA               	movwf	??_main
  2084  0641  086A               	movf	??_main,w
  2085  0642  0021               	movlb	1	; select bank1
  2086  0643  00DE               	movwf	main@state^(0+128)
  2087  0644                     l214:	
  2088                           ;main.c: 304:                 }
  2089                           
  2090                           
  2091                           ;main.c: 306:                 if(i<2){
  2092  0644  3002               	movlw	2
  2093  0645  025D               	subwf	main@i^(0+128),w
  2094  0646  1803               	skipnc
  2095  0647  2E49               	goto	u1711
  2096  0648  2E4A               	goto	u1710
  2097  0649                     u1711:
  2098  0649  2E51               	goto	l1946
  2099  064A                     u1710:
  2100  064A                     l1944:
  2101                           
  2102                           ;main.c: 309:                     i++;
  2103  064A  3001               	movlw	1
  2104  064B  0020               	movlb	0	; select bank0
  2105  064C  00EA               	movwf	??_main
  2106  064D  086A               	movf	??_main,w
  2107  064E  0021               	movlb	1	; select bank1
  2108  064F  07DD               	addwf	main@i^(0+128),f
  2109                           
  2110                           ;main.c: 311:                 } else{
  2111  0650  2E57               	goto	l1948
  2112  0651                     l1946:
  2113                           
  2114                           ;main.c: 313:                     i = 2;
  2115  0651  3002               	movlw	2
  2116  0652  0020               	movlb	0	; select bank0
  2117  0653  00EA               	movwf	??_main
  2118  0654  086A               	movf	??_main,w
  2119  0655  0021               	movlb	1	; select bank1
  2120  0656  00DD               	movwf	main@i^(0+128)
  2121  0657                     l1948:
  2122                           
  2123                           ;main.c: 270:             while((user_input == '3') && (state==2)){
  2124  0657  3033               	movlw	51
  2125  0658  065F               	xorwf	main@user_input^(0+128),w
  2126  0659  1D03               	btfss	3,2
  2127  065A  2E5C               	goto	u1721
  2128  065B  2E5D               	goto	u1720
  2129  065C                     u1721:
  2130  065C  2EEF               	goto	l1982
  2131  065D                     u1720:
  2132  065D                     l1950:
  2133  065D  3002               	movlw	2
  2134  065E  065E               	xorwf	main@state^(0+128),w
  2135  065F  1903               	btfsc	3,2
  2136  0660  2E62               	goto	u1731
  2137  0661  2E63               	goto	u1730
  2138  0662                     u1731:
  2139  0662  2DCC               	goto	l1918
  2140  0663                     u1730:
  2141  0663  2EEF               	goto	l1982
  2142  0664                     l1952:
  2143                           
  2144                           ;main.c: 322:                 init_age -= steps[i];
  2145  0664  085D               	movf	main@i^(0+128),w
  2146  0665  3EE8               	addlw	(low (_steps| 0))& (0+255)
  2147  0666  0086               	movwf	6
  2148  0667  0187               	clrf	7
  2149  0668  0801               	movf	1,w
  2150  0669  0020               	movlb	0	; select bank0
  2151  066A  00EA               	movwf	??_main
  2152  066B  01EB               	clrf	??_main+1
  2153  066C  086A               	movf	??_main,w
  2154  066D  0021               	movlb	1	; select bank1
  2155  066E  02E0               	subwf	main@init_age^(0+128),f
  2156  066F  0020               	movlb	0	; select bank0
  2157  0670  086B               	movf	??_main+1,w
  2158  0671  0021               	movlb	1	; select bank1
  2159  0672  3BE1               	subwfb	(main@init_age+1)^(0+128),f
  2160  0673                     l1954:
  2161                           
  2162                           ;main.c: 325:                 if((init_age ==(init_age-10))||(init_age<0)){
  2163  0673  0860               	movf	main@init_age^(0+128),w
  2164  0674  3EF6               	addlw	246
  2165  0675  0020               	movlb	0	; select bank0
  2166  0676  00EA               	movwf	??_main
  2167  0677  30FF               	movlw	255
  2168  0678  0021               	movlb	1	; select bank1
  2169  0679  3D61               	addwfc	(main@init_age+1)^(0+128),w
  2170  067A  0020               	movlb	0	; select bank0
  2171  067B  00EB               	movwf	??_main+1
  2172  067C  0021               	movlb	1	; select bank1
  2173  067D  0861               	movf	(main@init_age+1)^(0+128),w
  2174  067E  0020               	movlb	0	; select bank0
  2175  067F  066B               	xorwf	??_main+1,w
  2176  0680  1D03               	skipz
  2177  0681  2E86               	goto	u1745
  2178  0682  0021               	movlb	1	; select bank1
  2179  0683  0860               	movf	main@init_age^(0+128),w
  2180  0684  0020               	movlb	0	; select bank0
  2181  0685  066A               	xorwf	??_main,w
  2182  0686                     u1745:
  2183  0686  1903               	skipnz
  2184  0687  2E89               	goto	u1741
  2185  0688  2E8A               	goto	u1740
  2186  0689                     u1741:
  2187  0689  2E8F               	goto	l1958
  2188  068A                     u1740:
  2189  068A                     l1956:
  2190  068A  0021               	movlb	1	; select bank1
  2191  068B  1FE1               	btfss	(main@init_age+1)^(0+128),7
  2192  068C  2E8E               	goto	u1751
  2193  068D  2E8F               	goto	u1750
  2194  068E                     u1751:
  2195  068E  2E99               	goto	l1962
  2196  068F                     u1750:
  2197  068F                     l1958:
  2198                           
  2199                           ;main.c: 327:                     confuse_guess();
  2200  068F  318E  2674  3184   	fcall	_confuse_guess
  2201  0692                     l1960:
  2202                           
  2203                           ;main.c: 328:                     state = 4;
  2204  0692  3004               	movlw	4
  2205  0693  0020               	movlb	0	; select bank0
  2206  0694  00EA               	movwf	??_main
  2207  0695  086A               	movf	??_main,w
  2208  0696  0021               	movlb	1	; select bank1
  2209  0697  00DE               	movwf	main@state^(0+128)
  2210                           
  2211                           ;main.c: 329:                     break;
  2212  0698  2EFB               	goto	l1986
  2213  0699                     l1962:
  2214                           
  2215                           ;main.c: 333:                 sprintf(age_str, "%d\r", init_age);
  2216  0699  306D               	movlw	low (STR_9| (0+32768))
  2217  069A  0020               	movlb	0	; select bank0
  2218  069B  00E6               	movwf	sprintf@fmt
  2219  069C  3090               	movlw	high (STR_9| (0+32768))
  2220  069D  00E7               	movwf	sprintf@fmt+1
  2221  069E  0021               	movlb	1	; select bank1
  2222  069F  0861               	movf	(main@init_age+1)^(0+128),w
  2223  06A0  0020               	movlb	0	; select bank0
  2224  06A1  00E9               	movwf	?_sprintf+3
  2225  06A2  0021               	movlb	1	; select bank1
  2226  06A3  0860               	movf	main@init_age^(0+128),w
  2227  06A4  0020               	movlb	0	; select bank0
  2228  06A5  00E8               	movwf	?_sprintf+2
  2229  06A6  30D1               	movlw	(low (main@age_str| 0))& (0+255)
  2230  06A7  318F  2731  3184   	fcall	_sprintf
  2231  06AA                     l1964:
  2232                           
  2233                           ;main.c: 336:                 EUSART_Write_Text("\rMCU: ");
  2234  06AA  3066               	movlw	low (STR_2| (0+32768))
  2235  06AB  00F1               	movwf	EUSART_Write_Text@textData
  2236  06AC  3090               	movlw	high (STR_2| (0+32768))
  2237  06AD  00F2               	movwf	EUSART_Write_Text@textData+1
  2238  06AE  3180  200F  3184   	fcall	_EUSART_Write_Text
  2239  06B1                     l1966:
  2240                           
  2241                           ;main.c: 337:                 EUSART_Write_Text("I guess ");
  2242  06B1  304D               	movlw	low (STR_11| (0+32768))
  2243  06B2  00F1               	movwf	EUSART_Write_Text@textData
  2244  06B3  3090               	movlw	high (STR_11| (0+32768))
  2245  06B4  00F2               	movwf	EUSART_Write_Text@textData+1
  2246  06B5  3180  200F  3184   	fcall	_EUSART_Write_Text
  2247  06B8                     l1968:
  2248                           
  2249                           ;main.c: 338:                 EUSART_Write_Text(age_str);
  2250  06B8  30D1               	movlw	low main@age_str
  2251  06B9  00F1               	movwf	EUSART_Write_Text@textData
  2252  06BA  3000               	movlw	high main@age_str
  2253  06BB  00F2               	movwf	EUSART_Write_Text@textData+1
  2254  06BC  3180  200F  3184   	fcall	_EUSART_Write_Text
  2255  06BF                     l1970:
  2256                           
  2257                           ;main.c: 341:                 user_input = user_wait();
  2258  06BF  318E  26AB  3184   	fcall	_user_wait
  2259  06C2  0020               	movlb	0	; select bank0
  2260  06C3  00EA               	movwf	??_main
  2261  06C4  086A               	movf	??_main,w
  2262  06C5  0021               	movlb	1	; select bank1
  2263  06C6  00DF               	movwf	main@user_input^(0+128)
  2264  06C7                     l1972:
  2265                           
  2266                           ;main.c: 344:                 correct_guess(user_input);
  2267  06C7  085F               	movf	main@user_input^(0+128),w
  2268  06C8  318E  2694  3184   	fcall	_correct_guess
  2269  06CB                     l1974:
  2270                           
  2271                           ;main.c: 347:                 if(user_input == '3'){
  2272  06CB  3033               	movlw	51
  2273  06CC  0021               	movlb	1	; select bank1
  2274  06CD  065F               	xorwf	main@user_input^(0+128),w
  2275  06CE  1D03               	btfss	3,2
  2276  06CF  2ED1               	goto	u1761
  2277  06D0  2ED2               	goto	u1760
  2278  06D1                     u1761:
  2279  06D1  2EDC               	goto	l225
  2280  06D2                     u1760:
  2281  06D2                     l1976:
  2282                           
  2283                           ;main.c: 350:                     age_track = init_age;
  2284  06D2  0861               	movf	(main@init_age+1)^(0+128),w
  2285  06D3  00DC               	movwf	(main@age_track+1)^(0+128)
  2286  06D4  0860               	movf	main@init_age^(0+128),w
  2287  06D5  00DB               	movwf	main@age_track^(0+128)
  2288                           
  2289                           ;main.c: 351:                     state = 3;
  2290  06D6  3003               	movlw	3
  2291  06D7  0020               	movlb	0	; select bank0
  2292  06D8  00EA               	movwf	??_main
  2293  06D9  086A               	movf	??_main,w
  2294  06DA  0021               	movlb	1	; select bank1
  2295  06DB  00DE               	movwf	main@state^(0+128)
  2296  06DC                     l225:	
  2297                           ;main.c: 353:                 }
  2298                           
  2299                           
  2300                           ;main.c: 355:                 if(i<2){
  2301  06DC  3002               	movlw	2
  2302  06DD  025D               	subwf	main@i^(0+128),w
  2303  06DE  1803               	skipnc
  2304  06DF  2EE1               	goto	u1771
  2305  06E0  2EE2               	goto	u1770
  2306  06E1                     u1771:
  2307  06E1  2EE9               	goto	l1980
  2308  06E2                     u1770:
  2309  06E2                     l1978:
  2310                           
  2311                           ;main.c: 358:                     i++;
  2312  06E2  3001               	movlw	1
  2313  06E3  0020               	movlb	0	; select bank0
  2314  06E4  00EA               	movwf	??_main
  2315  06E5  086A               	movf	??_main,w
  2316  06E6  0021               	movlb	1	; select bank1
  2317  06E7  07DD               	addwf	main@i^(0+128),f
  2318                           
  2319                           ;main.c: 360:                 } else{
  2320  06E8  2EEF               	goto	l1982
  2321  06E9                     l1980:
  2322                           
  2323                           ;main.c: 362:                     i = 2;
  2324  06E9  3002               	movlw	2
  2325  06EA  0020               	movlb	0	; select bank0
  2326  06EB  00EA               	movwf	??_main
  2327  06EC  086A               	movf	??_main,w
  2328  06ED  0021               	movlb	1	; select bank1
  2329  06EE  00DD               	movwf	main@i^(0+128)
  2330  06EF                     l1982:
  2331                           
  2332                           ;main.c: 319:             while((user_input == '2') && (state==2)){
  2333  06EF  3032               	movlw	50
  2334  06F0  065F               	xorwf	main@user_input^(0+128),w
  2335  06F1  1D03               	btfss	3,2
  2336  06F2  2EF4               	goto	u1781
  2337  06F3  2EF5               	goto	u1780
  2338  06F4                     u1781:
  2339  06F4  2EFB               	goto	l1986
  2340  06F5                     u1780:
  2341  06F5                     l1984:
  2342  06F5  3002               	movlw	2
  2343  06F6  065E               	xorwf	main@state^(0+128),w
  2344  06F7  1903               	btfsc	3,2
  2345  06F8  2EFA               	goto	u1791
  2346  06F9  2EFB               	goto	u1790
  2347  06FA                     u1791:
  2348  06FA  2E64               	goto	l1952
  2349  06FB                     u1790:
  2350  06FB                     l1986:
  2351                           
  2352                           ;main.c: 370:         if(state == 3){
  2353  06FB  3003               	movlw	3
  2354  06FC  065E               	xorwf	main@state^(0+128),w
  2355  06FD  1D03               	btfss	3,2
  2356  06FE  2F00               	goto	u1801
  2357  06FF  2F01               	goto	u1800
  2358  0700                     u1801:
  2359  0700  2D05               	goto	l1860
  2360  0701                     u1800:
  2361  0701  2F63               	goto	l2012
  2362  0702                     l1990:
  2363                           
  2364                           ;main.c: 376:                 init_age -= 1;
  2365  0702  30FF               	movlw	255
  2366  0703  07E0               	addwf	main@init_age^(0+128),f
  2367  0704  30FF               	movlw	255
  2368  0705  3DE1               	addwfc	(main@init_age+1)^(0+128),f
  2369  0706                     l1992:
  2370                           
  2371                           ;main.c: 379:                 if((init_age == (age_track-steps[i-1]))||(init_age<0)){
  2372  0706  085D               	movf	main@i^(0+128),w
  2373  0707  3EE7               	addlw	(low ((_steps| 0+255)))& (0+255)
  2374  0708  0086               	movwf	6
  2375  0709  0187               	clrf	7
  2376  070A  085C               	movf	(main@age_track+1)^(0+128),w
  2377  070B  0020               	movlb	0	; select bank0
  2378  070C  00EB               	movwf	??_main+1
  2379  070D  0801               	movf	1,w
  2380  070E  0021               	movlb	1	; select bank1
  2381  070F  025B               	subwf	main@age_track^(0+128),w
  2382  0710  0020               	movlb	0	; select bank0
  2383  0711  00EA               	movwf	??_main
  2384  0712  1C03               	skipc
  2385  0713  03EB               	decf	??_main+1,f
  2386  0714  0021               	movlb	1	; select bank1
  2387  0715  0861               	movf	(main@init_age+1)^(0+128),w
  2388  0716  0020               	movlb	0	; select bank0
  2389  0717  066B               	xorwf	??_main+1,w
  2390  0718  1D03               	skipz
  2391  0719  2F1E               	goto	u1815
  2392  071A  0021               	movlb	1	; select bank1
  2393  071B  0860               	movf	main@init_age^(0+128),w
  2394  071C  0020               	movlb	0	; select bank0
  2395  071D  066A               	xorwf	??_main,w
  2396  071E                     u1815:
  2397  071E  1903               	skipnz
  2398  071F  2F21               	goto	u1811
  2399  0720  2F22               	goto	u1810
  2400  0721                     u1811:
  2401  0721  2F27               	goto	l1996
  2402  0722                     u1810:
  2403  0722                     l1994:
  2404  0722  0021               	movlb	1	; select bank1
  2405  0723  1FE1               	btfss	(main@init_age+1)^(0+128),7
  2406  0724  2F26               	goto	u1821
  2407  0725  2F27               	goto	u1820
  2408  0726                     u1821:
  2409  0726  2F31               	goto	l2000
  2410  0727                     u1820:
  2411  0727                     l1996:
  2412                           
  2413                           ;main.c: 381:                     confuse_guess();
  2414  0727  318E  2674  3184   	fcall	_confuse_guess
  2415  072A                     l1998:
  2416                           
  2417                           ;main.c: 382:                     state = 4;
  2418  072A  3004               	movlw	4
  2419  072B  0020               	movlb	0	; select bank0
  2420  072C  00EA               	movwf	??_main
  2421  072D  086A               	movf	??_main,w
  2422  072E  0021               	movlb	1	; select bank1
  2423  072F  00DE               	movwf	main@state^(0+128)
  2424                           
  2425                           ;main.c: 383:                     break;
  2426  0730  2FD2               	goto	l2038
  2427  0731                     l2000:
  2428                           
  2429                           ;main.c: 387:                 sprintf(age_str, "%d\r", init_age);
  2430  0731  306D               	movlw	low (STR_9| (0+32768))
  2431  0732  0020               	movlb	0	; select bank0
  2432  0733  00E6               	movwf	sprintf@fmt
  2433  0734  3090               	movlw	high (STR_9| (0+32768))
  2434  0735  00E7               	movwf	sprintf@fmt+1
  2435  0736  0021               	movlb	1	; select bank1
  2436  0737  0861               	movf	(main@init_age+1)^(0+128),w
  2437  0738  0020               	movlb	0	; select bank0
  2438  0739  00E9               	movwf	?_sprintf+3
  2439  073A  0021               	movlb	1	; select bank1
  2440  073B  0860               	movf	main@init_age^(0+128),w
  2441  073C  0020               	movlb	0	; select bank0
  2442  073D  00E8               	movwf	?_sprintf+2
  2443  073E  30D1               	movlw	(low (main@age_str| 0))& (0+255)
  2444  073F  318F  2731  3184   	fcall	_sprintf
  2445  0742                     l2002:
  2446                           
  2447                           ;main.c: 390:                 EUSART_Write_Text("\rMCU: ");
  2448  0742  3066               	movlw	low (STR_2| (0+32768))
  2449  0743  00F1               	movwf	EUSART_Write_Text@textData
  2450  0744  3090               	movlw	high (STR_2| (0+32768))
  2451  0745  00F2               	movwf	EUSART_Write_Text@textData+1
  2452  0746  3180  200F  3184   	fcall	_EUSART_Write_Text
  2453  0749                     l2004:
  2454                           
  2455                           ;main.c: 391:                 EUSART_Write_Text("I guess ");
  2456  0749  304D               	movlw	low (STR_11| (0+32768))
  2457  074A  00F1               	movwf	EUSART_Write_Text@textData
  2458  074B  3090               	movlw	high (STR_11| (0+32768))
  2459  074C  00F2               	movwf	EUSART_Write_Text@textData+1
  2460  074D  3180  200F  3184   	fcall	_EUSART_Write_Text
  2461  0750                     l2006:
  2462                           
  2463                           ;main.c: 392:                 EUSART_Write_Text(age_str);
  2464  0750  30D1               	movlw	low main@age_str
  2465  0751  00F1               	movwf	EUSART_Write_Text@textData
  2466  0752  3000               	movlw	high main@age_str
  2467  0753  00F2               	movwf	EUSART_Write_Text@textData+1
  2468  0754  3180  200F  3184   	fcall	_EUSART_Write_Text
  2469  0757                     l2008:
  2470                           
  2471                           ;main.c: 395:                 user_input = user_wait();
  2472  0757  318E  26AB  3184   	fcall	_user_wait
  2473  075A  0020               	movlb	0	; select bank0
  2474  075B  00EA               	movwf	??_main
  2475  075C  086A               	movf	??_main,w
  2476  075D  0021               	movlb	1	; select bank1
  2477  075E  00DF               	movwf	main@user_input^(0+128)
  2478  075F                     l2010:
  2479                           
  2480                           ;main.c: 398:                 correct_guess(user_input);
  2481  075F  085F               	movf	main@user_input^(0+128),w
  2482  0760  318E  2694  3184   	fcall	_correct_guess
  2483  0763                     l2012:
  2484                           
  2485                           ;main.c: 373:             while((user_input == '2') && (state==3)){
  2486  0763  3032               	movlw	50
  2487  0764  0021               	movlb	1	; select bank1
  2488  0765  065F               	xorwf	main@user_input^(0+128),w
  2489  0766  1D03               	btfss	3,2
  2490  0767  2F69               	goto	u1831
  2491  0768  2F6A               	goto	u1830
  2492  0769                     u1831:
  2493  0769  2FD2               	goto	l2038
  2494  076A                     u1830:
  2495  076A                     l2014:
  2496  076A  3003               	movlw	3
  2497  076B  065E               	xorwf	main@state^(0+128),w
  2498  076C  1903               	btfsc	3,2
  2499  076D  2F6F               	goto	u1841
  2500  076E  2F70               	goto	u1840
  2501  076F                     u1841:
  2502  076F  2F02               	goto	l1990
  2503  0770                     u1840:
  2504  0770  2FD2               	goto	l2038
  2505  0771                     l2016:
  2506                           
  2507                           ;main.c: 406:                 init_age += 1;
  2508  0771  3001               	movlw	1
  2509  0772  07E0               	addwf	main@init_age^(0+128),f
  2510  0773  3000               	movlw	0
  2511  0774  3DE1               	addwfc	(main@init_age+1)^(0+128),f
  2512  0775                     l2018:
  2513                           
  2514                           ;main.c: 409:                 if((init_age == (age_track+steps[i-1]))||(init_age<0)){
  2515  0775  085D               	movf	main@i^(0+128),w
  2516  0776  3EE7               	addlw	(low ((_steps| 0+255)))& (0+255)
  2517  0777  0086               	movwf	6
  2518  0778  0187               	clrf	7
  2519  0779  0801               	movf	1,w
  2520  077A  075B               	addwf	main@age_track^(0+128),w
  2521  077B  0020               	movlb	0	; select bank0
  2522  077C  00EA               	movwf	??_main
  2523  077D  0021               	movlb	1	; select bank1
  2524  077E  085C               	movf	(main@age_track+1)^(0+128),w
  2525  077F  1803               	skipnc
  2526  0780  0A5C               	incf	(main@age_track+1)^(0+128),w
  2527  0781  0020               	movlb	0	; select bank0
  2528  0782  00EB               	movwf	??_main+1
  2529  0783  0021               	movlb	1	; select bank1
  2530  0784  0861               	movf	(main@init_age+1)^(0+128),w
  2531  0785  0020               	movlb	0	; select bank0
  2532  0786  066B               	xorwf	??_main+1,w
  2533  0787  1D03               	skipz
  2534  0788  2F8D               	goto	u1855
  2535  0789  0021               	movlb	1	; select bank1
  2536  078A  0860               	movf	main@init_age^(0+128),w
  2537  078B  0020               	movlb	0	; select bank0
  2538  078C  066A               	xorwf	??_main,w
  2539  078D                     u1855:
  2540  078D  1903               	skipnz
  2541  078E  2F90               	goto	u1851
  2542  078F  2F91               	goto	u1850
  2543  0790                     u1851:
  2544  0790  2F96               	goto	l2022
  2545  0791                     u1850:
  2546  0791                     l2020:
  2547  0791  0021               	movlb	1	; select bank1
  2548  0792  1FE1               	btfss	(main@init_age+1)^(0+128),7
  2549  0793  2F95               	goto	u1861
  2550  0794  2F96               	goto	u1860
  2551  0795                     u1861:
  2552  0795  2FA0               	goto	l2026
  2553  0796                     u1860:
  2554  0796                     l2022:
  2555                           
  2556                           ;main.c: 411:                     confuse_guess();
  2557  0796  318E  2674  3184   	fcall	_confuse_guess
  2558  0799                     l2024:
  2559                           
  2560                           ;main.c: 412:                     state = 4;
  2561  0799  3004               	movlw	4
  2562  079A  0020               	movlb	0	; select bank0
  2563  079B  00EA               	movwf	??_main
  2564  079C  086A               	movf	??_main,w
  2565  079D  0021               	movlb	1	; select bank1
  2566  079E  00DE               	movwf	main@state^(0+128)
  2567                           
  2568                           ;main.c: 413:                     break;
  2569  079F  2D05               	goto	l1860
  2570  07A0                     l2026:
  2571                           
  2572                           ;main.c: 417:                 sprintf(age_str, "%d\r", init_age);
  2573  07A0  306D               	movlw	low (STR_9| (0+32768))
  2574  07A1  0020               	movlb	0	; select bank0
  2575  07A2  00E6               	movwf	sprintf@fmt
  2576  07A3  3090               	movlw	high (STR_9| (0+32768))
  2577  07A4  00E7               	movwf	sprintf@fmt+1
  2578  07A5  0021               	movlb	1	; select bank1
  2579  07A6  0861               	movf	(main@init_age+1)^(0+128),w
  2580  07A7  0020               	movlb	0	; select bank0
  2581  07A8  00E9               	movwf	?_sprintf+3
  2582  07A9  0021               	movlb	1	; select bank1
  2583  07AA  0860               	movf	main@init_age^(0+128),w
  2584  07AB  0020               	movlb	0	; select bank0
  2585  07AC  00E8               	movwf	?_sprintf+2
  2586  07AD  30D1               	movlw	(low (main@age_str| 0))& (0+255)
  2587  07AE  318F  2731  3184   	fcall	_sprintf
  2588  07B1                     l2028:
  2589                           
  2590                           ;main.c: 420:                 EUSART_Write_Text("\rMCU: ");
  2591  07B1  3066               	movlw	low (STR_2| (0+32768))
  2592  07B2  00F1               	movwf	EUSART_Write_Text@textData
  2593  07B3  3090               	movlw	high (STR_2| (0+32768))
  2594  07B4  00F2               	movwf	EUSART_Write_Text@textData+1
  2595  07B5  3180  200F  3184   	fcall	_EUSART_Write_Text
  2596  07B8                     l2030:
  2597                           
  2598                           ;main.c: 421:                 EUSART_Write_Text("I guess ");
  2599  07B8  304D               	movlw	low (STR_11| (0+32768))
  2600  07B9  00F1               	movwf	EUSART_Write_Text@textData
  2601  07BA  3090               	movlw	high (STR_11| (0+32768))
  2602  07BB  00F2               	movwf	EUSART_Write_Text@textData+1
  2603  07BC  3180  200F  3184   	fcall	_EUSART_Write_Text
  2604  07BF                     l2032:
  2605                           
  2606                           ;main.c: 422:                 EUSART_Write_Text(age_str);
  2607  07BF  30D1               	movlw	low main@age_str
  2608  07C0  00F1               	movwf	EUSART_Write_Text@textData
  2609  07C1  3000               	movlw	high main@age_str
  2610  07C2  00F2               	movwf	EUSART_Write_Text@textData+1
  2611  07C3  3180  200F  3184   	fcall	_EUSART_Write_Text
  2612  07C6                     l2034:
  2613                           
  2614                           ;main.c: 425:                 user_input = user_wait();
  2615  07C6  318E  26AB  3184   	fcall	_user_wait
  2616  07C9  0020               	movlb	0	; select bank0
  2617  07CA  00EA               	movwf	??_main
  2618  07CB  086A               	movf	??_main,w
  2619  07CC  0021               	movlb	1	; select bank1
  2620  07CD  00DF               	movwf	main@user_input^(0+128)
  2621  07CE                     l2036:
  2622                           
  2623                           ;main.c: 428:                 correct_guess(user_input);
  2624  07CE  085F               	movf	main@user_input^(0+128),w
  2625  07CF  318E  2694  3184   	fcall	_correct_guess
  2626  07D2                     l2038:
  2627                           
  2628                           ;main.c: 403:             while((user_input == '3') && (state==3)){
  2629  07D2  3033               	movlw	51
  2630  07D3  0021               	movlb	1	; select bank1
  2631  07D4  065F               	xorwf	main@user_input^(0+128),w
  2632  07D5  1D03               	btfss	3,2
  2633  07D6  2FD8               	goto	u1871
  2634  07D7  2FD9               	goto	u1870
  2635  07D8                     u1871:
  2636  07D8  2FE0               	goto	l230
  2637  07D9                     u1870:
  2638  07D9                     l2040:
  2639  07D9  3003               	movlw	3
  2640  07DA  065E               	xorwf	main@state^(0+128),w
  2641  07DB  1903               	btfsc	3,2
  2642  07DC  2FDE               	goto	u1881
  2643  07DD  2FDF               	goto	u1880
  2644  07DE                     u1881:
  2645  07DE  2F71               	goto	l2016
  2646  07DF                     u1880:
  2647  07DF  2D05               	goto	l1860
  2648  07E0                     l230:	
  2649                           ;main.c: 431:         }
  2650                           
  2651  07E0  2D05               	goto	l1860
  2652  07E1  3180  2802         	ljmp	start
  2653  07E3                     __end_of_main:
  2654                           
  2655                           	psect	text1
  2656  0EAB                     __ptext1:	
  2657 ;; *************** function _user_wait *****************
  2658 ;; Defined at:
  2659 ;;		line 94 in file "main.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  user_res        1    8[COMMON] unsigned char 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      unsigned char 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2673 ;;      Params:         0       0       0       0       0       0       0       0
  2674 ;;      Locals:         1       0       0       0       0       0       0       0
  2675 ;;      Temps:          1       0       0       0       0       0       0       0
  2676 ;;      Totals:         2       0       0       0       0       0       0       0
  2677 ;;Total ram usage:        2 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 2
  2680 ;; This function calls:
  2681 ;;		_EUSART_Read
  2682 ;;		_EUSART_Write_Text
  2683 ;;		_EUSART_is_rx_ready
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689  0EAB                     _user_wait:	
  2690                           ;psect for function _user_wait
  2691                           
  2692  0EAB                     l1804:	
  2693                           ;incstack = 0
  2694                           ; Regs used in _user_wait: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2695                           
  2696                           
  2697                           ;main.c: 96:     char user_res;;main.c: 99:     EUSART_Write_Text("\rUser: ");
  2698  0EAB  3056               	movlw	low (STR_1| (0+32768))
  2699  0EAC  00F1               	movwf	EUSART_Write_Text@textData
  2700  0EAD  3090               	movlw	high (STR_1| (0+32768))
  2701  0EAE  00F2               	movwf	EUSART_Write_Text@textData+1
  2702  0EAF  3180  200F  318E   	fcall	_EUSART_Write_Text
  2703  0EB2                     l1806:	
  2704                           ;main.c: 101:     while(EUSART_is_rx_ready()==0);
  2705                           
  2706  0EB2  318E  2635  318E   	fcall	_EUSART_is_rx_ready
  2707  0EB5  3A00               	xorlw	0
  2708  0EB6  1903               	skipnz
  2709  0EB7  2EB9               	goto	u1571
  2710  0EB8  2EBA               	goto	u1570
  2711  0EB9                     u1571:
  2712  0EB9  2EB2               	goto	l1806
  2713  0EBA                     u1570:
  2714  0EBA                     l1808:
  2715                           
  2716                           ;main.c: 102:     user_res = EUSART_Read();
  2717  0EBA  318E  2684  318E   	fcall	_EUSART_Read
  2718  0EBD  00F7               	movwf	??_user_wait
  2719  0EBE  0877               	movf	??_user_wait,w
  2720  0EBF  00F8               	movwf	user_wait@user_res
  2721  0EC0                     l1810:
  2722                           
  2723                           ;main.c: 104:     return user_res;
  2724  0EC0  0878               	movf	user_wait@user_res,w
  2725  0EC1                     l174:
  2726  0EC1  0008               	return
  2727  0EC2                     __end_of_user_wait:
  2728                           
  2729                           	psect	text2
  2730  0E35                     __ptext2:	
  2731 ;; *************** function _EUSART_is_rx_ready *****************
  2732 ;; Defined at:
  2733 ;;		line 99 in file "mcc_generated_files/eusart.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      _Bool 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2747 ;;      Params:         0       0       0       0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0       0       0       0
  2750 ;;      Totals:         0       0       0       0       0       0       0       0
  2751 ;;Total ram usage:        0 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_user_wait
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760  0E35                     _EUSART_is_rx_ready:	
  2761                           ;psect for function _EUSART_is_rx_ready
  2762                           
  2763  0E35                     l1756:	
  2764                           ;incstack = 0
  2765                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  2766                           
  2767                           
  2768                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  2769  0E35  0020               	movlb	0	; select bank0
  2770  0E36  0E11               	swapf	17,w	;volatile
  2771  0E37  0C89               	rrf	9,f
  2772  0E38  3901               	andlw	1
  2773  0E39                     l106:
  2774  0E39  0008               	return
  2775  0E3A                     __end_of_EUSART_is_rx_ready:
  2776                           
  2777                           	psect	text3
  2778  0E84                     __ptext3:	
  2779 ;; *************** function _EUSART_Read *****************
  2780 ;; Defined at:
  2781 ;;		line 113 in file "mcc_generated_files/eusart.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      unsigned char 
  2788 ;; Registers used:
  2789 ;;		wreg, status,2
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2795 ;;      Params:         0       0       0       0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0       0
  2798 ;;      Totals:         0       0       0       0       0       0       0       0
  2799 ;;Total ram usage:        0 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_user_wait
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808  0E84                     _EUSART_Read:	
  2809                           ;psect for function _EUSART_Read
  2810                           
  2811  0E84                     l1760:	
  2812                           ;incstack = 0
  2813                           ; Regs used in _EUSART_Read: [wreg+status,2]
  2814                           
  2815  0E84                     l115:	
  2816                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  2817                           
  2818                           
  2819                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  2820  0E84  0020               	movlb	0	; select bank0
  2821  0E85  1E91               	btfss	17,5	;volatile
  2822  0E86  2E88               	goto	u1501
  2823  0E87  2E89               	goto	u1500
  2824  0E88                     u1501:
  2825  0E88  2E84               	goto	l115
  2826  0E89                     u1500:
  2827  0E89                     l1762:
  2828                           
  2829                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  2830  0E89  0021               	movlb	1	; select bank1
  2831  0E8A  01A4               	clrf	_eusartRxLastError^(0+128)	;volatile
  2832  0E8B                     l1764:
  2833                           
  2834                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  2835  0E8B  0023               	movlb	3	; select bank3
  2836  0E8C  1C9D               	btfss	29,1	;volatile
  2837  0E8D  2E8F               	goto	u1511
  2838  0E8E  2E90               	goto	u1510
  2839  0E8F                     u1511:
  2840  0E8F  2E92               	goto	l1768
  2841  0E90                     u1510:
  2842  0E90                     l1766:
  2843                           
  2844                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  2845  0E90  121D               	bcf	29,4	;volatile
  2846                           
  2847                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  2848  0E91  161D               	bsf	29,4	;volatile
  2849  0E92                     l1768:
  2850                           
  2851                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  2852  0E92  0819               	movf	25,w	;volatile
  2853  0E93                     l119:
  2854  0E93  0008               	return
  2855  0E94                     __end_of_EUSART_Read:
  2856                           
  2857                           	psect	text4
  2858  0F31                     __ptext4:	
  2859 ;; *************** function _sprintf *****************
  2860 ;; Defined at:
  2861 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  s               1    wreg     PTR unsigned char 
  2864 ;;		 -> main@age_str(10), 
  2865 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  2866 ;;		 -> STR_27(4), STR_24(4), STR_21(4), STR_18(4), 
  2867 ;;		 -> STR_15(4), STR_12(4), STR_9(4), 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  s               1    1[BANK1 ] PTR unsigned char 
  2870 ;;		 -> main@age_str(10), 
  2871 ;;  f              10    2[BANK1 ] struct _IO_FILE
  2872 ;;  ret             2    0        int 
  2873 ;;  ap              1    0[BANK1 ] PTR void [1]
  2874 ;;		 -> ?_sprintf(2), 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  2   70[BANK0 ] int 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2884 ;;      Params:         0       4       0       0       0       0       0       0
  2885 ;;      Locals:         0       0      12       0       0       0       0       0
  2886 ;;      Temps:          1       0       0       0       0       0       0       0
  2887 ;;      Totals:         1       4      12       0       0       0       0       0
  2888 ;;Total ram usage:       17 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 7
  2891 ;; This function calls:
  2892 ;;		_vfprintf
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898  0F31                     _sprintf:	
  2899                           ;psect for function _sprintf
  2900                           
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2904                           ;sprintf@s stored from wreg
  2905  0F31  0021               	movlb	1	; select bank1
  2906  0F32  00C6               	movwf	sprintf@s^(0+128)
  2907  0F33                     l1820:
  2908  0F33  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2909  0F34  00FD               	movwf	??_sprintf
  2910  0F35  087D               	movf	??_sprintf,w
  2911  0F36  00C5               	movwf	sprintf@ap^(0+128)
  2912  0F37  0846               	movf	sprintf@s^(0+128),w
  2913  0F38  00FD               	movwf	??_sprintf
  2914  0F39  087D               	movf	??_sprintf,w
  2915  0F3A  00C7               	movwf	sprintf@f^(0+128)
  2916  0F3B                     l1822:
  2917  0F3B  01C9               	clrf	(sprintf@f^(0+128)+2)
  2918  0F3C  01CA               	clrf	((sprintf@f+1)^(0+128)+2)
  2919  0F3D                     l1824:
  2920  0F3D  01CF               	clrf	(sprintf@f^(0+128)+8)
  2921  0F3E  01D0               	clrf	((sprintf@f+1)^(0+128)+8)
  2922  0F3F                     l1826:
  2923  0F3F  0020               	movlb	0	; select bank0
  2924  0F40  0867               	movf	sprintf@fmt+1,w
  2925  0F41  00DF               	movwf	vfprintf@fmt+1
  2926  0F42  0866               	movf	sprintf@fmt,w
  2927  0F43  00DE               	movwf	vfprintf@fmt
  2928  0F44  30C5               	movlw	(low (sprintf@ap| 0))& (0+255)
  2929  0F45  00FD               	movwf	??_sprintf
  2930  0F46  087D               	movf	??_sprintf,w
  2931  0F47  00E0               	movwf	vfprintf@ap
  2932  0F48  30C7               	movlw	(low (sprintf@f| 0))& (0+255)
  2933  0F49  318F  277D  318F   	fcall	_vfprintf
  2934  0F4C                     l1828:
  2935  0F4C  0021               	movlb	1	; select bank1
  2936  0F4D  0849               	movf	(sprintf@f^(0+128)+2),w
  2937  0F4E  0746               	addwf	sprintf@s^(0+128),w
  2938  0F4F  00FD               	movwf	??_sprintf
  2939  0F50  087D               	movf	??_sprintf,w
  2940  0F51  0086               	movwf	6
  2941  0F52  0187               	clrf	7
  2942  0F53  0181               	clrf	1
  2943  0F54                     l780:
  2944  0F54  0008               	return
  2945  0F55                     __end_of_sprintf:
  2946                           
  2947                           	psect	text5
  2948  0F7D                     __ptext5:	
  2949 ;; *************** function _vfprintf *****************
  2950 ;; Defined at:
  2951 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  fp              1    wreg     PTR struct _IO_FILE
  2954 ;;		 -> sprintf@f(10), 
  2955 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  2956 ;;		 -> STR_27(4), STR_24(4), STR_21(4), STR_18(4), 
  2957 ;;		 -> STR_15(4), STR_12(4), STR_9(4), 
  2958 ;;  ap              1   64[BANK0 ] PTR PTR void 
  2959 ;;		 -> sprintf@ap(1), 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  2962 ;;		 -> sprintf@f(10), 
  2963 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  2964 ;;		 -> STR_27(4), STR_24(4), STR_21(4), STR_18(4), 
  2965 ;;		 -> STR_15(4), STR_12(4), STR_9(4), 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  2   62[BANK0 ] int 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2975 ;;      Params:         0       3       0       0       0       0       0       0
  2976 ;;      Locals:         0       3       0       0       0       0       0       0
  2977 ;;      Temps:          0       2       0       0       0       0       0       0
  2978 ;;      Totals:         0       8       0       0       0       0       0       0
  2979 ;;Total ram usage:        8 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 6
  2982 ;; This function calls:
  2983 ;;		_vfpfcnvrt
  2984 ;; This function is called by:
  2985 ;;		_sprintf
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989  0F7D                     _vfprintf:	
  2990                           ;psect for function _vfprintf
  2991                           
  2992                           
  2993                           ;incstack = 0
  2994                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2995                           ;vfprintf@fp stored from wreg
  2996  0F7D  0020               	movlb	0	; select bank0
  2997  0F7E  00E3               	movwf	vfprintf@fp
  2998  0F7F                     l1790:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3001  0F7F  085F               	movf	vfprintf@fmt+1,w
  3002  0F80  00E5               	movwf	vfprintf@cfmt+1
  3003  0F81  085E               	movf	vfprintf@fmt,w
  3004  0F82  00E4               	movwf	vfprintf@cfmt
  3005  0F83                     l1792:
  3006                           
  3007                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3008  0F83  0021               	movlb	1	; select bank1
  3009  0F84  01A0               	clrf	_nout^(0+128)
  3010  0F85  01A1               	clrf	(_nout+1)^(0+128)
  3011                           
  3012                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3013  0F86  2F9B               	goto	l1796
  3014  0F87                     l1794:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3017  0F87  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3018  0F88  00E1               	movwf	??_vfprintf
  3019  0F89  0861               	movf	??_vfprintf,w
  3020  0F8A  00CE               	movwf	vfpfcnvrt@fmt
  3021  0F8B  0860               	movf	vfprintf@ap,w
  3022  0F8C  00E2               	movwf	??_vfprintf+1
  3023  0F8D  0862               	movf	??_vfprintf+1,w
  3024  0F8E  00CF               	movwf	vfpfcnvrt@ap
  3025  0F8F  0863               	movf	vfprintf@fp,w
  3026  0F90  3180  2097  318F   	fcall	_vfpfcnvrt
  3027  0F93  0020               	movlb	0	; select bank0
  3028  0F94  084E               	movf	?_vfpfcnvrt,w
  3029  0F95  0021               	movlb	1	; select bank1
  3030  0F96  07A0               	addwf	_nout^(0+128),f
  3031  0F97  0020               	movlb	0	; select bank0
  3032  0F98  084F               	movf	?_vfpfcnvrt+1,w
  3033  0F99  0021               	movlb	1	; select bank1
  3034  0F9A  3DA1               	addwfc	(_nout+1)^(0+128),f
  3035  0F9B                     l1796:
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3038  0F9B  0020               	movlb	0	; select bank0
  3039  0F9C  0864               	movf	vfprintf@cfmt,w
  3040  0F9D  0084               	movwf	4
  3041  0F9E  0865               	movf	vfprintf@cfmt+1,w
  3042  0F9F  0085               	movwf	5
  3043  0FA0  0012               	moviw fsr0++
  3044  0FA1  1D03               	btfss	3,2
  3045  0FA2  2FA4               	goto	u1561
  3046  0FA3  2FA5               	goto	u1560
  3047  0FA4                     u1561:
  3048  0FA4  2F87               	goto	l1794
  3049  0FA5                     u1560:
  3050  0FA5                     l1798:
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3053  0FA5  0021               	movlb	1	; select bank1
  3054  0FA6  0821               	movf	(_nout+1)^(0+128),w
  3055  0FA7  0020               	movlb	0	; select bank0
  3056  0FA8  00DF               	movwf	?_vfprintf+1
  3057  0FA9  0021               	movlb	1	; select bank1
  3058  0FAA  0820               	movf	_nout^(0+128),w
  3059  0FAB  0020               	movlb	0	; select bank0
  3060  0FAC  00DE               	movwf	?_vfprintf
  3061  0FAD                     l852:
  3062  0FAD  0008               	return
  3063  0FAE                     __end_of_vfprintf:
  3064                           
  3065                           	psect	text6
  3066  0097                     __ptext6:	
  3067 ;; *************** function _vfpfcnvrt *****************
  3068 ;; Defined at:
  3069 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  fp              1    wreg     PTR struct _IO_FILE
  3072 ;;		 -> sprintf@f(10), 
  3073 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3074 ;;		 -> vfprintf@cfmt(2), 
  3075 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3076 ;;		 -> sprintf@ap(1), 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  3079 ;;		 -> sprintf@f(10), 
  3080 ;;  ll              8   53[BANK0 ] long long 
  3081 ;;  llu             8    0        unsigned long long 
  3082 ;;  f               4    0        unsigned long long 
  3083 ;;  ct              3    0        unsigned char [3]
  3084 ;;  vp              2    0        PTR void 
  3085 ;;  i               2    0        int 
  3086 ;;  done            2    0        int 
  3087 ;;  cp              2    0        PTR unsigned char 
  3088 ;;  c               1    0        unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2   46[BANK0 ] int 
  3091 ;; Registers used:
  3092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3098 ;;      Params:         0       2       0       0       0       0       0       0
  3099 ;;      Locals:         0       9       0       0       0       0       0       0
  3100 ;;      Temps:          0       5       0       0       0       0       0       0
  3101 ;;      Totals:         0      16       0       0       0       0       0       0
  3102 ;;Total ram usage:       16 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 5
  3105 ;; This function calls:
  3106 ;;		_dtoa
  3107 ;;		_fputc
  3108 ;; This function is called by:
  3109 ;;		_vfprintf
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113  0097                     _vfpfcnvrt:	
  3114                           ;psect for function _vfpfcnvrt
  3115                           
  3116                           
  3117                           ;incstack = 0
  3118                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3119                           ;vfpfcnvrt@fp stored from wreg
  3120  0097  0020               	movlb	0	; select bank0
  3121  0098  00DD               	movwf	vfpfcnvrt@fp
  3122  0099                     l1678:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3125  0099  084E               	movf	vfpfcnvrt@fmt,w
  3126  009A  0086               	movwf	6
  3127  009B  0187               	clrf	7
  3128  009C  3F40               	moviw [0]fsr1
  3129  009D  00D0               	movwf	??_vfpfcnvrt
  3130  009E  3F41               	moviw [1]fsr1
  3131  009F  00D1               	movwf	??_vfpfcnvrt+1
  3132  00A0  0850               	movf	??_vfpfcnvrt,w
  3133  00A1  0084               	movwf	4
  3134  00A2  0851               	movf	??_vfpfcnvrt+1,w
  3135  00A3  0085               	movwf	5
  3136  00A4  0012               	moviw fsr0++
  3137  00A5  3A25               	xorlw	37
  3138  00A6  1D03               	btfss	3,2
  3139  00A7  28A9               	goto	u1461
  3140  00A8  28AA               	goto	u1460
  3141  00A9                     u1461:
  3142  00A9  294E               	goto	l1714
  3143  00AA                     u1460:
  3144  00AA                     l1680:
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3147  00AA  084E               	movf	vfpfcnvrt@fmt,w
  3148  00AB  0086               	movwf	6
  3149  00AC  0187               	clrf	7
  3150  00AD  3001               	movlw	1
  3151  00AE  0781               	addwf	1,f
  3152  00AF  3141               	addfsr 1,1
  3153  00B0  1803               	skipnc
  3154  00B1  0A81               	incf	1,f
  3155  00B2                     l1682:
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3158  00B2  0021               	movlb	1	; select bank1
  3159  00B3  01A2               	clrf	_width^(0+128)
  3160  00B4  01A3               	clrf	(_width+1)^(0+128)
  3161  00B5  0020               	movlb	0	; select bank0
  3162  00B6  01EE               	clrf	_flags
  3163  00B7  01EF               	clrf	_flags+1
  3164  00B8                     l1684:
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3167  00B8  30FF               	movlw	255
  3168  00B9  00EC               	movwf	_prec
  3169  00BA  30FF               	movlw	255
  3170  00BB  00ED               	movwf	_prec+1
  3171  00BC                     l1686:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3174  00BC  084E               	movf	vfpfcnvrt@fmt,w
  3175  00BD  0086               	movwf	6
  3176  00BE  0187               	clrf	7
  3177  00BF  3F40               	moviw [0]fsr1
  3178  00C0  00D0               	movwf	??_vfpfcnvrt
  3179  00C1  3F41               	moviw [1]fsr1
  3180  00C2  00D1               	movwf	??_vfpfcnvrt+1
  3181  00C3  0850               	movf	??_vfpfcnvrt,w
  3182  00C4  0084               	movwf	4
  3183  00C5  0851               	movf	??_vfpfcnvrt+1,w
  3184  00C6  0085               	movwf	5
  3185  00C7  0012               	moviw fsr0++
  3186  00C8  3A64               	xorlw	100
  3187  00C9  1903               	btfsc	3,2
  3188  00CA  28CC               	goto	u1471
  3189  00CB  28CD               	goto	u1470
  3190  00CC                     u1471:
  3191  00CC  28DE               	goto	l1690
  3192  00CD                     u1470:
  3193  00CD                     l1688:
  3194  00CD  084E               	movf	vfpfcnvrt@fmt,w
  3195  00CE  0086               	movwf	6
  3196  00CF  0187               	clrf	7
  3197  00D0  3F40               	moviw [0]fsr1
  3198  00D1  00D0               	movwf	??_vfpfcnvrt
  3199  00D2  3F41               	moviw [1]fsr1
  3200  00D3  00D1               	movwf	??_vfpfcnvrt+1
  3201  00D4  0850               	movf	??_vfpfcnvrt,w
  3202  00D5  0084               	movwf	4
  3203  00D6  0851               	movf	??_vfpfcnvrt+1,w
  3204  00D7  0085               	movwf	5
  3205  00D8  0012               	moviw fsr0++
  3206  00D9  3A69               	xorlw	105
  3207  00DA  1D03               	btfss	3,2
  3208  00DB  28DD               	goto	u1481
  3209  00DC  28DE               	goto	u1480
  3210  00DD                     u1481:
  3211  00DD  2919               	goto	l1698
  3212  00DE                     u1480:
  3213  00DE                     l1690:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3216  00DE  084E               	movf	vfpfcnvrt@fmt,w
  3217  00DF  0086               	movwf	6
  3218  00E0  0187               	clrf	7
  3219  00E1  3001               	movlw	1
  3220  00E2  0781               	addwf	1,f
  3221  00E3  3141               	addfsr 1,1
  3222  00E4  1803               	skipnc
  3223  00E5  0A81               	incf	1,f
  3224  00E6                     l1692:
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3227  00E6  084F               	movf	vfpfcnvrt@ap,w
  3228  00E7  0086               	movwf	6
  3229  00E8  0187               	clrf	7
  3230  00E9  0801               	movf	1,w
  3231  00EA  0084               	movwf	4
  3232  00EB  0185               	clrf	5
  3233  00EC  3002               	movlw	2
  3234  00ED  0781               	addwf	1,f
  3235  00EE  3F00               	moviw [0]fsr0
  3236  00EF  00D0               	movwf	??_vfpfcnvrt
  3237  00F0  3F01               	moviw [1]fsr0
  3238  00F1  00D1               	movwf	??_vfpfcnvrt+1
  3239  00F2  0850               	movf	??_vfpfcnvrt,w
  3240  00F3  00D5               	movwf	vfpfcnvrt@ll
  3241  00F4  0851               	movf	??_vfpfcnvrt+1,w
  3242  00F5  00D6               	movwf	vfpfcnvrt@ll+1
  3243  00F6  0D89               	rlf	9,f
  3244  00F7  3B89               	subwfb	9,f
  3245  00F8  0989               	comf	9,f
  3246  00F9  00D7               	movwf	vfpfcnvrt@ll+2
  3247  00FA  00D8               	movwf	vfpfcnvrt@ll+3
  3248  00FB  00D9               	movwf	vfpfcnvrt@ll+4
  3249  00FC  00DA               	movwf	vfpfcnvrt@ll+5
  3250  00FD  00DB               	movwf	vfpfcnvrt@ll+6
  3251  00FE  00DC               	movwf	vfpfcnvrt@ll+7
  3252  00FF                     l1694:
  3253                           
  3254                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3255  00FF  0855               	movf	vfpfcnvrt@ll,w
  3256  0100  00B0               	movwf	dtoa@d
  3257  0101  0856               	movf	vfpfcnvrt@ll+1,w
  3258  0102  00B1               	movwf	dtoa@d+1
  3259  0103  0857               	movf	vfpfcnvrt@ll+2,w
  3260  0104  00B2               	movwf	dtoa@d+2
  3261  0105  0858               	movf	vfpfcnvrt@ll+3,w
  3262  0106  00B3               	movwf	dtoa@d+3
  3263  0107  0859               	movf	vfpfcnvrt@ll+4,w
  3264  0108  00B4               	movwf	dtoa@d+4
  3265  0109  085A               	movf	vfpfcnvrt@ll+5,w
  3266  010A  00B5               	movwf	dtoa@d+5
  3267  010B  085B               	movf	vfpfcnvrt@ll+6,w
  3268  010C  00B6               	movwf	dtoa@d+6
  3269  010D  085C               	movf	vfpfcnvrt@ll+7,w
  3270  010E  00B7               	movwf	dtoa@d+7
  3271  010F  085D               	movf	vfpfcnvrt@fp,w
  3272  0110  3183  235D  3180   	fcall	_dtoa
  3273  0113  0020               	movlb	0	; select bank0
  3274  0114  0831               	movf	?_dtoa+1,w
  3275  0115  00CF               	movwf	?_vfpfcnvrt+1
  3276  0116  0830               	movf	?_dtoa,w
  3277  0117  00CE               	movwf	?_vfpfcnvrt
  3278  0118  2971               	goto	l845
  3279  0119                     l1698:
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3282  0119  084E               	movf	vfpfcnvrt@fmt,w
  3283  011A  0086               	movwf	6
  3284  011B  0187               	clrf	7
  3285  011C  3F40               	moviw [0]fsr1
  3286  011D  00D0               	movwf	??_vfpfcnvrt
  3287  011E  3F41               	moviw [1]fsr1
  3288  011F  00D1               	movwf	??_vfpfcnvrt+1
  3289  0120  0850               	movf	??_vfpfcnvrt,w
  3290  0121  0084               	movwf	4
  3291  0122  0851               	movf	??_vfpfcnvrt+1,w
  3292  0123  0085               	movwf	5
  3293  0124  0012               	moviw fsr0++
  3294  0125  3A25               	xorlw	37
  3295  0126  1D03               	btfss	3,2
  3296  0127  2929               	goto	u1491
  3297  0128  292A               	goto	u1490
  3298  0129                     u1491:
  3299  0129  2943               	goto	l1708
  3300  012A                     u1490:
  3301  012A                     l1700:
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3304  012A  084E               	movf	vfpfcnvrt@fmt,w
  3305  012B  0086               	movwf	6
  3306  012C  0187               	clrf	7
  3307  012D  3001               	movlw	1
  3308  012E  0781               	addwf	1,f
  3309  012F  3141               	addfsr 1,1
  3310  0130  1803               	skipnc
  3311  0131  0A81               	incf	1,f
  3312  0132                     l1702:
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3315  0132  3025               	movlw	37
  3316  0133  00F0               	movwf	fputc@c
  3317  0134  3000               	movlw	0
  3318  0135  00F1               	movwf	fputc@c+1
  3319  0136  085D               	movf	vfpfcnvrt@fp,w
  3320  0137  00D0               	movwf	??_vfpfcnvrt
  3321  0138  0850               	movf	??_vfpfcnvrt,w
  3322  0139  00F2               	movwf	fputc@fp
  3323  013A  318F  27AE  3180   	fcall	_fputc
  3324  013D                     l1704:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3327  013D  3001               	movlw	1
  3328  013E  0020               	movlb	0	; select bank0
  3329  013F  00CE               	movwf	?_vfpfcnvrt
  3330  0140  3000               	movlw	0
  3331  0141  00CF               	movwf	?_vfpfcnvrt+1
  3332  0142  2971               	goto	l845
  3333  0143                     l1708:
  3334                           
  3335                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3336  0143  084E               	movf	vfpfcnvrt@fmt,w
  3337  0144  0086               	movwf	6
  3338  0145  0187               	clrf	7
  3339  0146  3001               	movlw	1
  3340  0147  0781               	addwf	1,f
  3341  0148  3141               	addfsr 1,1
  3342  0149  1803               	skipnc
  3343  014A  0A81               	incf	1,f
  3344  014B                     l1710:
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3347  014B  01CE               	clrf	?_vfpfcnvrt
  3348  014C  01CF               	clrf	?_vfpfcnvrt+1
  3349  014D  2971               	goto	l845
  3350  014E                     l1714:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3353  014E  084E               	movf	vfpfcnvrt@fmt,w
  3354  014F  0086               	movwf	6
  3355  0150  0187               	clrf	7
  3356  0151  3F40               	moviw [0]fsr1
  3357  0152  00D0               	movwf	??_vfpfcnvrt
  3358  0153  3F41               	moviw [1]fsr1
  3359  0154  00D1               	movwf	??_vfpfcnvrt+1
  3360  0155  0850               	movf	??_vfpfcnvrt,w
  3361  0156  0084               	movwf	4
  3362  0157  0851               	movf	??_vfpfcnvrt+1,w
  3363  0158  0085               	movwf	5
  3364  0159  0800               	movf	0,w	;code access
  3365  015A  00D2               	movwf	??_vfpfcnvrt+2
  3366  015B  01D3               	clrf	??_vfpfcnvrt+3
  3367  015C  0852               	movf	??_vfpfcnvrt+2,w
  3368  015D  00F0               	movwf	fputc@c
  3369  015E  0853               	movf	??_vfpfcnvrt+3,w
  3370  015F  00F1               	movwf	fputc@c+1
  3371  0160  085D               	movf	vfpfcnvrt@fp,w
  3372  0161  00D4               	movwf	??_vfpfcnvrt+4
  3373  0162  0854               	movf	??_vfpfcnvrt+4,w
  3374  0163  00F2               	movwf	fputc@fp
  3375  0164  318F  27AE  3180   	fcall	_fputc
  3376  0167                     l1716:
  3377                           
  3378                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3379  0167  0020               	movlb	0	; select bank0
  3380  0168  084E               	movf	vfpfcnvrt@fmt,w
  3381  0169  0086               	movwf	6
  3382  016A  0187               	clrf	7
  3383  016B  3001               	movlw	1
  3384  016C  0781               	addwf	1,f
  3385  016D  3141               	addfsr 1,1
  3386  016E  1803               	skipnc
  3387  016F  0A81               	incf	1,f
  3388  0170  293D               	goto	l1704
  3389  0171                     l845:
  3390  0171  0008               	return
  3391  0172                     __end_of_vfpfcnvrt:
  3392                           
  3393                           	psect	text7
  3394  035D                     __ptext7:	
  3395 ;; *************** function _dtoa *****************
  3396 ;; Defined at:
  3397 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  fp              1    wreg     PTR struct _IO_FILE
  3400 ;;		 -> sprintf@f(10), 
  3401 ;;  d               8   16[BANK0 ] long long 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3404 ;;		 -> sprintf@f(10), 
  3405 ;;  n               8   36[BANK0 ] long long 
  3406 ;;  i               2   44[BANK0 ] int 
  3407 ;;  s               2   34[BANK0 ] int 
  3408 ;;  w               2   32[BANK0 ] int 
  3409 ;;  p               2   30[BANK0 ] int 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  2   16[BANK0 ] int 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3419 ;;      Params:         0       8       0       0       0       0       0       0
  3420 ;;      Locals:         0      19       0       0       0       0       0       0
  3421 ;;      Temps:          0       3       0       0       0       0       0       0
  3422 ;;      Totals:         0      30       0       0       0       0       0       0
  3423 ;;Total ram usage:       30 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 4
  3426 ;; This function calls:
  3427 ;;		___aodiv
  3428 ;;		___aomod
  3429 ;;		_abs
  3430 ;;		_pad
  3431 ;; This function is called by:
  3432 ;;		_vfpfcnvrt
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436  035D                     _dtoa:	
  3437                           ;psect for function _dtoa
  3438                           
  3439                           
  3440                           ;incstack = 0
  3441                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3442                           ;dtoa@fp stored from wreg
  3443  035D  0020               	movlb	0	; select bank0
  3444  035E  00BD               	movwf	dtoa@fp
  3445  035F                     l1598:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3448  035F  0830               	movf	dtoa@d,w
  3449  0360  00C4               	movwf	dtoa@n
  3450  0361  0831               	movf	dtoa@d+1,w
  3451  0362  00C5               	movwf	dtoa@n+1
  3452  0363  0832               	movf	dtoa@d+2,w
  3453  0364  00C6               	movwf	dtoa@n+2
  3454  0365  0833               	movf	dtoa@d+3,w
  3455  0366  00C7               	movwf	dtoa@n+3
  3456  0367  0834               	movf	dtoa@d+4,w
  3457  0368  00C8               	movwf	dtoa@n+4
  3458  0369  0835               	movf	dtoa@d+5,w
  3459  036A  00C9               	movwf	dtoa@n+5
  3460  036B  0836               	movf	dtoa@d+6,w
  3461  036C  00CA               	movwf	dtoa@n+6
  3462  036D  0837               	movf	dtoa@d+7,w
  3463  036E  00CB               	movwf	dtoa@n+7
  3464  036F                     l1600:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3467  036F  3044               	movlw	low dtoa@n
  3468  0370  0086               	movwf	6
  3469  0371  3000               	movlw	high dtoa@n
  3470  0372  0087               	movwf	7
  3471  0373  3F47               	moviw [7]fsr1
  3472  0374  00B8               	movwf	??_dtoa
  3473  0375  1BB8               	btfsc	??_dtoa,7
  3474  0376  2B78               	goto	u1271
  3475  0377  2B7A               	goto	u1270
  3476  0378                     u1271:
  3477  0378  3001               	movlw	1
  3478  0379  2B7B               	goto	u1280
  3479  037A                     u1270:
  3480  037A  3000               	movlw	0
  3481  037B                     u1280:
  3482  037B  0020               	movlb	0	; select bank0
  3483  037C  00B9               	movwf	??_dtoa+1
  3484  037D  01BA               	clrf	??_dtoa+2
  3485  037E  0839               	movf	??_dtoa+1,w
  3486  037F  00C2               	movwf	dtoa@s
  3487  0380  083A               	movf	??_dtoa+2,w
  3488  0381  00C3               	movwf	dtoa@s+1
  3489  0382                     l1602:
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3492  0382  0842               	movf	dtoa@s,w
  3493  0383  0443               	iorwf	dtoa@s+1,w
  3494  0384  1903               	btfsc	3,2
  3495  0385  2B87               	goto	u1291
  3496  0386  2B88               	goto	u1290
  3497  0387                     u1291:
  3498  0387  2BA6               	goto	l815
  3499  0388                     u1290:
  3500  0388                     l1604:
  3501                           
  3502                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3503  0388  09C4               	comf	dtoa@n,f
  3504  0389  09C5               	comf	dtoa@n+1,f
  3505  038A  09C6               	comf	dtoa@n+2,f
  3506  038B  09C7               	comf	dtoa@n+3,f
  3507  038C  09C8               	comf	dtoa@n+4,f
  3508  038D  09C9               	comf	dtoa@n+5,f
  3509  038E  09CA               	comf	dtoa@n+6,f
  3510  038F  09CB               	comf	dtoa@n+7,f
  3511  0390  0AC4               	incf	dtoa@n,f
  3512  0391  1D03               	skipz
  3513  0392  2BA6               	goto	u130lld
  3514  0393  0AC5               	incf	dtoa@n+1,f
  3515  0394  1D03               	skipz
  3516  0395  2BA6               	goto	u130lld
  3517  0396  0AC6               	incf	dtoa@n+2,f
  3518  0397  1D03               	skipz
  3519  0398  2BA6               	goto	u130lld
  3520  0399  0AC7               	incf	dtoa@n+3,f
  3521  039A  1D03               	skipz
  3522  039B  2BA6               	goto	u130lld
  3523  039C  0AC8               	incf	dtoa@n+4,f
  3524  039D  1D03               	skipz
  3525  039E  2BA6               	goto	u130lld
  3526  039F  0AC9               	incf	dtoa@n+5,f
  3527  03A0  1D03               	skipz
  3528  03A1  2BA6               	goto	u130lld
  3529  03A2  0ACA               	incf	dtoa@n+6,f
  3530  03A3  1D03               	skipz
  3531  03A4  2BA6               	goto	u130lld
  3532  03A5  0ACB               	incf	dtoa@n+7,f
  3533  03A6                     u130lld:
  3534  03A6                     l815:	
  3535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 297:     }
  3536                           
  3537                           
  3538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3539  03A6  0020               	movlb	0	; select bank0
  3540  03A7  1BED               	btfsc	_prec+1,7
  3541  03A8  2BAA               	goto	u1311
  3542  03A9  2BAB               	goto	u1310
  3543  03AA                     u1311:
  3544  03AA  2BAF               	goto	l816
  3545  03AB                     u1310:
  3546  03AB                     l1606:
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3549  03AB  30FD               	movlw	253
  3550  03AC  05EE               	andwf	_flags,f
  3551  03AD  30FF               	movlw	255
  3552  03AE  05EF               	andwf	_flags+1,f
  3553  03AF                     l816:	
  3554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 302:     }
  3555                           
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3558  03AF  086D               	movf	_prec+1,w
  3559  03B0  3A80               	xorlw	128
  3560  03B1  00B8               	movwf	??_dtoa
  3561  03B2  3080               	movlw	128
  3562  03B3  0238               	subwf	??_dtoa,w
  3563  03B4  1D03               	skipz
  3564  03B5  2BB8               	goto	u1325
  3565  03B6  3001               	movlw	1
  3566  03B7  026C               	subwf	_prec,w
  3567  03B8                     u1325:
  3568  03B8  1803               	skipnc
  3569  03B9  2BBB               	goto	u1321
  3570  03BA  2BBC               	goto	u1320
  3571  03BB                     u1321:
  3572  03BB  2BC2               	goto	l1610
  3573  03BC                     u1320:
  3574  03BC                     l1608:
  3575  03BC  3001               	movlw	1
  3576  03BD  0020               	movlb	0	; select bank0
  3577  03BE  00BE               	movwf	dtoa@p
  3578  03BF  3000               	movlw	0
  3579  03C0  00BF               	movwf	dtoa@p+1
  3580  03C1  2BC7               	goto	l820
  3581  03C2                     l1610:
  3582  03C2  0020               	movlb	0	; select bank0
  3583  03C3  086D               	movf	_prec+1,w
  3584  03C4  00BF               	movwf	dtoa@p+1
  3585  03C5  086C               	movf	_prec,w
  3586  03C6  00BE               	movwf	dtoa@p
  3587  03C7                     l820:
  3588                           
  3589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3590  03C7  0021               	movlb	1	; select bank1
  3591  03C8  0823               	movf	(_width+1)^(0+128),w
  3592  03C9  0020               	movlb	0	; select bank0
  3593  03CA  00C1               	movwf	dtoa@w+1
  3594  03CB  0021               	movlb	1	; select bank1
  3595  03CC  0822               	movf	_width^(0+128),w
  3596  03CD  0020               	movlb	0	; select bank0
  3597  03CE  00C0               	movwf	dtoa@w
  3598  03CF                     l1612:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3601  03CF  0842               	movf	dtoa@s,w
  3602  03D0  0443               	iorwf	dtoa@s+1,w
  3603  03D1  1D03               	btfss	3,2
  3604  03D2  2BD4               	goto	u1331
  3605  03D3  2BD5               	goto	u1330
  3606  03D4                     u1331:
  3607  03D4  2BD9               	goto	l1616
  3608  03D5                     u1330:
  3609  03D5                     l1614:
  3610  03D5  1D6E               	btfss	_flags,2
  3611  03D6  2BD8               	goto	u1341
  3612  03D7  2BD9               	goto	u1340
  3613  03D8                     u1341:
  3614  03D8  2BDD               	goto	l821
  3615  03D9                     u1340:
  3616  03D9                     l1616:
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  3619  03D9  30FF               	movlw	255
  3620  03DA  07C0               	addwf	dtoa@w,f
  3621  03DB  30FF               	movlw	255
  3622  03DC  3DC1               	addwfc	dtoa@w+1,f
  3623  03DD                     l821:	
  3624                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 307:     }
  3625                           
  3626                           
  3627                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3628  03DD  301F               	movlw	31
  3629  03DE  00CC               	movwf	dtoa@i
  3630  03DF  3000               	movlw	0
  3631  03E0  00CD               	movwf	dtoa@i+1
  3632  03E1                     l1618:
  3633                           
  3634                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3635  03E1  0021               	movlb	1	; select bank1
  3636  03E2  01C4               	clrf	(_dbuf^(0+128)+31)
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3639  03E3  2C4C               	goto	l824
  3640  03E4                     l1620:
  3641                           
  3642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  3643  03E4  30FF               	movlw	255
  3644  03E5  0020               	movlb	0	; select bank0
  3645  03E6  07CC               	addwf	dtoa@i,f
  3646  03E7  30FF               	movlw	255
  3647  03E8  3DCD               	addwfc	dtoa@i+1,f
  3648  03E9                     l1622:
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3651  03E9  300A               	movlw	10
  3652  03EA  00A0               	movwf	___aomod@divisor
  3653  03EB  01A1               	clrf	___aomod@divisor+1
  3654  03EC  01A2               	clrf	___aomod@divisor+2
  3655  03ED  01A3               	clrf	___aomod@divisor+3
  3656  03EE  01A4               	clrf	___aomod@divisor+4
  3657  03EF  01A5               	clrf	___aomod@divisor+5
  3658  03F0  01A6               	clrf	___aomod@divisor+6
  3659  03F1  01A7               	clrf	___aomod@divisor+7
  3660  03F2  0844               	movf	dtoa@n,w
  3661  03F3  00A8               	movwf	___aomod@dividend
  3662  03F4  0845               	movf	dtoa@n+1,w
  3663  03F5  00A9               	movwf	___aomod@dividend+1
  3664  03F6  0846               	movf	dtoa@n+2,w
  3665  03F7  00AA               	movwf	___aomod@dividend+2
  3666  03F8  0847               	movf	dtoa@n+3,w
  3667  03F9  00AB               	movwf	___aomod@dividend+3
  3668  03FA  0848               	movf	dtoa@n+4,w
  3669  03FB  00AC               	movwf	___aomod@dividend+4
  3670  03FC  0849               	movf	dtoa@n+5,w
  3671  03FD  00AD               	movwf	___aomod@dividend+5
  3672  03FE  084A               	movf	dtoa@n+6,w
  3673  03FF  00AE               	movwf	___aomod@dividend+6
  3674  0400  084B               	movf	dtoa@n+7,w
  3675  0401  00AF               	movwf	___aomod@dividend+7
  3676  0402  3181  2172  3183   	fcall	___aomod
  3677  0405  0020               	movlb	0	; select bank0
  3678  0406  0821               	movf	?___aomod+1,w
  3679  0407  00F4               	movwf	abs@a+1
  3680  0408  0820               	movf	?___aomod,w
  3681  0409  00F3               	movwf	abs@a
  3682  040A  318E  26F5  3183   	fcall	_abs
  3683  040D  0873               	movf	?_abs,w
  3684  040E  3E30               	addlw	48
  3685  040F  0020               	movlb	0	; select bank0
  3686  0410  00B8               	movwf	??_dtoa
  3687  0411  084C               	movf	dtoa@i,w
  3688  0412  3EA5               	addlw	(low (_dbuf| 0))& (0+255)
  3689  0413  0086               	movwf	6
  3690  0414  0187               	clrf	7
  3691  0415  0838               	movf	??_dtoa,w
  3692  0416  0081               	movwf	1
  3693  0417                     l1624:
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  3696  0417  30FF               	movlw	255
  3697  0418  07BE               	addwf	dtoa@p,f
  3698  0419  30FF               	movlw	255
  3699  041A  3DBF               	addwfc	dtoa@p+1,f
  3700  041B                     l1626:
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  3703  041B  30FF               	movlw	255
  3704  041C  07C0               	addwf	dtoa@w,f
  3705  041D  30FF               	movlw	255
  3706  041E  3DC1               	addwfc	dtoa@w+1,f
  3707  041F                     l1628:
  3708                           
  3709                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3710  041F  300A               	movlw	10
  3711  0420  00A0               	movwf	___aodiv@divisor
  3712  0421  01A1               	clrf	___aodiv@divisor+1
  3713  0422  01A2               	clrf	___aodiv@divisor+2
  3714  0423  01A3               	clrf	___aodiv@divisor+3
  3715  0424  01A4               	clrf	___aodiv@divisor+4
  3716  0425  01A5               	clrf	___aodiv@divisor+5
  3717  0426  01A6               	clrf	___aodiv@divisor+6
  3718  0427  01A7               	clrf	___aodiv@divisor+7
  3719  0428  0844               	movf	dtoa@n,w
  3720  0429  00A8               	movwf	___aodiv@dividend
  3721  042A  0845               	movf	dtoa@n+1,w
  3722  042B  00A9               	movwf	___aodiv@dividend+1
  3723  042C  0846               	movf	dtoa@n+2,w
  3724  042D  00AA               	movwf	___aodiv@dividend+2
  3725  042E  0847               	movf	dtoa@n+3,w
  3726  042F  00AB               	movwf	___aodiv@dividend+3
  3727  0430  0848               	movf	dtoa@n+4,w
  3728  0431  00AC               	movwf	___aodiv@dividend+4
  3729  0432  0849               	movf	dtoa@n+5,w
  3730  0433  00AD               	movwf	___aodiv@dividend+5
  3731  0434  084A               	movf	dtoa@n+6,w
  3732  0435  00AE               	movwf	___aodiv@dividend+6
  3733  0436  084B               	movf	dtoa@n+7,w
  3734  0437  00AF               	movwf	___aodiv@dividend+7
  3735  0438  3182  225C  3183   	fcall	___aodiv
  3736  043B  0020               	movlb	0	; select bank0
  3737  043C  0820               	movf	?___aodiv,w
  3738  043D  00C4               	movwf	dtoa@n
  3739  043E  0821               	movf	?___aodiv+1,w
  3740  043F  00C5               	movwf	dtoa@n+1
  3741  0440  0822               	movf	?___aodiv+2,w
  3742  0441  00C6               	movwf	dtoa@n+2
  3743  0442  0823               	movf	?___aodiv+3,w
  3744  0443  00C7               	movwf	dtoa@n+3
  3745  0444  0824               	movf	?___aodiv+4,w
  3746  0445  00C8               	movwf	dtoa@n+4
  3747  0446  0825               	movf	?___aodiv+5,w
  3748  0447  00C9               	movwf	dtoa@n+5
  3749  0448  0826               	movf	?___aodiv+6,w
  3750  0449  00CA               	movwf	dtoa@n+6
  3751  044A  0827               	movf	?___aodiv+7,w
  3752  044B  00CB               	movwf	dtoa@n+7
  3753  044C                     l824:	
  3754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 318:     }
  3755                           
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3758  044C  0020               	movlb	0	; select bank0
  3759  044D  084D               	movf	dtoa@i+1,w
  3760  044E  3A80               	xorlw	128
  3761  044F  00B8               	movwf	??_dtoa
  3762  0450  3080               	movlw	128
  3763  0451  0238               	subwf	??_dtoa,w
  3764  0452  1D03               	skipz
  3765  0453  2C56               	goto	u1355
  3766  0454  3001               	movlw	1
  3767  0455  024C               	subwf	dtoa@i,w
  3768  0456                     u1355:
  3769  0456  1C03               	skipc
  3770  0457  2C59               	goto	u1351
  3771  0458  2C5A               	goto	u1350
  3772  0459                     u1351:
  3773  0459  2C87               	goto	l1638
  3774  045A                     u1350:
  3775  045A                     l1630:
  3776  045A  0020               	movlb	0	; select bank0
  3777  045B  0844               	movf	dtoa@n,w
  3778  045C  0445               	iorwf	dtoa@n+1,w
  3779  045D  0446               	iorwf	dtoa@n+2,w
  3780  045E  0447               	iorwf	dtoa@n+3,w
  3781  045F  0448               	iorwf	dtoa@n+4,w
  3782  0460  0449               	iorwf	dtoa@n+5,w
  3783  0461  044A               	iorwf	dtoa@n+6,w
  3784  0462  044B               	iorwf	dtoa@n+7,w
  3785  0463  1D03               	skipz
  3786  0464  2C66               	goto	u1361
  3787  0465  2C67               	goto	u1360
  3788  0466                     u1361:
  3789  0466  2BE4               	goto	l1620
  3790  0467                     u1360:
  3791  0467                     l1632:
  3792  0467  083F               	movf	dtoa@p+1,w
  3793  0468  3A80               	xorlw	128
  3794  0469  00B8               	movwf	??_dtoa
  3795  046A  3080               	movlw	128
  3796  046B  0238               	subwf	??_dtoa,w
  3797  046C  1D03               	skipz
  3798  046D  2C70               	goto	u1375
  3799  046E  3001               	movlw	1
  3800  046F  023E               	subwf	dtoa@p,w
  3801  0470                     u1375:
  3802  0470  1803               	skipnc
  3803  0471  2C73               	goto	u1371
  3804  0472  2C74               	goto	u1370
  3805  0473                     u1371:
  3806  0473  2BE4               	goto	l1620
  3807  0474                     u1370:
  3808  0474                     l1634:
  3809  0474  0020               	movlb	0	; select bank0
  3810  0475  0841               	movf	dtoa@w+1,w
  3811  0476  3A80               	xorlw	128
  3812  0477  00B8               	movwf	??_dtoa
  3813  0478  3080               	movlw	128
  3814  0479  0238               	subwf	??_dtoa,w
  3815  047A  1D03               	skipz
  3816  047B  2C7E               	goto	u1385
  3817  047C  3001               	movlw	1
  3818  047D  0240               	subwf	dtoa@w,w
  3819  047E                     u1385:
  3820  047E  1C03               	skipc
  3821  047F  2C81               	goto	u1381
  3822  0480  2C82               	goto	u1380
  3823  0481                     u1381:
  3824  0481  2C87               	goto	l1638
  3825  0482                     u1380:
  3826  0482                     l1636:
  3827  0482  0020               	movlb	0	; select bank0
  3828  0483  18EE               	btfsc	_flags,1
  3829  0484  2C86               	goto	u1391
  3830  0485  2C87               	goto	u1390
  3831  0486                     u1391:
  3832  0486  2BE4               	goto	l1620
  3833  0487                     u1390:
  3834  0487                     l1638:
  3835                           
  3836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3837  0487  0020               	movlb	0	; select bank0
  3838  0488  0842               	movf	dtoa@s,w
  3839  0489  0443               	iorwf	dtoa@s+1,w
  3840  048A  1D03               	btfss	3,2
  3841  048B  2C8D               	goto	u1401
  3842  048C  2C8E               	goto	u1400
  3843  048D                     u1401:
  3844  048D  2C92               	goto	l1642
  3845  048E                     u1400:
  3846  048E                     l1640:
  3847  048E  1D6E               	btfss	_flags,2
  3848  048F  2C91               	goto	u1411
  3849  0490  2C92               	goto	u1410
  3850  0491                     u1411:
  3851  0491  2CAD               	goto	l1652
  3852  0492                     u1410:
  3853  0492                     l1642:
  3854                           
  3855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  3856  0492  30FF               	movlw	255
  3857  0493  07CC               	addwf	dtoa@i,f
  3858  0494  30FF               	movlw	255
  3859  0495  3DCD               	addwfc	dtoa@i+1,f
  3860  0496                     l1644:
  3861                           
  3862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3863  0496  0842               	movf	dtoa@s,w
  3864  0497  0443               	iorwf	dtoa@s+1,w
  3865  0498  1D03               	btfss	3,2
  3866  0499  2C9B               	goto	u1421
  3867  049A  2C9C               	goto	u1420
  3868  049B                     u1421:
  3869  049B  2CA1               	goto	l1648
  3870  049C                     u1420:
  3871  049C                     l1646:
  3872  049C  302B               	movlw	43
  3873  049D  00BB               	movwf	_dtoa$729
  3874  049E  3000               	movlw	0
  3875  049F  00BC               	movwf	_dtoa$729+1
  3876  04A0  2CA5               	goto	l1650
  3877  04A1                     l1648:
  3878  04A1  302D               	movlw	45
  3879  04A2  00BB               	movwf	_dtoa$729
  3880  04A3  3000               	movlw	0
  3881  04A4  00BC               	movwf	_dtoa$729+1
  3882  04A5                     l1650:
  3883  04A5  083B               	movf	_dtoa$729,w
  3884  04A6  00B8               	movwf	??_dtoa
  3885  04A7  084C               	movf	dtoa@i,w
  3886  04A8  3EA5               	addlw	(low (_dbuf| 0))& (0+255)
  3887  04A9  0086               	movwf	6
  3888  04AA  0187               	clrf	7
  3889  04AB  0838               	movf	??_dtoa,w
  3890  04AC  0081               	movwf	1
  3891  04AD                     l1652:
  3892                           
  3893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3894  04AD  084C               	movf	dtoa@i,w
  3895  04AE  3EA5               	addlw	(low (_dbuf| 0))& (0+255)
  3896  04AF  00B8               	movwf	??_dtoa
  3897  04B0  0838               	movf	??_dtoa,w
  3898  04B1  00A4               	movwf	pad@buf
  3899  04B2  0841               	movf	dtoa@w+1,w
  3900  04B3  00A6               	movwf	pad@p+1
  3901  04B4  0840               	movf	dtoa@w,w
  3902  04B5  00A5               	movwf	pad@p
  3903  04B6  083D               	movf	dtoa@fp,w
  3904  04B7  3180  2041  3183   	fcall	_pad
  3905  04BA  0020               	movlb	0	; select bank0
  3906  04BB  0825               	movf	?_pad+1,w
  3907  04BC  00B1               	movwf	?_dtoa+1
  3908  04BD  0824               	movf	?_pad,w
  3909  04BE  00B0               	movwf	?_dtoa
  3910  04BF                     l838:
  3911  04BF  0008               	return
  3912  04C0                     __end_of_dtoa:
  3913                           
  3914                           	psect	text8
  3915  0041                     __ptext8:	
  3916 ;; *************** function _pad *****************
  3917 ;; Defined at:
  3918 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  fp              1    wreg     PTR struct _IO_FILE
  3921 ;;		 -> sprintf@f(10), 
  3922 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  3923 ;;		 -> dbuf(32), 
  3924 ;;  p               2    5[BANK0 ] int 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  3927 ;;		 -> sprintf@f(10), 
  3928 ;;  w               2    9[BANK0 ] int 
  3929 ;;  i               2    7[BANK0 ] int 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  2    4[BANK0 ] int 
  3932 ;; Registers used:
  3933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3939 ;;      Params:         0       3       0       0       0       0       0       0
  3940 ;;      Locals:         0       5       0       0       0       0       0       0
  3941 ;;      Temps:          1       0       0       0       0       0       0       0
  3942 ;;      Totals:         1       8       0       0       0       0       0       0
  3943 ;;Total ram usage:        9 bytes
  3944 ;; Hardware stack levels used: 1
  3945 ;; Hardware stack levels required when called: 3
  3946 ;; This function calls:
  3947 ;;		_fputc
  3948 ;;		_fputs
  3949 ;;		_strlen
  3950 ;; This function is called by:
  3951 ;;		_dtoa
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955  0041                     _pad:	
  3956                           ;psect for function _pad
  3957                           
  3958                           
  3959                           ;incstack = 0
  3960                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3961                           ;pad@fp stored from wreg
  3962  0041  0020               	movlb	0	; select bank0
  3963  0042  00AB               	movwf	pad@fp
  3964  0043                     l1572:
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3967  0043  1C6E               	btfss	_flags,0
  3968  0044  2846               	goto	u1221
  3969  0045  2847               	goto	u1220
  3970  0046                     u1221:
  3971  0046  284F               	goto	l1576
  3972  0047                     u1220:
  3973  0047                     l1574:
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3976  0047  082B               	movf	pad@fp,w
  3977  0048  00FC               	movwf	??_pad
  3978  0049  087C               	movf	??_pad,w
  3979  004A  00F8               	movwf	fputs@fp
  3980  004B  0824               	movf	pad@buf,w
  3981  004C  318F  2755  3180   	fcall	_fputs
  3982  004F                     l1576:
  3983                           
  3984                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3985  004F  0020               	movlb	0	; select bank0
  3986  0050  1BA6               	btfsc	pad@p+1,7
  3987  0051  2853               	goto	u1231
  3988  0052  2854               	goto	u1230
  3989  0053                     u1231:
  3990  0053  2859               	goto	l1580
  3991  0054                     u1230:
  3992  0054                     l1578:
  3993  0054  0826               	movf	pad@p+1,w
  3994  0055  00AA               	movwf	pad@w+1
  3995  0056  0825               	movf	pad@p,w
  3996  0057  00A9               	movwf	pad@w
  3997  0058  285B               	goto	l807
  3998  0059                     l1580:
  3999  0059  01A9               	clrf	pad@w
  4000  005A  01AA               	clrf	pad@w+1
  4001  005B                     l807:
  4002                           
  4003                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4004  005B  01A7               	clrf	pad@i
  4005  005C  01A8               	clrf	pad@i+1
  4006                           
  4007                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4008  005D  286F               	goto	l1586
  4009  005E                     l1582:
  4010                           
  4011                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4012  005E  3020               	movlw	32
  4013  005F  00F0               	movwf	fputc@c
  4014  0060  3000               	movlw	0
  4015  0061  00F1               	movwf	fputc@c+1
  4016  0062  0020               	movlb	0	; select bank0
  4017  0063  082B               	movf	pad@fp,w
  4018  0064  00FC               	movwf	??_pad
  4019  0065  087C               	movf	??_pad,w
  4020  0066  00F2               	movwf	fputc@fp
  4021  0067  318F  27AE  3180   	fcall	_fputc
  4022  006A                     l1584:
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4025  006A  3001               	movlw	1
  4026  006B  0020               	movlb	0	; select bank0
  4027  006C  07A7               	addwf	pad@i,f
  4028  006D  3000               	movlw	0
  4029  006E  3DA8               	addwfc	pad@i+1,f
  4030  006F                     l1586:
  4031                           
  4032                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4033  006F  0828               	movf	pad@i+1,w
  4034  0070  3A80               	xorlw	128
  4035  0071  00FC               	movwf	??_pad
  4036  0072  082A               	movf	pad@w+1,w
  4037  0073  3A80               	xorlw	128
  4038  0074  027C               	subwf	??_pad,w
  4039  0075  1D03               	skipz
  4040  0076  2879               	goto	u1245
  4041  0077  0829               	movf	pad@w,w
  4042  0078  0227               	subwf	pad@i,w
  4043  0079                     u1245:
  4044  0079  1C03               	skipc
  4045  007A  287C               	goto	u1241
  4046  007B  287D               	goto	u1240
  4047  007C                     u1241:
  4048  007C  285E               	goto	l1582
  4049  007D                     u1240:
  4050  007D                     l810:
  4051                           
  4052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4053  007D  0020               	movlb	0	; select bank0
  4054  007E  186E               	btfsc	_flags,0
  4055  007F  2881               	goto	u1251
  4056  0080  2882               	goto	u1250
  4057  0081                     u1251:
  4058  0081  288A               	goto	l1590
  4059  0082                     u1250:
  4060  0082                     l1588:
  4061                           
  4062                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4063  0082  082B               	movf	pad@fp,w
  4064  0083  00FC               	movwf	??_pad
  4065  0084  087C               	movf	??_pad,w
  4066  0085  00F8               	movwf	fputs@fp
  4067  0086  0824               	movf	pad@buf,w
  4068  0087  318F  2755  3180   	fcall	_fputs
  4069  008A                     l1590:
  4070                           
  4071                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4072  008A  0020               	movlb	0	; select bank0
  4073  008B  0824               	movf	pad@buf,w
  4074  008C  318E  26C2  3180   	fcall	_strlen
  4075  008F  0020               	movlb	0	; select bank0
  4076  0090  0829               	movf	pad@w,w
  4077  0091  0770               	addwf	?_strlen,w
  4078  0092  00A4               	movwf	?_pad
  4079  0093  082A               	movf	pad@w+1,w
  4080  0094  3D71               	addwfc	?_strlen+1,w
  4081  0095  00A5               	movwf	?_pad+1
  4082  0096                     l812:
  4083  0096  0008               	return
  4084  0097                     __end_of_pad:
  4085                           
  4086                           	psect	text9
  4087  0EC2                     __ptext9:	
  4088 ;; *************** function _strlen *****************
  4089 ;; Defined at:
  4090 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  s               1    wreg     PTR const unsigned char 
  4093 ;;		 -> dbuf(32), 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  s               1    4[COMMON] PTR const unsigned char 
  4096 ;;		 -> dbuf(32), 
  4097 ;;  a               1    3[COMMON] PTR const unsigned char 
  4098 ;;		 -> dbuf(32), 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  2    0[COMMON] unsigned int 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4108 ;;      Params:         2       0       0       0       0       0       0       0
  4109 ;;      Locals:         2       0       0       0       0       0       0       0
  4110 ;;      Temps:          1       0       0       0       0       0       0       0
  4111 ;;      Totals:         5       0       0       0       0       0       0       0
  4112 ;;Total ram usage:        5 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_pad
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121  0EC2                     _strlen:	
  4122                           ;psect for function _strlen
  4123                           
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4127                           ;strlen@s stored from wreg
  4128  0EC2  00F4               	movwf	strlen@s
  4129  0EC3                     l1494:
  4130  0EC3  0874               	movf	strlen@s,w
  4131  0EC4  00F2               	movwf	??_strlen
  4132  0EC5  0872               	movf	??_strlen,w
  4133  0EC6  00F3               	movwf	strlen@a
  4134  0EC7  2ECC               	goto	l1498
  4135  0EC8                     l1496:
  4136  0EC8  3001               	movlw	1
  4137  0EC9  00F2               	movwf	??_strlen
  4138  0ECA  0872               	movf	??_strlen,w
  4139  0ECB  07F4               	addwf	strlen@s,f
  4140  0ECC                     l1498:
  4141  0ECC  0874               	movf	strlen@s,w
  4142  0ECD  0086               	movwf	6
  4143  0ECE  0187               	clrf	7
  4144  0ECF  0801               	movf	1,w
  4145  0ED0  1D03               	btfss	3,2
  4146  0ED1  2ED3               	goto	u1001
  4147  0ED2  2ED4               	goto	u1000
  4148  0ED3                     u1001:
  4149  0ED3  2EC8               	goto	l1496
  4150  0ED4                     u1000:
  4151  0ED4                     l1500:
  4152  0ED4  0873               	movf	strlen@a,w
  4153  0ED5  0274               	subwf	strlen@s,w
  4154  0ED6  00F0               	movwf	?_strlen
  4155  0ED7  01F1               	clrf	?_strlen+1
  4156  0ED8  1BF0               	btfsc	?_strlen,7
  4157  0ED9  03F1               	decf	?_strlen+1,f
  4158  0EDA                     l888:
  4159  0EDA  0008               	return
  4160  0EDB                     __end_of_strlen:
  4161                           
  4162                           	psect	text10
  4163  0F55                     __ptext10:	
  4164 ;; *************** function _fputs *****************
  4165 ;; Defined at:
  4166 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  s               1    wreg     PTR const unsigned char 
  4169 ;;		 -> dbuf(32), 
  4170 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4171 ;;		 -> sprintf@f(10), 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4174 ;;		 -> dbuf(32), 
  4175 ;;  i               2    1[BANK0 ] int 
  4176 ;;  c               1    0[BANK0 ] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  2    8[COMMON] int 
  4179 ;; Registers used:
  4180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4186 ;;      Params:         1       0       0       0       0       0       0       0
  4187 ;;      Locals:         0       4       0       0       0       0       0       0
  4188 ;;      Temps:          3       0       0       0       0       0       0       0
  4189 ;;      Totals:         4       4       0       0       0       0       0       0
  4190 ;;Total ram usage:        8 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; Hardware stack levels required when called: 2
  4193 ;; This function calls:
  4194 ;;		_fputc
  4195 ;; This function is called by:
  4196 ;;		_pad
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200  0F55                     _fputs:	
  4201                           ;psect for function _fputs
  4202                           
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4206                           ;fputs@s stored from wreg
  4207  0F55  0020               	movlb	0	; select bank0
  4208  0F56  00A3               	movwf	fputs@s
  4209  0F57                     l1486:
  4210  0F57  01A1               	clrf	fputs@i
  4211  0F58  01A2               	clrf	fputs@i+1
  4212  0F59  2F6D               	goto	l1492
  4213  0F5A                     l1488:
  4214  0F5A  0820               	movf	fputs@c,w
  4215  0F5B  00F9               	movwf	??_fputs
  4216  0F5C  01FA               	clrf	??_fputs+1
  4217  0F5D  0879               	movf	??_fputs,w
  4218  0F5E  00F0               	movwf	fputc@c
  4219  0F5F  087A               	movf	??_fputs+1,w
  4220  0F60  00F1               	movwf	fputc@c+1
  4221  0F61  0878               	movf	fputs@fp,w
  4222  0F62  00FB               	movwf	??_fputs+2
  4223  0F63  087B               	movf	??_fputs+2,w
  4224  0F64  00F2               	movwf	fputc@fp
  4225  0F65  318F  27AE  318F   	fcall	_fputc
  4226  0F68                     l1490:
  4227  0F68  3001               	movlw	1
  4228  0F69  0020               	movlb	0	; select bank0
  4229  0F6A  07A1               	addwf	fputs@i,f
  4230  0F6B  3000               	movlw	0
  4231  0F6C  3DA2               	addwfc	fputs@i+1,f
  4232  0F6D                     l1492:
  4233  0F6D  0821               	movf	fputs@i,w
  4234  0F6E  0723               	addwf	fputs@s,w
  4235  0F6F  00F9               	movwf	??_fputs
  4236  0F70  0879               	movf	??_fputs,w
  4237  0F71  0086               	movwf	6
  4238  0F72  0187               	clrf	7
  4239  0F73  0801               	movf	1,w
  4240  0F74  00FA               	movwf	??_fputs+1
  4241  0F75  087A               	movf	??_fputs+1,w
  4242  0F76  00A0               	movwf	fputs@c
  4243  0F77  0820               	movf	fputs@c,w
  4244  0F78  1D03               	btfss	3,2
  4245  0F79  2F7B               	goto	u991
  4246  0F7A  2F7C               	goto	u990
  4247  0F7B                     u991:
  4248  0F7B  2F5A               	goto	l1488
  4249  0F7C                     u990:
  4250  0F7C                     l879:
  4251  0F7C  0008               	return
  4252  0F7D                     __end_of_fputs:
  4253                           
  4254                           	psect	text11
  4255  0FAE                     __ptext11:	
  4256 ;; *************** function _fputc *****************
  4257 ;; Defined at:
  4258 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  c               2    0[COMMON] int 
  4261 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4262 ;;		 -> sprintf@f(10), 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  2    0[COMMON] int 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4274 ;;      Params:         3       0       0       0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0
  4276 ;;      Temps:          5       0       0       0       0       0       0       0
  4277 ;;      Totals:         8       0       0       0       0       0       0       0
  4278 ;;Total ram usage:        8 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 1
  4281 ;; This function calls:
  4282 ;;		_putch
  4283 ;; This function is called by:
  4284 ;;		_pad
  4285 ;;		_vfpfcnvrt
  4286 ;;		_fputs
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290  0FAE                     _fputc:	
  4291                           ;psect for function _fputc
  4292                           
  4293  0FAE                     l1470:	
  4294                           ;incstack = 0
  4295                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4296                           
  4297  0FAE  0872               	movf	fputc@fp,w
  4298  0FAF  1903               	btfsc	3,2
  4299  0FB0  2FB2               	goto	u951
  4300  0FB1  2FB3               	goto	u950
  4301  0FB2                     u951:
  4302  0FB2  2FB8               	goto	l1474
  4303  0FB3                     u950:
  4304  0FB3                     l1472:
  4305  0FB3  0872               	movf	fputc@fp,w
  4306  0FB4  1D03               	btfss	3,2
  4307  0FB5  2FB7               	goto	u961
  4308  0FB6  2FB8               	goto	u960
  4309  0FB7                     u961:
  4310  0FB7  2FBD               	goto	l1476
  4311  0FB8                     u960:
  4312  0FB8                     l1474:
  4313  0FB8  0870               	movf	fputc@c,w
  4314  0FB9  3180  2004  318F   	fcall	_putch
  4315  0FBC  2FFF               	goto	l871
  4316  0FBD                     l1476:
  4317  0FBD  0872               	movf	fputc@fp,w
  4318  0FBE  3E08               	addlw	8
  4319  0FBF  0086               	movwf	6
  4320  0FC0  0187               	clrf	7
  4321  0FC1  0016               	moviw fsr1++
  4322  0FC2  0401               	iorwf	1,w
  4323  0FC3  1903               	btfsc	3,2
  4324  0FC4  2FC6               	goto	u971
  4325  0FC5  2FC7               	goto	u970
  4326  0FC6                     u971:
  4327  0FC6  2FE5               	goto	l1480
  4328  0FC7                     u970:
  4329  0FC7                     l1478:
  4330  0FC7  0872               	movf	fputc@fp,w
  4331  0FC8  3E08               	addlw	8
  4332  0FC9  0086               	movwf	6
  4333  0FCA  0187               	clrf	7
  4334  0FCB  3F40               	moviw [0]fsr1
  4335  0FCC  00F3               	movwf	??_fputc
  4336  0FCD  3F41               	moviw [1]fsr1
  4337  0FCE  00F4               	movwf	??_fputc+1
  4338  0FCF  0872               	movf	fputc@fp,w
  4339  0FD0  3E02               	addlw	2
  4340  0FD1  0086               	movwf	6
  4341  0FD2  0187               	clrf	7
  4342  0FD3  3F40               	moviw [0]fsr1
  4343  0FD4  00F5               	movwf	??_fputc+2
  4344  0FD5  3F41               	moviw [1]fsr1
  4345  0FD6  00F6               	movwf	??_fputc+3
  4346  0FD7  0876               	movf	??_fputc+3,w
  4347  0FD8  3A80               	xorlw	128
  4348  0FD9  00F7               	movwf	??_fputc+4
  4349  0FDA  0874               	movf	??_fputc+1,w
  4350  0FDB  3A80               	xorlw	128
  4351  0FDC  0277               	subwf	??_fputc+4,w
  4352  0FDD  1D03               	skipz
  4353  0FDE  2FE1               	goto	u985
  4354  0FDF  0873               	movf	??_fputc,w
  4355  0FE0  0275               	subwf	??_fputc+2,w
  4356  0FE1                     u985:
  4357  0FE1  1803               	skipnc
  4358  0FE2  2FE4               	goto	u981
  4359  0FE3  2FE5               	goto	u980
  4360  0FE4                     u981:
  4361  0FE4  2FFF               	goto	l871
  4362  0FE5                     u980:
  4363  0FE5                     l1480:
  4364  0FE5  0870               	movf	fputc@c,w
  4365  0FE6  00F3               	movwf	??_fputc
  4366  0FE7  0872               	movf	fputc@fp,w
  4367  0FE8  0086               	movwf	6
  4368  0FE9  0187               	clrf	7
  4369  0FEA  0872               	movf	fputc@fp,w
  4370  0FEB  3E02               	addlw	2
  4371  0FEC  0084               	movwf	4
  4372  0FED  0185               	clrf	5
  4373  0FEE  0800               	movf	0,w
  4374  0FEF  0701               	addwf	1,w
  4375  0FF0  00F4               	movwf	??_fputc+1
  4376  0FF1  0874               	movf	??_fputc+1,w
  4377  0FF2  0086               	movwf	6
  4378  0FF3  0187               	clrf	7
  4379  0FF4  0873               	movf	??_fputc,w
  4380  0FF5  0081               	movwf	1
  4381  0FF6                     l1482:
  4382  0FF6  0872               	movf	fputc@fp,w
  4383  0FF7  3E02               	addlw	2
  4384  0FF8  0086               	movwf	6
  4385  0FF9  0187               	clrf	7
  4386  0FFA  3001               	movlw	1
  4387  0FFB  0781               	addwf	1,f
  4388  0FFC  3141               	addfsr 1,1
  4389  0FFD  1803               	skipnc
  4390  0FFE  0A81               	incf	1,f
  4391  0FFF                     l871:
  4392  0FFF  0008               	return
  4393  1000                     __end_of_fputc:
  4394                           
  4395                           	psect	text12
  4396  0004                     __ptext12:	
  4397 ;; *************** function _putch *****************
  4398 ;; Defined at:
  4399 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  c               1    wreg     unsigned char 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  c               1    0[COMMON] unsigned char 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4413 ;;      Params:         0       0       0       0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0
  4416 ;;      Totals:         0       0       0       0       0       0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_fputc
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426  0004                     _putch:	
  4427                           ;psect for function _putch
  4428                           
  4429  0004                     l882:	
  4430                           ;incstack = 0
  4431                           ; Regs used in _putch: [wreg]
  4432                           
  4433  0004  0008               	return
  4434  0005                     __end_of_putch:
  4435                           
  4436                           	psect	text13
  4437  0EF5                     __ptext13:	
  4438 ;; *************** function _abs *****************
  4439 ;; Defined at:
  4440 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  a               2    3[COMMON] int 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;		None
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  2    3[COMMON] int 
  4447 ;; Registers used:
  4448 ;;		wreg, status,2, status,0
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4454 ;;      Params:         2       0       0       0       0       0       0       0
  4455 ;;      Locals:         0       0       0       0       0       0       0       0
  4456 ;;      Temps:          2       0       0       0       0       0       0       0
  4457 ;;      Totals:         4       0       0       0       0       0       0       0
  4458 ;;Total ram usage:        4 bytes
  4459 ;; Hardware stack levels used: 1
  4460 ;; This function calls:
  4461 ;;		Nothing
  4462 ;; This function is called by:
  4463 ;;		_dtoa
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467  0EF5                     _abs:	
  4468                           ;psect for function _abs
  4469                           
  4470  0EF5                     l1594:	
  4471                           ;incstack = 0
  4472                           ; Regs used in _abs: [wreg+status,2+status,0]
  4473                           
  4474  0EF5  0874               	movf	abs@a+1,w
  4475  0EF6  3A80               	xorlw	128
  4476  0EF7  00F5               	movwf	??_abs
  4477  0EF8  3080               	movlw	128
  4478  0EF9  0275               	subwf	??_abs,w
  4479  0EFA  1D03               	skipz
  4480  0EFB  2EFE               	goto	u1265
  4481  0EFC  3001               	movlw	1
  4482  0EFD  0273               	subwf	abs@a,w
  4483  0EFE                     u1265:
  4484  0EFE  1803               	skipnc
  4485  0EFF  2F01               	goto	u1261
  4486  0F00  2F02               	goto	u1260
  4487  0F01                     u1261:
  4488  0F01  2F0E               	goto	l856
  4489  0F02                     u1260:
  4490  0F02                     l1596:
  4491  0F02  0973               	comf	abs@a,w
  4492  0F03  00F5               	movwf	??_abs
  4493  0F04  0974               	comf	abs@a+1,w
  4494  0F05  00F6               	movwf	??_abs+1
  4495  0F06  0AF5               	incf	??_abs,f
  4496  0F07  1903               	skipnz
  4497  0F08  0AF6               	incf	??_abs+1,f
  4498  0F09  0875               	movf	??_abs,w
  4499  0F0A  00F3               	movwf	?_abs
  4500  0F0B  0876               	movf	??_abs+1,w
  4501  0F0C  00F4               	movwf	?_abs+1
  4502  0F0D  2F0E               	goto	l859
  4503  0F0E                     l856:
  4504  0F0E                     l859:
  4505  0F0E  0008               	return
  4506  0F0F                     __end_of_abs:
  4507                           
  4508                           	psect	text14
  4509  0172                     __ptext14:	
  4510 ;; *************** function ___aomod *****************
  4511 ;; Defined at:
  4512 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  divisor         8    0[BANK0 ] long long 
  4515 ;;  dividend        8    8[BANK0 ] long long 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  sign            1    2[COMMON] unsigned char 
  4518 ;;  counter         1    1[COMMON] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  8    0[BANK0 ] long long 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4528 ;;      Params:         0      16       0       0       0       0       0       0
  4529 ;;      Locals:         2       0       0       0       0       0       0       0
  4530 ;;      Temps:          1       0       0       0       0       0       0       0
  4531 ;;      Totals:         3      16       0       0       0       0       0       0
  4532 ;;Total ram usage:       19 bytes
  4533 ;; Hardware stack levels used: 1
  4534 ;; This function calls:
  4535 ;;		Nothing
  4536 ;; This function is called by:
  4537 ;;		_dtoa
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541  0172                     ___aomod:	
  4542                           ;psect for function ___aomod
  4543                           
  4544  0172                     l1542:	
  4545                           ;incstack = 0
  4546                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4547                           
  4548  0172  01F2               	clrf	___aomod@sign
  4549  0173                     l1544:
  4550  0173  3028               	movlw	low ___aomod@dividend
  4551  0174  0086               	movwf	6
  4552  0175  3000               	movlw	high ___aomod@dividend
  4553  0176  0087               	movwf	7
  4554  0177  3F47               	moviw [7]fsr1
  4555  0178  00F0               	movwf	??___aomod
  4556  0179  1FF0               	btfss	??___aomod,7
  4557  017A  297C               	goto	u1121
  4558  017B  297D               	goto	u1120
  4559  017C                     u1121:
  4560  017C  299E               	goto	l1548
  4561  017D                     u1120:
  4562  017D                     l1546:
  4563  017D  0020               	movlb	0	; select bank0
  4564  017E  09A8               	comf	___aomod@dividend,f
  4565  017F  09A9               	comf	___aomod@dividend+1,f
  4566  0180  09AA               	comf	___aomod@dividend+2,f
  4567  0181  09AB               	comf	___aomod@dividend+3,f
  4568  0182  09AC               	comf	___aomod@dividend+4,f
  4569  0183  09AD               	comf	___aomod@dividend+5,f
  4570  0184  09AE               	comf	___aomod@dividend+6,f
  4571  0185  09AF               	comf	___aomod@dividend+7,f
  4572  0186  0AA8               	incf	___aomod@dividend,f
  4573  0187  1D03               	skipz
  4574  0188  299C               	goto	u113lld
  4575  0189  0AA9               	incf	___aomod@dividend+1,f
  4576  018A  1D03               	skipz
  4577  018B  299C               	goto	u113lld
  4578  018C  0AAA               	incf	___aomod@dividend+2,f
  4579  018D  1D03               	skipz
  4580  018E  299C               	goto	u113lld
  4581  018F  0AAB               	incf	___aomod@dividend+3,f
  4582  0190  1D03               	skipz
  4583  0191  299C               	goto	u113lld
  4584  0192  0AAC               	incf	___aomod@dividend+4,f
  4585  0193  1D03               	skipz
  4586  0194  299C               	goto	u113lld
  4587  0195  0AAD               	incf	___aomod@dividend+5,f
  4588  0196  1D03               	skipz
  4589  0197  299C               	goto	u113lld
  4590  0198  0AAE               	incf	___aomod@dividend+6,f
  4591  0199  1D03               	skipz
  4592  019A  299C               	goto	u113lld
  4593  019B  0AAF               	incf	___aomod@dividend+7,f
  4594  019C                     u113lld:
  4595  019C  01F2               	clrf	___aomod@sign
  4596  019D  0AF2               	incf	___aomod@sign,f
  4597  019E                     l1548:
  4598  019E  3020               	movlw	low ___aomod@divisor
  4599  019F  0086               	movwf	6
  4600  01A0  3000               	movlw	high ___aomod@divisor
  4601  01A1  0087               	movwf	7
  4602  01A2  3F47               	moviw [7]fsr1
  4603  01A3  00F0               	movwf	??___aomod
  4604  01A4  1FF0               	btfss	??___aomod,7
  4605  01A5  29A7               	goto	u1141
  4606  01A6  29A8               	goto	u1140
  4607  01A7                     u1141:
  4608  01A7  29C7               	goto	l1552
  4609  01A8                     u1140:
  4610  01A8                     l1550:
  4611  01A8  0020               	movlb	0	; select bank0
  4612  01A9  09A0               	comf	___aomod@divisor,f
  4613  01AA  09A1               	comf	___aomod@divisor+1,f
  4614  01AB  09A2               	comf	___aomod@divisor+2,f
  4615  01AC  09A3               	comf	___aomod@divisor+3,f
  4616  01AD  09A4               	comf	___aomod@divisor+4,f
  4617  01AE  09A5               	comf	___aomod@divisor+5,f
  4618  01AF  09A6               	comf	___aomod@divisor+6,f
  4619  01B0  09A7               	comf	___aomod@divisor+7,f
  4620  01B1  0AA0               	incf	___aomod@divisor,f
  4621  01B2  1D03               	skipz
  4622  01B3  29C7               	goto	u115lld
  4623  01B4  0AA1               	incf	___aomod@divisor+1,f
  4624  01B5  1D03               	skipz
  4625  01B6  29C7               	goto	u115lld
  4626  01B7  0AA2               	incf	___aomod@divisor+2,f
  4627  01B8  1D03               	skipz
  4628  01B9  29C7               	goto	u115lld
  4629  01BA  0AA3               	incf	___aomod@divisor+3,f
  4630  01BB  1D03               	skipz
  4631  01BC  29C7               	goto	u115lld
  4632  01BD  0AA4               	incf	___aomod@divisor+4,f
  4633  01BE  1D03               	skipz
  4634  01BF  29C7               	goto	u115lld
  4635  01C0  0AA5               	incf	___aomod@divisor+5,f
  4636  01C1  1D03               	skipz
  4637  01C2  29C7               	goto	u115lld
  4638  01C3  0AA6               	incf	___aomod@divisor+6,f
  4639  01C4  1D03               	skipz
  4640  01C5  29C7               	goto	u115lld
  4641  01C6  0AA7               	incf	___aomod@divisor+7,f
  4642  01C7                     u115lld:
  4643  01C7                     l1552:
  4644  01C7  0020               	movlb	0	; select bank0
  4645  01C8  0820               	movf	___aomod@divisor,w
  4646  01C9  0421               	iorwf	___aomod@divisor+1,w
  4647  01CA  0422               	iorwf	___aomod@divisor+2,w
  4648  01CB  0423               	iorwf	___aomod@divisor+3,w
  4649  01CC  0424               	iorwf	___aomod@divisor+4,w
  4650  01CD  0425               	iorwf	___aomod@divisor+5,w
  4651  01CE  0426               	iorwf	___aomod@divisor+6,w
  4652  01CF  0427               	iorwf	___aomod@divisor+7,w
  4653  01D0  1903               	skipnz
  4654  01D1  29D3               	goto	u1161
  4655  01D2  29D4               	goto	u1160
  4656  01D3                     u1161:
  4657  01D3  2A27               	goto	l1568
  4658  01D4                     u1160:
  4659  01D4                     l1554:
  4660  01D4  01F1               	clrf	___aomod@counter
  4661  01D5  0AF1               	incf	___aomod@counter,f
  4662  01D6  29E3               	goto	l1560
  4663  01D7                     l1556:
  4664  01D7  35A0               	lslf	___aomod@divisor,f
  4665  01D8  0DA1               	rlf	___aomod@divisor+1,f
  4666  01D9  0DA2               	rlf	___aomod@divisor+2,f
  4667  01DA  0DA3               	rlf	___aomod@divisor+3,f
  4668  01DB  0DA4               	rlf	___aomod@divisor+4,f
  4669  01DC  0DA5               	rlf	___aomod@divisor+5,f
  4670  01DD  0DA6               	rlf	___aomod@divisor+6,f
  4671  01DE  0DA7               	rlf	___aomod@divisor+7,f
  4672  01DF                     l1558:
  4673  01DF  3001               	movlw	1
  4674  01E0  00F0               	movwf	??___aomod
  4675  01E1  0870               	movf	??___aomod,w
  4676  01E2  07F1               	addwf	___aomod@counter,f
  4677  01E3                     l1560:
  4678  01E3  1FA7               	btfss	___aomod@divisor+7,7
  4679  01E4  29E6               	goto	u1171
  4680  01E5  29E7               	goto	u1170
  4681  01E6                     u1171:
  4682  01E6  29D7               	goto	l1556
  4683  01E7                     u1170:
  4684  01E7                     l1562:
  4685  01E7  0827               	movf	___aomod@divisor+7,w
  4686  01E8  022F               	subwf	___aomod@dividend+7,w
  4687  01E9  1D03               	skipz
  4688  01EA  2A05               	goto	u1185
  4689  01EB  0826               	movf	___aomod@divisor+6,w
  4690  01EC  022E               	subwf	___aomod@dividend+6,w
  4691  01ED  1D03               	skipz
  4692  01EE  2A05               	goto	u1185
  4693  01EF  0825               	movf	___aomod@divisor+5,w
  4694  01F0  022D               	subwf	___aomod@dividend+5,w
  4695  01F1  1D03               	skipz
  4696  01F2  2A05               	goto	u1185
  4697  01F3  0824               	movf	___aomod@divisor+4,w
  4698  01F4  022C               	subwf	___aomod@dividend+4,w
  4699  01F5  1D03               	skipz
  4700  01F6  2A05               	goto	u1185
  4701  01F7  0823               	movf	___aomod@divisor+3,w
  4702  01F8  022B               	subwf	___aomod@dividend+3,w
  4703  01F9  1D03               	skipz
  4704  01FA  2A05               	goto	u1185
  4705  01FB  0822               	movf	___aomod@divisor+2,w
  4706  01FC  022A               	subwf	___aomod@dividend+2,w
  4707  01FD  1D03               	skipz
  4708  01FE  2A05               	goto	u1185
  4709  01FF  0821               	movf	___aomod@divisor+1,w
  4710  0200  0229               	subwf	___aomod@dividend+1,w
  4711  0201  1D03               	skipz
  4712  0202  2A05               	goto	u1185
  4713  0203  0820               	movf	___aomod@divisor,w
  4714  0204  0228               	subwf	___aomod@dividend,w
  4715  0205                     u1185:
  4716  0205  1C03               	skipc
  4717  0206  2A08               	goto	u1181
  4718  0207  2A09               	goto	u1180
  4719  0208                     u1181:
  4720  0208  2A19               	goto	l1566
  4721  0209                     u1180:
  4722  0209                     l1564:
  4723  0209  0820               	movf	___aomod@divisor,w
  4724  020A  02A8               	subwf	___aomod@dividend,f
  4725  020B  0821               	movf	___aomod@divisor+1,w
  4726  020C  3BA9               	subwfb	___aomod@dividend+1,f
  4727  020D  0822               	movf	___aomod@divisor+2,w
  4728  020E  3BAA               	subwfb	___aomod@dividend+2,f
  4729  020F  0823               	movf	___aomod@divisor+3,w
  4730  0210  3BAB               	subwfb	___aomod@dividend+3,f
  4731  0211  0824               	movf	___aomod@divisor+4,w
  4732  0212  3BAC               	subwfb	___aomod@dividend+4,f
  4733  0213  0825               	movf	___aomod@divisor+5,w
  4734  0214  3BAD               	subwfb	___aomod@dividend+5,f
  4735  0215  0826               	movf	___aomod@divisor+6,w
  4736  0216  3BAE               	subwfb	___aomod@dividend+6,f
  4737  0217  0827               	movf	___aomod@divisor+7,w
  4738  0218  3BAF               	subwfb	___aomod@dividend+7,f
  4739  0219                     l1566:
  4740  0219  36A7               	lsrf	___aomod@divisor+7,f
  4741  021A  0CA6               	rrf	___aomod@divisor+6,f
  4742  021B  0CA5               	rrf	___aomod@divisor+5,f
  4743  021C  0CA4               	rrf	___aomod@divisor+4,f
  4744  021D  0CA3               	rrf	___aomod@divisor+3,f
  4745  021E  0CA2               	rrf	___aomod@divisor+2,f
  4746  021F  0CA1               	rrf	___aomod@divisor+1,f
  4747  0220  0CA0               	rrf	___aomod@divisor,f
  4748  0221  3001               	movlw	1
  4749  0222  02F1               	subwf	___aomod@counter,f
  4750  0223  1D03               	btfss	3,2
  4751  0224  2A26               	goto	u1191
  4752  0225  2A27               	goto	u1190
  4753  0226                     u1191:
  4754  0226  29E7               	goto	l1562
  4755  0227                     u1190:
  4756  0227                     l1568:
  4757  0227  0872               	movf	___aomod@sign,w
  4758  0228  1903               	btfsc	3,2
  4759  0229  2A2B               	goto	u1201
  4760  022A  2A2C               	goto	u1200
  4761  022B                     u1201:
  4762  022B  2A4A               	goto	l430
  4763  022C                     u1200:
  4764  022C                     l1570:
  4765  022C  09A8               	comf	___aomod@dividend,f
  4766  022D  09A9               	comf	___aomod@dividend+1,f
  4767  022E  09AA               	comf	___aomod@dividend+2,f
  4768  022F  09AB               	comf	___aomod@dividend+3,f
  4769  0230  09AC               	comf	___aomod@dividend+4,f
  4770  0231  09AD               	comf	___aomod@dividend+5,f
  4771  0232  09AE               	comf	___aomod@dividend+6,f
  4772  0233  09AF               	comf	___aomod@dividend+7,f
  4773  0234  0AA8               	incf	___aomod@dividend,f
  4774  0235  1D03               	skipz
  4775  0236  2A4A               	goto	u121lld
  4776  0237  0AA9               	incf	___aomod@dividend+1,f
  4777  0238  1D03               	skipz
  4778  0239  2A4A               	goto	u121lld
  4779  023A  0AAA               	incf	___aomod@dividend+2,f
  4780  023B  1D03               	skipz
  4781  023C  2A4A               	goto	u121lld
  4782  023D  0AAB               	incf	___aomod@dividend+3,f
  4783  023E  1D03               	skipz
  4784  023F  2A4A               	goto	u121lld
  4785  0240  0AAC               	incf	___aomod@dividend+4,f
  4786  0241  1D03               	skipz
  4787  0242  2A4A               	goto	u121lld
  4788  0243  0AAD               	incf	___aomod@dividend+5,f
  4789  0244  1D03               	skipz
  4790  0245  2A4A               	goto	u121lld
  4791  0246  0AAE               	incf	___aomod@dividend+6,f
  4792  0247  1D03               	skipz
  4793  0248  2A4A               	goto	u121lld
  4794  0249  0AAF               	incf	___aomod@dividend+7,f
  4795  024A                     u121lld:
  4796  024A                     l430:
  4797  024A  0020               	movlb	0	; select bank0
  4798  024B  0828               	movf	___aomod@dividend,w
  4799  024C  00A0               	movwf	?___aomod
  4800  024D  0829               	movf	___aomod@dividend+1,w
  4801  024E  00A1               	movwf	?___aomod+1
  4802  024F  082A               	movf	___aomod@dividend+2,w
  4803  0250  00A2               	movwf	?___aomod+2
  4804  0251  082B               	movf	___aomod@dividend+3,w
  4805  0252  00A3               	movwf	?___aomod+3
  4806  0253  082C               	movf	___aomod@dividend+4,w
  4807  0254  00A4               	movwf	?___aomod+4
  4808  0255  082D               	movf	___aomod@dividend+5,w
  4809  0256  00A5               	movwf	?___aomod+5
  4810  0257  082E               	movf	___aomod@dividend+6,w
  4811  0258  00A6               	movwf	?___aomod+6
  4812  0259  082F               	movf	___aomod@dividend+7,w
  4813  025A  00A7               	movwf	?___aomod+7
  4814  025B                     l431:
  4815  025B  0008               	return
  4816  025C                     __end_of___aomod:
  4817                           
  4818                           	psect	text15
  4819  025C                     __ptext15:	
  4820 ;; *************** function ___aodiv *****************
  4821 ;; Defined at:
  4822 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  divisor         8    0[BANK0 ] long long 
  4825 ;;  dividend        8    8[BANK0 ] long long 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  quotient        8    3[COMMON] long long 
  4828 ;;  sign            1    2[COMMON] unsigned char 
  4829 ;;  counter         1    1[COMMON] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  8    0[BANK0 ] long long 
  4832 ;; Registers used:
  4833 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4839 ;;      Params:         0      16       0       0       0       0       0       0
  4840 ;;      Locals:        10       0       0       0       0       0       0       0
  4841 ;;      Temps:          1       0       0       0       0       0       0       0
  4842 ;;      Totals:        11      16       0       0       0       0       0       0
  4843 ;;Total ram usage:       27 bytes
  4844 ;; Hardware stack levels used: 1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_dtoa
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852  025C                     ___aodiv:	
  4853                           ;psect for function ___aodiv
  4854                           
  4855  025C                     l1504:	
  4856                           ;incstack = 0
  4857                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4858                           
  4859  025C  01F2               	clrf	___aodiv@sign
  4860  025D                     l1506:
  4861  025D  3020               	movlw	low ___aodiv@divisor
  4862  025E  0086               	movwf	6
  4863  025F  3000               	movlw	high ___aodiv@divisor
  4864  0260  0087               	movwf	7
  4865  0261  3F47               	moviw [7]fsr1
  4866  0262  00F0               	movwf	??___aodiv
  4867  0263  1FF0               	btfss	??___aodiv,7
  4868  0264  2A66               	goto	u1011
  4869  0265  2A67               	goto	u1010
  4870  0266                     u1011:
  4871  0266  2A88               	goto	l1510
  4872  0267                     u1010:
  4873  0267                     l1508:
  4874  0267  0020               	movlb	0	; select bank0
  4875  0268  09A0               	comf	___aodiv@divisor,f
  4876  0269  09A1               	comf	___aodiv@divisor+1,f
  4877  026A  09A2               	comf	___aodiv@divisor+2,f
  4878  026B  09A3               	comf	___aodiv@divisor+3,f
  4879  026C  09A4               	comf	___aodiv@divisor+4,f
  4880  026D  09A5               	comf	___aodiv@divisor+5,f
  4881  026E  09A6               	comf	___aodiv@divisor+6,f
  4882  026F  09A7               	comf	___aodiv@divisor+7,f
  4883  0270  0AA0               	incf	___aodiv@divisor,f
  4884  0271  1D03               	skipz
  4885  0272  2A86               	goto	u102lld
  4886  0273  0AA1               	incf	___aodiv@divisor+1,f
  4887  0274  1D03               	skipz
  4888  0275  2A86               	goto	u102lld
  4889  0276  0AA2               	incf	___aodiv@divisor+2,f
  4890  0277  1D03               	skipz
  4891  0278  2A86               	goto	u102lld
  4892  0279  0AA3               	incf	___aodiv@divisor+3,f
  4893  027A  1D03               	skipz
  4894  027B  2A86               	goto	u102lld
  4895  027C  0AA4               	incf	___aodiv@divisor+4,f
  4896  027D  1D03               	skipz
  4897  027E  2A86               	goto	u102lld
  4898  027F  0AA5               	incf	___aodiv@divisor+5,f
  4899  0280  1D03               	skipz
  4900  0281  2A86               	goto	u102lld
  4901  0282  0AA6               	incf	___aodiv@divisor+6,f
  4902  0283  1D03               	skipz
  4903  0284  2A86               	goto	u102lld
  4904  0285  0AA7               	incf	___aodiv@divisor+7,f
  4905  0286                     u102lld:
  4906  0286  01F2               	clrf	___aodiv@sign
  4907  0287  0AF2               	incf	___aodiv@sign,f
  4908  0288                     l1510:
  4909  0288  3028               	movlw	low ___aodiv@dividend
  4910  0289  0086               	movwf	6
  4911  028A  3000               	movlw	high ___aodiv@dividend
  4912  028B  0087               	movwf	7
  4913  028C  3F47               	moviw [7]fsr1
  4914  028D  00F0               	movwf	??___aodiv
  4915  028E  1FF0               	btfss	??___aodiv,7
  4916  028F  2A91               	goto	u1031
  4917  0290  2A92               	goto	u1030
  4918  0291                     u1031:
  4919  0291  2AB5               	goto	l1516
  4920  0292                     u1030:
  4921  0292                     l1512:
  4922  0292  0020               	movlb	0	; select bank0
  4923  0293  09A8               	comf	___aodiv@dividend,f
  4924  0294  09A9               	comf	___aodiv@dividend+1,f
  4925  0295  09AA               	comf	___aodiv@dividend+2,f
  4926  0296  09AB               	comf	___aodiv@dividend+3,f
  4927  0297  09AC               	comf	___aodiv@dividend+4,f
  4928  0298  09AD               	comf	___aodiv@dividend+5,f
  4929  0299  09AE               	comf	___aodiv@dividend+6,f
  4930  029A  09AF               	comf	___aodiv@dividend+7,f
  4931  029B  0AA8               	incf	___aodiv@dividend,f
  4932  029C  1D03               	skipz
  4933  029D  2AB1               	goto	u104lld
  4934  029E  0AA9               	incf	___aodiv@dividend+1,f
  4935  029F  1D03               	skipz
  4936  02A0  2AB1               	goto	u104lld
  4937  02A1  0AAA               	incf	___aodiv@dividend+2,f
  4938  02A2  1D03               	skipz
  4939  02A3  2AB1               	goto	u104lld
  4940  02A4  0AAB               	incf	___aodiv@dividend+3,f
  4941  02A5  1D03               	skipz
  4942  02A6  2AB1               	goto	u104lld
  4943  02A7  0AAC               	incf	___aodiv@dividend+4,f
  4944  02A8  1D03               	skipz
  4945  02A9  2AB1               	goto	u104lld
  4946  02AA  0AAD               	incf	___aodiv@dividend+5,f
  4947  02AB  1D03               	skipz
  4948  02AC  2AB1               	goto	u104lld
  4949  02AD  0AAE               	incf	___aodiv@dividend+6,f
  4950  02AE  1D03               	skipz
  4951  02AF  2AB1               	goto	u104lld
  4952  02B0  0AAF               	incf	___aodiv@dividend+7,f
  4953  02B1                     u104lld:
  4954  02B1                     l1514:
  4955  02B1  3001               	movlw	1
  4956  02B2  00F0               	movwf	??___aodiv
  4957  02B3  0870               	movf	??___aodiv,w
  4958  02B4  06F2               	xorwf	___aodiv@sign,f
  4959  02B5                     l1516:
  4960  02B5  3073               	movlw	low ___aodiv@quotient
  4961  02B6  0086               	movwf	6
  4962  02B7  3000               	movlw	high ___aodiv@quotient
  4963  02B8  0087               	movwf	7
  4964  02B9  3008               	movlw	8
  4965  02BA  00F0               	movwf	??___aodiv
  4966  02BB  3000               	movlw	0
  4967  02BC                     u1050:
  4968  02BC  001E               	movwi fsr1++
  4969  02BD  0BF0               	decfsz	??___aodiv,f
  4970  02BE  2ABC               	goto	u1050
  4971  02BF                     l1518:
  4972  02BF  0020               	movlb	0	; select bank0
  4973  02C0  0820               	movf	___aodiv@divisor,w
  4974  02C1  0421               	iorwf	___aodiv@divisor+1,w
  4975  02C2  0422               	iorwf	___aodiv@divisor+2,w
  4976  02C3  0423               	iorwf	___aodiv@divisor+3,w
  4977  02C4  0424               	iorwf	___aodiv@divisor+4,w
  4978  02C5  0425               	iorwf	___aodiv@divisor+5,w
  4979  02C6  0426               	iorwf	___aodiv@divisor+6,w
  4980  02C7  0427               	iorwf	___aodiv@divisor+7,w
  4981  02C8  1903               	skipnz
  4982  02C9  2ACB               	goto	u1061
  4983  02CA  2ACC               	goto	u1060
  4984  02CB                     u1061:
  4985  02CB  2B28               	goto	l1538
  4986  02CC                     u1060:
  4987  02CC                     l1520:
  4988  02CC  01F1               	clrf	___aodiv@counter
  4989  02CD  0AF1               	incf	___aodiv@counter,f
  4990  02CE  2ADB               	goto	l1526
  4991  02CF                     l1522:
  4992  02CF  35A0               	lslf	___aodiv@divisor,f
  4993  02D0  0DA1               	rlf	___aodiv@divisor+1,f
  4994  02D1  0DA2               	rlf	___aodiv@divisor+2,f
  4995  02D2  0DA3               	rlf	___aodiv@divisor+3,f
  4996  02D3  0DA4               	rlf	___aodiv@divisor+4,f
  4997  02D4  0DA5               	rlf	___aodiv@divisor+5,f
  4998  02D5  0DA6               	rlf	___aodiv@divisor+6,f
  4999  02D6  0DA7               	rlf	___aodiv@divisor+7,f
  5000  02D7                     l1524:
  5001  02D7  3001               	movlw	1
  5002  02D8  00F0               	movwf	??___aodiv
  5003  02D9  0870               	movf	??___aodiv,w
  5004  02DA  07F1               	addwf	___aodiv@counter,f
  5005  02DB                     l1526:
  5006  02DB  1FA7               	btfss	___aodiv@divisor+7,7
  5007  02DC  2ADE               	goto	u1071
  5008  02DD  2ADF               	goto	u1070
  5009  02DE                     u1071:
  5010  02DE  2ACF               	goto	l1522
  5011  02DF                     u1070:
  5012  02DF                     l1528:
  5013  02DF  35F3               	lslf	___aodiv@quotient,f
  5014  02E0  0DF4               	rlf	___aodiv@quotient+1,f
  5015  02E1  0DF5               	rlf	___aodiv@quotient+2,f
  5016  02E2  0DF6               	rlf	___aodiv@quotient+3,f
  5017  02E3  0DF7               	rlf	___aodiv@quotient+4,f
  5018  02E4  0DF8               	rlf	___aodiv@quotient+5,f
  5019  02E5  0DF9               	rlf	___aodiv@quotient+6,f
  5020  02E6  0DFA               	rlf	___aodiv@quotient+7,f
  5021  02E7                     l1530:
  5022  02E7  0827               	movf	___aodiv@divisor+7,w
  5023  02E8  022F               	subwf	___aodiv@dividend+7,w
  5024  02E9  1D03               	skipz
  5025  02EA  2B05               	goto	u1085
  5026  02EB  0826               	movf	___aodiv@divisor+6,w
  5027  02EC  022E               	subwf	___aodiv@dividend+6,w
  5028  02ED  1D03               	skipz
  5029  02EE  2B05               	goto	u1085
  5030  02EF  0825               	movf	___aodiv@divisor+5,w
  5031  02F0  022D               	subwf	___aodiv@dividend+5,w
  5032  02F1  1D03               	skipz
  5033  02F2  2B05               	goto	u1085
  5034  02F3  0824               	movf	___aodiv@divisor+4,w
  5035  02F4  022C               	subwf	___aodiv@dividend+4,w
  5036  02F5  1D03               	skipz
  5037  02F6  2B05               	goto	u1085
  5038  02F7  0823               	movf	___aodiv@divisor+3,w
  5039  02F8  022B               	subwf	___aodiv@dividend+3,w
  5040  02F9  1D03               	skipz
  5041  02FA  2B05               	goto	u1085
  5042  02FB  0822               	movf	___aodiv@divisor+2,w
  5043  02FC  022A               	subwf	___aodiv@dividend+2,w
  5044  02FD  1D03               	skipz
  5045  02FE  2B05               	goto	u1085
  5046  02FF  0821               	movf	___aodiv@divisor+1,w
  5047  0300  0229               	subwf	___aodiv@dividend+1,w
  5048  0301  1D03               	skipz
  5049  0302  2B05               	goto	u1085
  5050  0303  0820               	movf	___aodiv@divisor,w
  5051  0304  0228               	subwf	___aodiv@dividend,w
  5052  0305                     u1085:
  5053  0305  1C03               	skipc
  5054  0306  2B08               	goto	u1081
  5055  0307  2B09               	goto	u1080
  5056  0308                     u1081:
  5057  0308  2B1A               	goto	l1536
  5058  0309                     u1080:
  5059  0309                     l1532:
  5060  0309  0820               	movf	___aodiv@divisor,w
  5061  030A  02A8               	subwf	___aodiv@dividend,f
  5062  030B  0821               	movf	___aodiv@divisor+1,w
  5063  030C  3BA9               	subwfb	___aodiv@dividend+1,f
  5064  030D  0822               	movf	___aodiv@divisor+2,w
  5065  030E  3BAA               	subwfb	___aodiv@dividend+2,f
  5066  030F  0823               	movf	___aodiv@divisor+3,w
  5067  0310  3BAB               	subwfb	___aodiv@dividend+3,f
  5068  0311  0824               	movf	___aodiv@divisor+4,w
  5069  0312  3BAC               	subwfb	___aodiv@dividend+4,f
  5070  0313  0825               	movf	___aodiv@divisor+5,w
  5071  0314  3BAD               	subwfb	___aodiv@dividend+5,f
  5072  0315  0826               	movf	___aodiv@divisor+6,w
  5073  0316  3BAE               	subwfb	___aodiv@dividend+6,f
  5074  0317  0827               	movf	___aodiv@divisor+7,w
  5075  0318  3BAF               	subwfb	___aodiv@dividend+7,f
  5076  0319                     l1534:
  5077  0319  1473               	bsf	___aodiv@quotient,0
  5078  031A                     l1536:
  5079  031A  36A7               	lsrf	___aodiv@divisor+7,f
  5080  031B  0CA6               	rrf	___aodiv@divisor+6,f
  5081  031C  0CA5               	rrf	___aodiv@divisor+5,f
  5082  031D  0CA4               	rrf	___aodiv@divisor+4,f
  5083  031E  0CA3               	rrf	___aodiv@divisor+3,f
  5084  031F  0CA2               	rrf	___aodiv@divisor+2,f
  5085  0320  0CA1               	rrf	___aodiv@divisor+1,f
  5086  0321  0CA0               	rrf	___aodiv@divisor,f
  5087  0322  3001               	movlw	1
  5088  0323  02F1               	subwf	___aodiv@counter,f
  5089  0324  1D03               	btfss	3,2
  5090  0325  2B27               	goto	u1091
  5091  0326  2B28               	goto	u1090
  5092  0327                     u1091:
  5093  0327  2ADF               	goto	l1528
  5094  0328                     u1090:
  5095  0328                     l1538:
  5096  0328  0872               	movf	___aodiv@sign,w
  5097  0329  1903               	btfsc	3,2
  5098  032A  2B2C               	goto	u1101
  5099  032B  2B2D               	goto	u1100
  5100  032C                     u1101:
  5101  032C  2B4B               	goto	l417
  5102  032D                     u1100:
  5103  032D                     l1540:
  5104  032D  09F3               	comf	___aodiv@quotient,f
  5105  032E  09F4               	comf	___aodiv@quotient+1,f
  5106  032F  09F5               	comf	___aodiv@quotient+2,f
  5107  0330  09F6               	comf	___aodiv@quotient+3,f
  5108  0331  09F7               	comf	___aodiv@quotient+4,f
  5109  0332  09F8               	comf	___aodiv@quotient+5,f
  5110  0333  09F9               	comf	___aodiv@quotient+6,f
  5111  0334  09FA               	comf	___aodiv@quotient+7,f
  5112  0335  0AF3               	incf	___aodiv@quotient,f
  5113  0336  1D03               	skipz
  5114  0337  2B4B               	goto	u111lld
  5115  0338  0AF4               	incf	___aodiv@quotient+1,f
  5116  0339  1D03               	skipz
  5117  033A  2B4B               	goto	u111lld
  5118  033B  0AF5               	incf	___aodiv@quotient+2,f
  5119  033C  1D03               	skipz
  5120  033D  2B4B               	goto	u111lld
  5121  033E  0AF6               	incf	___aodiv@quotient+3,f
  5122  033F  1D03               	skipz
  5123  0340  2B4B               	goto	u111lld
  5124  0341  0AF7               	incf	___aodiv@quotient+4,f
  5125  0342  1D03               	skipz
  5126  0343  2B4B               	goto	u111lld
  5127  0344  0AF8               	incf	___aodiv@quotient+5,f
  5128  0345  1D03               	skipz
  5129  0346  2B4B               	goto	u111lld
  5130  0347  0AF9               	incf	___aodiv@quotient+6,f
  5131  0348  1D03               	skipz
  5132  0349  2B4B               	goto	u111lld
  5133  034A  0AFA               	incf	___aodiv@quotient+7,f
  5134  034B                     u111lld:
  5135  034B                     l417:
  5136  034B  0873               	movf	___aodiv@quotient,w
  5137  034C  0020               	movlb	0	; select bank0
  5138  034D  00A0               	movwf	?___aodiv
  5139  034E  0874               	movf	___aodiv@quotient+1,w
  5140  034F  00A1               	movwf	?___aodiv+1
  5141  0350  0875               	movf	___aodiv@quotient+2,w
  5142  0351  00A2               	movwf	?___aodiv+2
  5143  0352  0876               	movf	___aodiv@quotient+3,w
  5144  0353  00A3               	movwf	?___aodiv+3
  5145  0354  0877               	movf	___aodiv@quotient+4,w
  5146  0355  00A4               	movwf	?___aodiv+4
  5147  0356  0878               	movf	___aodiv@quotient+5,w
  5148  0357  00A5               	movwf	?___aodiv+5
  5149  0358  0879               	movf	___aodiv@quotient+6,w
  5150  0359  00A6               	movwf	?___aodiv+6
  5151  035A  087A               	movf	___aodiv@quotient+7,w
  5152  035B  00A7               	movwf	?___aodiv+7
  5153  035C                     l418:
  5154  035C  0008               	return
  5155  035D                     __end_of___aodiv:
  5156                           
  5157                           	psect	text16
  5158  0E94                     __ptext16:	
  5159 ;; *************** function _correct_guess *****************
  5160 ;; Defined at:
  5161 ;;		line 109 in file "main.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  user_res        1    wreg     unsigned char 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;  user_res        1    7[COMMON] unsigned char 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5175 ;;      Params:         0       0       0       0       0       0       0       0
  5176 ;;      Locals:         1       0       0       0       0       0       0       0
  5177 ;;      Temps:          0       0       0       0       0       0       0       0
  5178 ;;      Totals:         1       0       0       0       0       0       0       0
  5179 ;;Total ram usage:        1 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; Hardware stack levels required when called: 2
  5182 ;; This function calls:
  5183 ;;		_EUSART_Write_Text
  5184 ;; This function is called by:
  5185 ;;		_main
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189  0E94                     _correct_guess:	
  5190                           ;psect for function _correct_guess
  5191                           
  5192                           
  5193                           ;incstack = 0
  5194                           ; Regs used in _correct_guess: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5195                           ;correct_guess@user_res stored from wreg
  5196  0E94  00F7               	movwf	correct_guess@user_res
  5197  0E95                     l1814:
  5198                           
  5199                           ;main.c: 111:     if(user_res == '1'){
  5200  0E95  3031               	movlw	49
  5201  0E96  0677               	xorwf	correct_guess@user_res,w
  5202  0E97  1D03               	btfss	3,2
  5203  0E98  2E9A               	goto	u1581
  5204  0E99  2E9B               	goto	u1580
  5205  0E9A                     u1581:
  5206  0E9A  2EAA               	goto	l181
  5207  0E9B                     u1580:
  5208  0E9B                     l1816:
  5209                           
  5210                           ;main.c: 113:         EUSART_Write_Text("\rMCU: ");
  5211  0E9B  3066               	movlw	low (STR_2| (0+32768))
  5212  0E9C  00F1               	movwf	EUSART_Write_Text@textData
  5213  0E9D  3090               	movlw	high (STR_2| (0+32768))
  5214  0E9E  00F2               	movwf	EUSART_Write_Text@textData+1
  5215  0E9F  3180  200F  318E   	fcall	_EUSART_Write_Text
  5216                           
  5217                           ;main.c: 114:         EUSART_Write_Text("Yay, I'm good right?");
  5218  0EA2  3038               	movlw	low (STR_3| (0+32768))
  5219  0EA3  00F1               	movwf	EUSART_Write_Text@textData
  5220  0EA4  3090               	movlw	high (STR_3| (0+32768))
  5221  0EA5  00F2               	movwf	EUSART_Write_Text@textData+1
  5222  0EA6  3180  200F  318E   	fcall	_EUSART_Write_Text
  5223  0EA9                     l178:	
  5224                           ;main.c: 117:         while(1);
  5225                           
  5226  0EA9                     l179:
  5227  0EA9  2EA9               	goto	l178
  5228  0EAA                     l181:
  5229  0EAA  0008               	return
  5230  0EAB                     __end_of_correct_guess:
  5231                           
  5232                           	psect	text17
  5233  0E74                     __ptext17:	
  5234 ;; *************** function _confuse_guess *****************
  5235 ;; Defined at:
  5236 ;;		line 126 in file "main.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;		None
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;		None
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      void 
  5243 ;; Registers used:
  5244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5250 ;;      Params:         0       0       0       0       0       0       0       0
  5251 ;;      Locals:         0       0       0       0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0
  5253 ;;      Totals:         0       0       0       0       0       0       0       0
  5254 ;;Total ram usage:        0 bytes
  5255 ;; Hardware stack levels used: 1
  5256 ;; Hardware stack levels required when called: 2
  5257 ;; This function calls:
  5258 ;;		_EUSART_Write_Text
  5259 ;; This function is called by:
  5260 ;;		_main
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264  0E74                     _confuse_guess:	
  5265                           ;psect for function _confuse_guess
  5266                           
  5267  0E74                     l1818:	
  5268                           ;incstack = 0
  5269                           ; Regs used in _confuse_guess: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5270                           
  5271                           
  5272                           ;main.c: 128:     EUSART_Write_Text("\rMCU: ");
  5273  0E74  3066               	movlw	low (STR_2| (0+32768))
  5274  0E75  00F1               	movwf	EUSART_Write_Text@textData
  5275  0E76  3090               	movlw	high (STR_2| (0+32768))
  5276  0E77  00F2               	movwf	EUSART_Write_Text@textData+1
  5277  0E78  3180  200F  318E   	fcall	_EUSART_Write_Text
  5278                           
  5279                           ;main.c: 129:     EUSART_Write_Text("MCU is confusing. Invalid game!");
  5280  0E7B  3000               	movlw	low (STR_5| (0+32768))
  5281  0E7C  00F1               	movwf	EUSART_Write_Text@textData
  5282  0E7D  3090               	movlw	high (STR_5| (0+32768))
  5283  0E7E  00F2               	movwf	EUSART_Write_Text@textData+1
  5284  0E7F  3180  200F  318E   	fcall	_EUSART_Write_Text
  5285  0E82                     l184:	
  5286                           ;main.c: 132:     while(1);
  5287                           
  5288  0E82                     l185:
  5289  0E82  2E82               	goto	l184
  5290  0E83  0008               	return
  5291  0E84                     __end_of_confuse_guess:
  5292                           
  5293                           	psect	text18
  5294  000F                     __ptext18:	
  5295 ;; *************** function _EUSART_Write_Text *****************
  5296 ;; Defined at:
  5297 ;;		line 63 in file "main.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  textData        2    1[COMMON] PTR unsigned char 
  5300 ;;		 -> STR_29(9), STR_28(7), STR_26(9), STR_25(7), 
  5301 ;;		 -> STR_23(9), STR_22(7), STR_20(9), STR_19(7), 
  5302 ;;		 -> STR_17(9), STR_16(7), STR_14(9), STR_13(7), 
  5303 ;;		 -> STR_11(9), STR_10(7), main@age_str(10), STR_8(24), 
  5304 ;;		 -> STR_7(8), STR_6(7), STR_5(32), STR_4(7), 
  5305 ;;		 -> STR_3(21), STR_2(7), STR_1(8), 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  i               2    4[COMMON] unsigned int 
  5308 ;;  endTrig         1    6[COMMON] unsigned char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5318 ;;      Params:         2       0       0       0       0       0       0       0
  5319 ;;      Locals:         3       0       0       0       0       0       0       0
  5320 ;;      Temps:          1       0       0       0       0       0       0       0
  5321 ;;      Totals:         6       0       0       0       0       0       0       0
  5322 ;;Total ram usage:        6 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; Hardware stack levels required when called: 1
  5325 ;; This function calls:
  5326 ;;		_EUSART_Write
  5327 ;;		_EUSART_is_tx_ready
  5328 ;; This function is called by:
  5329 ;;		_user_wait
  5330 ;;		_correct_guess
  5331 ;;		_confuse_guess
  5332 ;;		_main
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336  000F                     _EUSART_Write_Text:	
  5337                           ;psect for function _EUSART_Write_Text
  5338                           
  5339  000F                     l1772:	
  5340                           ;incstack = 0
  5341                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5342                           
  5343                           
  5344                           ;main.c: 65:     unsigned int i = 0;
  5345  000F  01F4               	clrf	EUSART_Write_Text@i
  5346  0010  01F5               	clrf	EUSART_Write_Text@i+1
  5347                           
  5348                           ;main.c: 66:     unsigned char endTrig = 0;
  5349  0011  01F6               	clrf	EUSART_Write_Text@endTrig
  5350                           
  5351                           ;main.c: 68:     while(endTrig == 0){
  5352  0012  283B               	goto	l1788
  5353  0013                     l1774:
  5354                           
  5355                           ;main.c: 71:         if(textData[i] == '\0'){
  5356  0013  0871               	movf	EUSART_Write_Text@textData,w
  5357  0014  0774               	addwf	EUSART_Write_Text@i,w
  5358  0015  0084               	movwf	4
  5359  0016  0872               	movf	EUSART_Write_Text@textData+1,w
  5360  0017  3D75               	addwfc	EUSART_Write_Text@i+1,w
  5361  0018  0085               	movwf	5
  5362  0019  0012               	moviw fsr0++
  5363  001A  1D03               	btfss	3,2
  5364  001B  281D               	goto	u1521
  5365  001C  281E               	goto	u1520
  5366  001D                     u1521:
  5367  001D  2820               	goto	l1778
  5368  001E                     u1520:
  5369  001E                     l1776:
  5370                           
  5371                           ;main.c: 74:             endTrig = 1;
  5372  001E  01F6               	clrf	EUSART_Write_Text@endTrig
  5373  001F  0AF6               	incf	EUSART_Write_Text@endTrig,f
  5374  0020                     l1778:
  5375                           
  5376                           ;main.c: 79:         if(endTrig != 1){
  5377  0020  0376               	decf	EUSART_Write_Text@endTrig,w
  5378  0021  1903               	btfsc	3,2
  5379  0022  2824               	goto	u1531
  5380  0023  2825               	goto	u1530
  5381  0024                     u1531:
  5382  0024  2837               	goto	l1786
  5383  0025                     u1530:
  5384  0025                     l1782:
  5385  0025  318E  2665  3180   	fcall	_EUSART_is_tx_ready
  5386  0028  3A00               	xorlw	0
  5387  0029  1903               	skipnz
  5388  002A  282C               	goto	u1541
  5389  002B  282D               	goto	u1540
  5390  002C                     u1541:
  5391  002C  2825               	goto	l1782
  5392  002D                     u1540:
  5393  002D                     l1784:
  5394                           
  5395                           ;main.c: 83:             EUSART_Write(textData[i]);
  5396  002D  0871               	movf	EUSART_Write_Text@textData,w
  5397  002E  0774               	addwf	EUSART_Write_Text@i,w
  5398  002F  0084               	movwf	4
  5399  0030  0872               	movf	EUSART_Write_Text@textData+1,w
  5400  0031  3D75               	addwfc	EUSART_Write_Text@i+1,w
  5401  0032  0085               	movwf	5
  5402  0033  0800               	movf	0,w	;code access
  5403  0034  3180  2005  3180   	fcall	_EUSART_Write
  5404  0037                     l1786:
  5405                           
  5406                           ;main.c: 88:         i++;
  5407  0037  3001               	movlw	1
  5408  0038  07F4               	addwf	EUSART_Write_Text@i,f
  5409  0039  3000               	movlw	0
  5410  003A  3DF5               	addwfc	EUSART_Write_Text@i+1,f
  5411  003B                     l1788:
  5412                           
  5413                           ;main.c: 68:     while(endTrig == 0){
  5414  003B  0876               	movf	EUSART_Write_Text@endTrig,w
  5415  003C  1903               	btfsc	3,2
  5416  003D  283F               	goto	u1551
  5417  003E  2840               	goto	u1550
  5418  003F                     u1551:
  5419  003F  2813               	goto	l1774
  5420  0040                     u1550:
  5421  0040                     l168:
  5422  0040  0008               	return
  5423  0041                     __end_of_EUSART_Write_Text:
  5424                           
  5425                           	psect	text19
  5426  0E65                     __ptext19:	
  5427 ;; *************** function _EUSART_is_tx_ready *****************
  5428 ;; Defined at:
  5429 ;;		line 94 in file "mcc_generated_files/eusart.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;		None
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1    wreg      _Bool 
  5436 ;; Registers used:
  5437 ;;		wreg, status,2
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5443 ;;      Params:         0       0       0       0       0       0       0       0
  5444 ;;      Locals:         1       0       0       0       0       0       0       0
  5445 ;;      Temps:          0       0       0       0       0       0       0       0
  5446 ;;      Totals:         1       0       0       0       0       0       0       0
  5447 ;;Total ram usage:        1 bytes
  5448 ;; Hardware stack levels used: 1
  5449 ;; This function calls:
  5450 ;;		Nothing
  5451 ;; This function is called by:
  5452 ;;		_EUSART_Write_Text
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456  0E65                     _EUSART_is_tx_ready:	
  5457                           ;psect for function _EUSART_is_tx_ready
  5458                           
  5459  0E65                     l1662:	
  5460                           ;incstack = 0
  5461                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  5462                           
  5463                           
  5464                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  5465  0E65  01F0               	clrf	_EUSART_is_tx_ready$241
  5466  0E66                     l1664:
  5467  0E66  0020               	movlb	0	; select bank0
  5468  0E67  1E11               	btfss	17,4	;volatile
  5469  0E68  2E6A               	goto	u1431
  5470  0E69  2E6B               	goto	u1430
  5471  0E6A                     u1431:
  5472  0E6A  2E72               	goto	l1670
  5473  0E6B                     u1430:
  5474  0E6B                     l1666:
  5475  0E6B  0023               	movlb	3	; select bank3
  5476  0E6C  1E9E               	btfss	30,5	;volatile
  5477  0E6D  2E6F               	goto	u1441
  5478  0E6E  2E70               	goto	u1440
  5479  0E6F                     u1441:
  5480  0E6F  2E72               	goto	l1670
  5481  0E70                     u1440:
  5482  0E70                     l1668:
  5483  0E70  01F0               	clrf	_EUSART_is_tx_ready$241
  5484  0E71  0AF0               	incf	_EUSART_is_tx_ready$241,f
  5485  0E72                     l1670:
  5486  0E72  0870               	movf	_EUSART_is_tx_ready$241,w
  5487  0E73                     l103:
  5488  0E73  0008               	return
  5489  0E74                     __end_of_EUSART_is_tx_ready:
  5490                           
  5491                           	psect	text20
  5492  0005                     __ptext20:	
  5493 ;; *************** function _EUSART_Write *****************
  5494 ;; Defined at:
  5495 ;;		line 132 in file "mcc_generated_files/eusart.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  txData          1    wreg     unsigned char 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;  txData          1    0[COMMON] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		wreg
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5509 ;;      Params:         0       0       0       0       0       0       0       0
  5510 ;;      Locals:         1       0       0       0       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0
  5512 ;;      Totals:         1       0       0       0       0       0       0       0
  5513 ;;Total ram usage:        1 bytes
  5514 ;; Hardware stack levels used: 1
  5515 ;; This function calls:
  5516 ;;		Nothing
  5517 ;; This function is called by:
  5518 ;;		_EUSART_Write_Text
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522  0005                     _EUSART_Write:	
  5523                           ;psect for function _EUSART_Write
  5524                           
  5525                           
  5526                           ;incstack = 0
  5527                           ; Regs used in _EUSART_Write: [wreg]
  5528                           ;EUSART_Write@txData stored from wreg
  5529  0005  00F0               	movwf	EUSART_Write@txData
  5530  0006                     l1674:
  5531  0006                     l122:	
  5532                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  5533                           
  5534                           
  5535                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  5536  0006  0020               	movlb	0	; select bank0
  5537  0007  1E11               	btfss	17,4	;volatile
  5538  0008  280A               	goto	u1451
  5539  0009  280B               	goto	u1450
  5540  000A                     u1451:
  5541  000A  2806               	goto	l122
  5542  000B                     u1450:
  5543  000B                     l1676:
  5544                           
  5545                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  5546  000B  0870               	movf	EUSART_Write@txData,w
  5547  000C  0023               	movlb	3	; select bank3
  5548  000D  009A               	movwf	26	;volatile
  5549  000E                     l125:
  5550  000E  0008               	return
  5551  000F                     __end_of_EUSART_Write:
  5552                           
  5553                           	psect	text21
  5554  0E58                     __ptext21:	
  5555 ;; *************** function _SYSTEM_Initialize *****************
  5556 ;; Defined at:
  5557 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;		None
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;		None
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  1    wreg      void 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0, pclath, cstack
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5571 ;;      Params:         0       0       0       0       0       0       0       0
  5572 ;;      Locals:         0       0       0       0       0       0       0       0
  5573 ;;      Temps:          0       0       0       0       0       0       0       0
  5574 ;;      Totals:         0       0       0       0       0       0       0       0
  5575 ;;Total ram usage:        0 bytes
  5576 ;; Hardware stack levels used: 1
  5577 ;; Hardware stack levels required when called: 2
  5578 ;; This function calls:
  5579 ;;		_EUSART_Initialize
  5580 ;;		_OSCILLATOR_Initialize
  5581 ;;		_PIN_MANAGER_Initialize
  5582 ;;		_WDT_Initialize
  5583 ;; This function is called by:
  5584 ;;		_main
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588  0E58                     _SYSTEM_Initialize:	
  5589                           ;psect for function _SYSTEM_Initialize
  5590                           
  5591  0E58                     l1802:	
  5592                           ;incstack = 0
  5593                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5594                           
  5595                           
  5596                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5597  0E58  318E  26DB  318E   	fcall	_PIN_MANAGER_Initialize
  5598                           
  5599                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5600  0E5B  318E  264C  318E   	fcall	_OSCILLATOR_Initialize
  5601                           
  5602                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5603  0E5E  318E  2631  318E   	fcall	_WDT_Initialize
  5604                           
  5605                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  5606  0E61  318F  270F  318E   	fcall	_EUSART_Initialize
  5607  0E64                     l17:
  5608  0E64  0008               	return
  5609  0E65                     __end_of_SYSTEM_Initialize:
  5610                           
  5611                           	psect	text22
  5612  0E31                     __ptext22:	
  5613 ;; *************** function _WDT_Initialize *****************
  5614 ;; Defined at:
  5615 ;;		line 67 in file "mcc_generated_files/mcc.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;		None
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		wreg
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5629 ;;      Params:         0       0       0       0       0       0       0       0
  5630 ;;      Locals:         0       0       0       0       0       0       0       0
  5631 ;;      Temps:          0       0       0       0       0       0       0       0
  5632 ;;      Totals:         0       0       0       0       0       0       0       0
  5633 ;;Total ram usage:        0 bytes
  5634 ;; Hardware stack levels used: 1
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_SYSTEM_Initialize
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642  0E31                     _WDT_Initialize:	
  5643                           ;psect for function _WDT_Initialize
  5644                           
  5645  0E31                     l1742:	
  5646                           ;incstack = 0
  5647                           ; Regs used in _WDT_Initialize: [wreg]
  5648                           
  5649                           
  5650                           ;mcc_generated_files/mcc.c: 70:     WDTCON = 0x16;
  5651  0E31  3016               	movlw	22
  5652  0E32  0021               	movlb	1	; select bank1
  5653  0E33  0097               	movwf	23	;volatile
  5654  0E34                     l23:
  5655  0E34  0008               	return
  5656  0E35                     __end_of_WDT_Initialize:
  5657                           
  5658                           	psect	text23
  5659  0EDB                     __ptext23:	
  5660 ;; *************** function _PIN_MANAGER_Initialize *****************
  5661 ;; Defined at:
  5662 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5676 ;;      Params:         0       0       0       0       0       0       0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0
  5679 ;;      Totals:         0       0       0       0       0       0       0       0
  5680 ;;Total ram usage:        0 bytes
  5681 ;; Hardware stack levels used: 1
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_SYSTEM_Initialize
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689  0EDB                     _PIN_MANAGER_Initialize:	
  5690                           ;psect for function _PIN_MANAGER_Initialize
  5691                           
  5692  0EDB                     l1722:	
  5693                           ;incstack = 0
  5694                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5695                           
  5696                           
  5697                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5698  0EDB  0022               	movlb	2	; select bank2
  5699  0EDC  018C               	clrf	12	;volatile
  5700                           
  5701                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5702  0EDD  018D               	clrf	13	;volatile
  5703                           
  5704                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5705  0EDE  018E               	clrf	14	;volatile
  5706  0EDF                     l1724:
  5707                           
  5708                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  5709  0EDF  303F               	movlw	63
  5710  0EE0  0021               	movlb	1	; select bank1
  5711  0EE1  008C               	movwf	12	;volatile
  5712  0EE2                     l1726:
  5713                           
  5714                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  5715  0EE2  3070               	movlw	112
  5716  0EE3  008D               	movwf	13	;volatile
  5717  0EE4                     l1728:
  5718                           
  5719                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  5720  0EE4  30FF               	movlw	255
  5721  0EE5  008E               	movwf	14	;volatile
  5722  0EE6                     l1730:
  5723                           
  5724                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  5725  0EE6  30CF               	movlw	207
  5726  0EE7  0023               	movlb	3	; select bank3
  5727  0EE8  008E               	movwf	14	;volatile
  5728  0EE9                     l1732:
  5729                           
  5730                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x10;
  5731  0EE9  3010               	movlw	16
  5732  0EEA  008D               	movwf	13	;volatile
  5733  0EEB                     l1734:
  5734                           
  5735                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  5736  0EEB  3017               	movlw	23
  5737  0EEC  008C               	movwf	12	;volatile
  5738                           
  5739                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5740  0EED  0024               	movlb	4	; select bank4
  5741  0EEE  018D               	clrf	13	;volatile
  5742                           
  5743                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5744  0EEF  018C               	clrf	12	;volatile
  5745  0EF0                     l1736:
  5746                           
  5747                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  5748  0EF0  0021               	movlb	1	; select bank1
  5749  0EF1  1795               	bsf	21,7	;volatile
  5750                           
  5751                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  5752  0EF2  0022               	movlb	2	; select bank2
  5753  0EF3  019D               	clrf	29	;volatile
  5754  0EF4                     l52:
  5755  0EF4  0008               	return
  5756  0EF5                     __end_of_PIN_MANAGER_Initialize:
  5757                           
  5758                           	psect	text24
  5759  0E4C                     __ptext24:	
  5760 ;; *************** function _OSCILLATOR_Initialize *****************
  5761 ;; Defined at:
  5762 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5776 ;;      Params:         0       0       0       0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0
  5779 ;;      Totals:         0       0       0       0       0       0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used: 1
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_SYSTEM_Initialize
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789  0E4C                     _OSCILLATOR_Initialize:	
  5790                           ;psect for function _OSCILLATOR_Initialize
  5791                           
  5792  0E4C                     l1738:	
  5793                           ;incstack = 0
  5794                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5795                           
  5796                           
  5797                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x58;
  5798  0E4C  3058               	movlw	88
  5799  0E4D  0021               	movlb	1	; select bank1
  5800  0E4E  0099               	movwf	25	;volatile
  5801  0E4F                     l1740:
  5802                           
  5803                           ;mcc_generated_files/mcc.c: 64:     BORCON = 0x00;
  5804  0E4F  0022               	movlb	2	; select bank2
  5805  0E50  0196               	clrf	22	;volatile
  5806  0E51                     l20:
  5807  0E51  0008               	return
  5808  0E52                     __end_of_OSCILLATOR_Initialize:
  5809                           
  5810                           	psect	text25
  5811  0F0F                     __ptext25:	
  5812 ;; *************** function _EUSART_Initialize *****************
  5813 ;; Defined at:
  5814 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2, status,0, pclath, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5828 ;;      Params:         0       0       0       0       0       0       0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0
  5831 ;;      Totals:         0       0       0       0       0       0       0       0
  5832 ;;Total ram usage:        0 bytes
  5833 ;; Hardware stack levels used: 1
  5834 ;; Hardware stack levels required when called: 1
  5835 ;; This function calls:
  5836 ;;		_EUSART_SetErrorHandler
  5837 ;;		_EUSART_SetFramingErrorHandler
  5838 ;;		_EUSART_SetOverrunErrorHandler
  5839 ;; This function is called by:
  5840 ;;		_SYSTEM_Initialize
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844  0F0F                     _EUSART_Initialize:	
  5845                           ;psect for function _EUSART_Initialize
  5846                           
  5847  0F0F                     l1744:	
  5848                           ;incstack = 0
  5849                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5850                           
  5851                           
  5852                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  5853  0F0F  3008               	movlw	8
  5854  0F10  0023               	movlb	3	; select bank3
  5855  0F11  009F               	movwf	31	;volatile
  5856                           
  5857                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  5858  0F12  3090               	movlw	144
  5859  0F13  009D               	movwf	29	;volatile
  5860                           
  5861                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  5862  0F14  3024               	movlw	36
  5863  0F15  009E               	movwf	30	;volatile
  5864                           
  5865                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x19;
  5866  0F16  3019               	movlw	25
  5867  0F17  009B               	movwf	27	;volatile
  5868  0F18                     l1746:
  5869                           
  5870                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5871  0F18  019C               	clrf	28	;volatile
  5872  0F19                     l1748:
  5873                           
  5874                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5875  0F19  3000               	movlw	0
  5876  0F1A  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5877  0F1B  3000               	movlw	0
  5878  0F1C  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5879  0F1D  318E  2640  318F   	fcall	_EUSART_SetFramingErrorHandler
  5880  0F20                     l1750:
  5881                           
  5882                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5883  0F20  3000               	movlw	0
  5884  0F21  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5885  0F22  3000               	movlw	0
  5886  0F23  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5887  0F24  318E  2646  318F   	fcall	_EUSART_SetOverrunErrorHandler
  5888  0F27                     l1752:
  5889                           
  5890                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5891  0F27  3000               	movlw	0
  5892  0F28  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  5893  0F29  3000               	movlw	0
  5894  0F2A  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5895  0F2B  318E  263A  318F   	fcall	_EUSART_SetErrorHandler
  5896  0F2E                     l1754:
  5897                           
  5898                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5899  0F2E  0021               	movlb	1	; select bank1
  5900  0F2F  01A4               	clrf	_eusartRxLastError^(0+128)	;volatile
  5901  0F30                     l98:
  5902  0F30  0008               	return
  5903  0F31                     __end_of_EUSART_Initialize:
  5904                           
  5905                           	psect	text26
  5906  0E46                     __ptext26:	
  5907 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5908 ;; Defined at:
  5909 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5912 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;		None
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      void 
  5917 ;; Registers used:
  5918 ;;		wreg
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5924 ;;      Params:         2       0       0       0       0       0       0       0
  5925 ;;      Locals:         0       0       0       0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0       0
  5927 ;;      Totals:         2       0       0       0       0       0       0       0
  5928 ;;Total ram usage:        2 bytes
  5929 ;; Hardware stack levels used: 1
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_EUSART_Initialize
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937  0E46                     _EUSART_SetOverrunErrorHandler:	
  5938                           ;psect for function _EUSART_SetOverrunErrorHandler
  5939                           
  5940  0E46                     l1658:	
  5941                           ;incstack = 0
  5942                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5943                           
  5944                           
  5945                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  5946  0E46  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5947  0E47  0021               	movlb	1	; select bank1
  5948  0E48  00E5               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5949  0E49  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5950  0E4A  00E4               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5951  0E4B                     l140:
  5952  0E4B  0008               	return
  5953  0E4C                     __end_of_EUSART_SetOverrunErrorHandler:
  5954                           
  5955                           	psect	text27
  5956  0E40                     __ptext27:	
  5957 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5958 ;; Defined at:
  5959 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5962 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;		None
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1    wreg      void 
  5967 ;; Registers used:
  5968 ;;		wreg
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5974 ;;      Params:         2       0       0       0       0       0       0       0
  5975 ;;      Locals:         0       0       0       0       0       0       0       0
  5976 ;;      Temps:          0       0       0       0       0       0       0       0
  5977 ;;      Totals:         2       0       0       0       0       0       0       0
  5978 ;;Total ram usage:        2 bytes
  5979 ;; Hardware stack levels used: 1
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_EUSART_Initialize
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987  0E40                     _EUSART_SetFramingErrorHandler:	
  5988                           ;psect for function _EUSART_SetFramingErrorHandler
  5989                           
  5990  0E40                     l1656:	
  5991                           ;incstack = 0
  5992                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5993                           
  5994                           
  5995                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  5996  0E40  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5997  0E41  0021               	movlb	1	; select bank1
  5998  0E42  00E7               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5999  0E43  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6000  0E44  00E6               	movwf	_EUSART_FramingErrorHandler^(0+128)
  6001  0E45                     l137:
  6002  0E45  0008               	return
  6003  0E46                     __end_of_EUSART_SetFramingErrorHandler:
  6004                           
  6005                           	psect	text28
  6006  0E3A                     __ptext28:	
  6007 ;; *************** function _EUSART_SetErrorHandler *****************
  6008 ;; Defined at:
  6009 ;;		line 165 in file "mcc_generated_files/eusart.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6012 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6024 ;;      Params:         2       0       0       0       0       0       0       0
  6025 ;;      Locals:         0       0       0       0       0       0       0       0
  6026 ;;      Temps:          0       0       0       0       0       0       0       0
  6027 ;;      Totals:         2       0       0       0       0       0       0       0
  6028 ;;Total ram usage:        2 bytes
  6029 ;; Hardware stack levels used: 1
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_EUSART_Initialize
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037  0E3A                     _EUSART_SetErrorHandler:	
  6038                           ;psect for function _EUSART_SetErrorHandler
  6039                           
  6040  0E3A                     l1660:	
  6041                           ;incstack = 0
  6042                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6043                           
  6044                           
  6045                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6046  0E3A  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6047  0E3B  0021               	movlb	1	; select bank1
  6048  0E3C  00E3               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  6049  0E3D  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6050  0E3E  00E2               	movwf	_EUSART_ErrorHandler^(0+128)
  6051  0E3F                     l143:
  6052  0E3F  0008               	return
  6053  0E40                     __end_of_EUSART_SetErrorHandler:
  6054  007E                     btemp	set	126	;btemp
  6055  007E                     wtemp0	set	126
  6056                           
  6057                           	psect	idloc
  6058                           
  6059                           ;Config register IDLOC0 @ 0x8000
  6060                           ;	unspecified, using default values
  6061  8000                     	org	32768
  6062  8000  3FFF               	dw	16383
  6063                           
  6064                           ;Config register IDLOC1 @ 0x8001
  6065                           ;	unspecified, using default values
  6066  8001                     	org	32769
  6067  8001  3FFF               	dw	16383
  6068                           
  6069                           ;Config register IDLOC2 @ 0x8002
  6070                           ;	unspecified, using default values
  6071  8002                     	org	32770
  6072  8002  3FFF               	dw	16383
  6073                           
  6074                           ;Config register IDLOC3 @ 0x8003
  6075                           ;	unspecified, using default values
  6076  8003                     	org	32771
  6077  8003  3FFF               	dw	16383
  6078                           
  6079                           	psect	config
  6080                           
  6081                           ;Config register CONFIG1 @ 0x8007
  6082                           ;	Oscillator Selection Bits
  6083                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6084                           ;	Watchdog Timer Enable
  6085                           ;	WDTE = OFF, WDT disabled
  6086                           ;	Power-up Timer Enable
  6087                           ;	PWRTE = OFF, PWRT disabled
  6088                           ;	MCLR Pin Function Select
  6089                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6090                           ;	Flash Program Memory Code Protection
  6091                           ;	CP = OFF, Program memory code protection is disabled
  6092                           ;	Brown-out Reset Enable
  6093                           ;	BOREN = OFF, Brown-out Reset disabled
  6094                           ;	Clock Out Enable
  6095                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6096                           ;	Internal/External Switchover Mode
  6097                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  6098                           ;	Fail-Safe Clock Monitor Enable
  6099                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6100  8007                     	org	32775
  6101  8007  09E4               	dw	2532
  6102                           
  6103                           ;Config register CONFIG2 @ 0x8008
  6104                           ;	Flash Memory Self-Write Protection
  6105                           ;	WRT = OFF, Write protection off
  6106                           ;	Stack Overflow/Underflow Reset Enable
  6107                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6108                           ;	Brown-out Reset Voltage Selection
  6109                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6110                           ;	Low-Power Brown Out Reset
  6111                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6112                           ;	Low-Voltage Programming Enable
  6113                           ;	LVP = ON, Low-voltage programming enabled
  6114  8008                     	org	32776
  6115  8008  3FFF               	dw	16383

Data Sizes:
    Strings     113
    Constant    0
    Data        3
    BSS         41
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     29      75
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_27(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), 
		 -> STR_15(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_27(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), 
		 -> STR_15(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_27(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), 
		 -> STR_15(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@age_str(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S647$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S647$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    EUSART_Write_Text@textData	PTR unsigned char  size(2) Largest target is 32
		 -> STR_29(CODE[9]), STR_28(CODE[7]), STR_26(CODE[9]), STR_25(CODE[7]), 
		 -> STR_23(CODE[9]), STR_22(CODE[7]), STR_20(CODE[9]), STR_19(CODE[7]), 
		 -> STR_17(CODE[9]), STR_16(CODE[7]), STR_14(CODE[9]), STR_13(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), main@age_str(BANK1[10]), STR_8(CODE[24]), 
		 -> STR_7(CODE[8]), STR_6(CODE[7]), STR_5(CODE[32]), STR_4(CODE[7]), 
		 -> STR_3(CODE[21]), STR_2(CODE[7]), STR_1(CODE[8]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _user_wait->_EUSART_Write_Text
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _correct_guess->_EUSART_Write_Text
    _confuse_guess->_EUSART_Write_Text
    _EUSART_Write_Text->_EUSART_Write
    _EUSART_Write_Text->_EUSART_is_tx_ready
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   18231
                                             74 BANK0      2     2      0
                                             12 BANK1     17    17      0
                  _EUSART_Write_Text
                  _SYSTEM_Initialize
                      _confuse_guess
                      _correct_guess
                            _sprintf
                          _user_wait
 ---------------------------------------------------------------------------------
 (1) _user_wait                                            2     2      0    2409
                                              7 COMMON     2     2      0
                        _EUSART_Read
                  _EUSART_Write_Text
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    6766
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _correct_guess                                        1     1      0    2408
                                              7 COMMON     1     1      0
                  _EUSART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _confuse_guess                                        0     0      0    2386
                  _EUSART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    6     4      2    2386
                                              1 COMMON     6     4      2
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Write_Text
     _EUSART_Write
     _EUSART_is_tx_ready
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _confuse_guess
     _EUSART_Write_Text
   _correct_guess
     _EUSART_Write_Text
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _user_wait
     _EUSART_Read
     _EUSART_Write_Text
     _EUSART_is_rx_ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1D      4B       8       93.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      A9      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 17 09:25:32 2022

                                _confuse_guess 0E74                                             l20 0E51  
                                           l23 0E34                                             l17 0E64  
                                           l52 0EF4                                             l98 0F30  
                                          l103 0E73                                            l122 0006  
                                          l106 0E39                                            l115 0E84  
                                          l140 0E4B                                            l125 000E  
                                          l230 07E0                                            l214 0644  
                                          l143 0E3F                                            l119 0E93  
                                          l137 0E45                                            l225 06DC  
                                          l181 0EAA                                            l430 024A  
                                          l174 0EC1                                            l431 025B  
                                          l168 0040                                            l184 0E82  
                                          l185 0E82                                            l417 034B  
                                          l178 0EA9                                            l418 035C  
                                          l179 0EA9                                            l810 007D  
                                          l812 0096                                            l820 03C7  
                                          l821 03DD                                            l807 005B  
                                          l815 03A6                                            l824 044C  
                                          l816 03AF                                            l852 0FAD  
                                          l780 0F54                                            l845 0171  
                                          l838 04BF                                            l871 0FFF  
                                          l856 0F0E                                            l882 0004  
                                          l859 0F0E                                            l879 0F7C  
                                          l888 0EDA                                            u950 0FB3  
                                          u951 0FB2                                            u960 0FB8  
                                          u961 0FB7                                            u970 0FC7  
                                          u971 0FC6                                            u980 0FE5  
                                          u981 0FE4                                            u990 0F7C  
                                          u991 0F7B                                            u985 0FE1  
                                          _abs 0EF5                                            _pad 0041  
               ?_EUSART_SetFramingErrorHandler 0070                                            wreg 0009  
                                  main@age_str 00D1                      EUSART_Write_Text@textData 0071  
                                 ?_EUSART_Read 0070                                           l2000 0731  
                                         l2010 075F                                           l2002 0742  
                                         ?_abs 0073                                           l2020 0791  
                                         l2004 0749                                           l2012 0763  
                                         l2030 07B8                                           l2022 0796  
                                         l2014 076A                                           l2006 0750  
                                         l2040 07D9                                           l2032 07BF  
                                         l2024 0799                                           l2016 0771  
                                         l2008 0757                                           l2034 07C6  
                                         l2026 07A0                                           l2018 0775  
                                         l1500 0ED4                                           l2036 07CE  
                                         l2028 07B1                                           l1510 0288  
                                         l2038 07D2                                           l1520 02CC  
                                         l1512 0292                                           l1504 025C  
                                         l1600 036F                                           l1530 02E7  
                                         l1522 02CF                                           l1514 02B1  
                                         l1506 025D                                           l1610 03C2  
                                         l1602 0382                                           l1540 032D  
                                         l1532 0309                                           l1524 02D7  
                                         l1516 02B5                                           l1508 0267  
                                         l1620 03E4                                           l1612 03CF  
                                         l1604 0388                                           l1700 012A  
                                         l1534 0319                                           l1526 02DB  
                                         l1518 02BF                                           l1550 01A8  
                                         l1542 0172                                           l1470 0FAE  
                                         l1630 045A                                           l1622 03E9  
                                         l1614 03D5                                           l1606 03AB  
                                         l1710 014B                                           l1702 0132  
                                         l1536 031A                                           l1528 02DF  
                                         l1560 01E3                                           l1552 01C7  
                                         l1544 0173                                           l1480 0FE5  
                                         l1472 0FB3                                           l1640 048E  
                                         l1632 0467                                           l1624 0417  
                                         l1616 03D9                                           l1608 03BC  
                                         l1704 013D                                           l1730 0EE6  
                                         l1722 0EDB                                           l1802 0E58  
                                         l1538 0328                                           l1570 022C  
                                         l1562 01E7                                           l1554 01D4  
                                         l1546 017D                                           l1482 0FF6  
                                         l1474 0FB8                                           l1490 0F68  
                                         l1650 04A5                                           l1642 0492  
                                         l1634 0474                                           l1626 041B  
                                         l1618 03E1                                           l1714 014E  
                                         l1810 0EC0                                           l1660 0E3A  
                                         l1740 0E4F                                           l1732 0EE9  
                                         l1724 0EDF                                           l1564 0209  
                                         l1556 01D7                                           l1548 019E  
                                         l1476 0FBD                                           l1492 0F6D  
                                         l1580 0059                                           l1572 0043  
                                         l1644 0496                                           l1652 04AD  
                                         l1636 0482                                           l1628 041F  
                                         l1716 0167                                           l1708 0143  
                                         l1820 0F33                                           l1804 0EAB  
                                         l1900 0596                                           l1750 0F20  
                                         l1734 0EEB                                           l1726 0EE2  
                                         l1742 0E31                                           l1670 0E72  
                                         l1662 0E65                                           l1814 0E95  
                                         l1566 0219                                           l1558 01DF  
                                         l1478 0FC7                                           l1486 0F57  
                                         l1494 0EC3                                           l1590 008A  
                                         l1582 005E                                           l1574 0047  
                                         l1646 049C                                           l1638 0487  
                                         l1822 0F3B                                           l1806 0EB2  
                                         l1902 059D                                           l1910 05BA  
                                         l1656 0E40                                           l1752 0F27  
                                         l1744 0F0F                                           l1736 0EF0  
                                         l1728 0EE4                                           l1664 0E66  
                                         l1816 0E9B                                           l1568 0227  
                                         l1488 0F5A                                           l1496 0EC8  
                                         l1584 006A                                           l1576 004F  
                                         l1648 04A1                                           l1680 00AA  
                                         l1824 0F3D                                           l1760 0E84  
                                         l1808 0EBA                                           l1920 05DB  
                                         l1912 05C0                                           l1904 05A5  
                                         l1840 04C7                                           l1832 04C0  
                                         l1658 0E46                                           l1754 0F2E  
                                         l1746 0F18                                           l1738 0E4C  
                                         l1674 0006                                           l1666 0E6B  
                                         l1818 0E74                                           l1594 0EF5  
                                         l1498 0ECC                                           l1586 006F  
                                         l1578 0054                                           l1690 00DE  
                                         l1682 00B2                                           l1826 0F3F  
                                         l1762 0E89                                           l1930 0612  
                                         l1922 05F2                                           l1906 05A9  
                                         l1914 05C5                                           l1850 04DE  
                                         l1842 04C8                                           l1834 04C3  
                                         l1748 0F19                                           l1676 000B  
                                         l1668 0E70                                           l1772 000F  
                                         l1596 0F02                                           l1588 0082  
                                         l1692 00E6                                           l1684 00B8  
                                         l1828 0F4C                                           l1764 0E8B  
                                         l1756 0E35                                           l1940 0633  
                                         l1932 0619                                           l1924 05F7  
                                         l1908 05B0                                           l1860 0505  
                                         l1852 04E3                                           l1844 04C9  
                                         l1836 04C3                                           l1782 0025  
                                         l1774 0013                                           l1598 035F  
                                         l1694 00FF                                           l1686 00BC  
                                         l1678 0099                                           l1790 0F7F  
                                         l1766 0E90                                           l1950 065D  
                                         l1942 063A                                           l1934 0620  
                                         l1926 05FA                                           l1918 05CC  
                                         l1870 051F                                           l1862 050B  
                                         l1854 04F0                                           l1846 04D0  
                                         l1838 04C6                                           l1784 002D  
                                         l1776 001E                                           l1688 00CD  
                                         l1792 0F83                                           l1768 0E92  
                                         l1960 0692                                           l1952 0664  
                                         l1944 064A                                           l1936 0627  
                                         l1928 0601                                           l1880 0549  
                                         l1872 0523                                           l1864 0513  
                                         l1856 04F7                                           l1848 04D7  
                                         l1786 0037                                           l1778 0020  
                                         l1698 0119                                           l1794 0F87  
                                         l1970 06BF                                           l1962 0699  
                                         l1954 0673                                           l1946 0651  
                                         l1938 062F                                           l1890 056D  
                                         l1882 0551                                           l1874 0534  
                                         l1866 0515                                           l1858 04FE  
                                         l1788 003B                                           l1796 0F9B  
                                         l1980 06E9                                           l1972 06C7  
                                         l1964 06AA                                           l1956 068A  
                                         l1948 0657                                           l1892 0573  
                                         l1884 0555                                           l1876 053B  
                                         l1868 051A                                           l1798 0FA5  
                                         l1990 0702                                           l1974 06CB  
                                         l1966 06B1                                           l1958 068F  
                                         l1982 06EF                                           l1894 0577  
                                         l1886 055C                                           l1878 0542  
                                         ?_pad 0024                                           l1992 0706  
                                         l1984 06F5                                           l1976 06D2  
                                         l1968 06B8                                           l1896 0588  
                                         l1888 0566                                           l1994 0722  
                                         l1978 06E2                                           l1986 06FB  
                                         l1898 058F                                           l1996 0727  
                                         l1998 072A                                           STR_1 1056  
                                         STR_2 1066                                           STR_3 1038  
                                         STR_4 1066                                           STR_5 1000  
                                         STR_6 1066                                           STR_7 105E  
                                         STR_8 1020                                           STR_9 106D  
                                         u1000 0ED4                                           u1001 0ED3  
                                         u1010 0267                                           u1011 0266  
                                         u1100 032D                                           u1101 032C  
                                         u1030 0292                                           u1031 0291  
                                         u1200 022C                                           u1120 017D  
                                         u1201 022B                                           u1121 017C  
                                         u1050 02BC                                           u1060 02CC  
                                         u1140 01A8                                           u1220 0047  
                                         u1061 02CB                                           u1141 01A7  
                                         u1221 0046                                           u1070 02DF  
                                         u1230 0054                                           u1310 03AB  
                                         u1071 02DE                                           u1231 0053  
                                         u1311 03AA                                           u1080 0309  
                                         u1160 01D4                                           u1240 007D  
                                         u1400 048E                                           u1320 03BC  
                                         u1081 0308                                           u1161 01D3  
                                         u1241 007C                                           u1401 048D  
                                         u1321 03BB                                           u1090 0328  
                                         u1170 01E7                                           u1250 0082  
                                         u1410 0492                                           u1330 03D5  
                                         u1091 0327                                           u1171 01E6  
                                         u1251 0081                                           u1411 0491  
                                         u1331 03D4                                           u1180 0209  
                                         u1260 0F02                                           u1420 049C  
                                         u1340 03D9                                           u1500 0E89  
                                         u1085 0305                                           u1181 0208  
                                         u1261 0F01                                           u1245 0079  
                                         u1421 049B                                           u1341 03D8  
                                         u1325 03B8                                           u1501 0E88  
                                         _LATA 010C                                           u1430 0E6B  
                                         u1190 0227                                           u1350 045A  
                                         u1270 037A                                           u1510 0E90  
                                         _LATB 010D                                           u1431 0E6A  
                                         u1191 0226                                           u1351 0459  
                                         u1271 0378                                           u1511 0E8F  
                                         _LATC 010E                                           u1440 0E70  
                                         u1520 001E                                           u1360 0467  
                                         u1280 037B                                           u1600 051A  
                                         u1441 0E6F                                           u1521 001D  
                                         u1185 0205                                           u1265 0EFE  
                                         u1361 0466                                           u1601 0519  
                                         u1450 000B                                           u1530 0025  
                                         u1370 0474                                           u1290 0388  
                                         u1610 055C                                           u1451 000A  
                                         u1531 0024                                           u1371 0473  
                                         u1355 0456                                           u1291 0387  
                                         u1611 055B                                           u1540 002D  
                                         u1380 0482                                           u1460 00AA  
                                         u1700 063A                                           u1620 056D  
                                         u1541 002C                                           u1381 0481  
                                         u1461 00A9                                           u1701 0639  
                                         u1621 056C                                           u1550 0040  
                                         u1390 0487                                           u1470 00CD  
                                         u1710 064A                                           u1630 0572  
                                         u1551 003F                                           u1391 0486  
                                         u1375 0470                                           u1471 00CC  
                                         u1711 0649                                           u1631 0571  
                                         u1480 00DE                                           u1560 0FA5  
                                         u1800 0701                                           u1720 065D  
                                         u1640 05B0                                           u1385 047E  
                                         u1481 00DD                                           u1561 0FA4  
                                         u1801 0700                                           u1721 065C  
                                         u1641 05AF                                           u1490 012A  
                                         u1570 0EBA                                           u1810 0722  
                                         u1730 0663                                           u1650 05C0  
                                         u1491 0129                                           u1571 0EB9  
                                         u1811 0721                                           u1731 0662  
                                         u1651 05BF                                           u1580 0E9B  
                                         u1820 0727                                           u1740 068A  
                                         u1660 05C5                                           u1581 0E9A  
                                         u1821 0726                                           u1741 0689  
                                         u1661 05C4                                           u1830 076A  
                                         u1750 068F                                           u1670 05CB  
                                         u1590 050B                                           u1831 0769  
                                         u1815 071E                                           u1751 068E  
                                         u1671 05CA                                           u1591 050A  
                                         u1840 0770                                           u1760 06D2  
                                         u1680 05F2                                           u1841 076F  
                                         u1761 06D1                                           u1745 0686  
                                         u1681 05F1                                           u1850 0791  
                                         u1770 06E2                                           u1690 05F7  
                                         u1851 0790                                           u1771 06E1  
                                         u1691 05F6                                           u1860 0796  
                                         u1780 06F5                                           u1861 0795  
                                         u1781 06F4                                           u1685 05EE  
                                         u1870 07D9                                           u1790 06FB  
                                         u1871 07D8                                           u1855 078D  
                                         u1791 06FA                                           u1880 07DF  
                                         u1881 07DE                                           _WPUA 020C  
                                         _WPUB 020D                                           abs@a 0073  
                                         _dbuf 00A5                                           _main 04C0  
                                         _dtoa 035D                                           _prec 006C  
                                         _nout 00A0                                           pad@i 0027  
                                         pad@p 0025                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 0029  
                                         btemp 007E                                           start 0002  
                               ?_confuse_guess 0070                                          ??_abs 0075  
                                        ??_pad 007C                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0E52                                __end_of___aodiv 035D  
                                        ?_main 0070                                          ?_dtoa 0030  
                              __end_of___aomod 025C                                          STR_10 1066  
                                        STR_11 104D                                          STR_12 106D  
                                        STR_20 104D                                          STR_21 106D  
                                        STR_13 1066                                          STR_22 1066  
                                        STR_14 104D                                          STR_15 106D  
                                        STR_23 104D                                          STR_24 106D  
                                        STR_16 1066                                          STR_25 1066  
                                        STR_17 104D                                          STR_18 106D  
                                        STR_26 104D                                  _correct_guess 0E94  
                                        STR_27 106D                                          STR_19 1066  
                                        STR_28 1066                                          STR_29 104D  
                                        _RCREG 0199                                          _RCSTA 019D  
                                 vfpfcnvrt@fmt 004E                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                 main@init_age 00E0                                          _TXREG 019A  
                                        _TXSTA 019E                                          _flags 006E  
                               _WDT_Initialize 0E31                                          _fputc 0FAE  
                                        _fputs 0F55                                          pad@fp 002B  
                                        _width 00A2                                          _putch 0004  
                                        _steps 00E8                                          main@i 00DD  
                                        dtoa@d 0030                                          dtoa@i 004C  
                                        dtoa@n 0044                                          dtoa@p 003E  
                                        dtoa@s 0042                                          dtoa@w 0040  
                                        status 0003                                          wtemp0 007E  
                              __end_of_sprintf 0F55                                  main@age_track 00DB  
                              __initialization 07E3                                   __end_of_main 07E3  
                                 __end_of_dtoa 04C0                                 ??_EUSART_Write 0070  
                               ?_correct_guess 0070                                         ??_main 006A  
                                       ??_dtoa 0038                         __end_of_WDT_Initialize 0E35  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 00E4  
                                       ?_fputc 0070                                         ?_fputs 0078  
                                       _APFCON 011D                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                     __end_of_EUSART_is_rx_ready 0E3A  
                                       _BORCON 0116                     __end_of_EUSART_is_tx_ready 0E74  
                                       u102lld 0286                                         _OSCCON 0099  
                                       u111lld 034B                                         u104lld 02B1  
                                       u121lld 024A                                         u113lld 019C  
                                       u130lld 03A6                                         u115lld 01C7  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                ??_confuse_guess 0077  
                                 vfprintf@cfmt 0064                                      ??___aodiv 0070  
                                    ??___aomod 0070                                         pad@buf 0024  
                                       dtoa@fp 003D                                         _strlen 0EC2  
                                       fputc@c 0070                                         fputs@c 0020  
                                       fputs@i 0021                                         fputs@s 0023  
                              ?_WDT_Initialize 0070                                         putch@c 0070  
                             __end_of_vfprintf 0FAE                                      ??_sprintf 007D  
                            _SYSTEM_Initialize 0E58                        __end_of__initialization 07FD  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 0E2E                            ??_SYSTEM_Initialize 0072  
                              ??_correct_guess 0077                                  __end_of_fputc 1000  
                                __end_of_fputs 0F7D                                  __end_of_putch 0005  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                                      ??_fputc 0073                      __end_of_SYSTEM_Initialize 0E65  
                                      ??_fputs 0079                                        ??_putch 0070  
                                   __pbssBANK0 006C                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 000F                                     __pmaintext 04C0  
                                      _BAUDCON 019F                                        ?_strlen 0070  
                     ??_EUSART_SetErrorHandler 0072                              user_wait@user_res 0078  
                                      ___aodiv 025C                                        ___aomod 0172  
                                    ?_vfprintf 005E                                        __ptext1 0EAB  
                                      __ptext2 0E35                                        __ptext3 0E84  
                                      __ptext4 0F31                                        __ptext5 0F7D  
                                      __ptext6 0097                                        __ptext7 035D  
                                      __ptext8 0041                                        __ptext9 0EC2  
                        _OSCILLATOR_Initialize 0E4C                       ??_PIN_MANAGER_Initialize 0070  
                                      _sprintf 0F31                                        clrloop0 0E53  
                         end_of_initialization 07FD          __end_of_EUSART_SetOverrunErrorHandler 0E4C  
                _EUSART_SetOverrunErrorHandler 0E46                                        fputc@fp 0072  
                                      fputs@fp 0078                              _EUSART_Initialize 0F0F  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0172  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0E35  
                           _EUSART_is_tx_ready 0E65                                     ??_vfprintf 0061  
                                      strlen@a 0073                                        strlen@s 0074  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                            __end_of_user_wait 0EC2                            ?_EUSART_is_rx_ready 0070  
                          ?_EUSART_is_tx_ready 0070                                 main@user_input 00DF  
                    __end_of_EUSART_Initialize 0F31                           ??_EUSART_is_rx_ready 0070  
                         ??_EUSART_is_tx_ready 0070                                      _TXSTAbits 019E  
                        __end_of_confuse_guess 0E84                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 004F                                    vfpfcnvrt@fp 005D  
                                  vfpfcnvrt@ll 0055                                   _EUSART_Write 0005  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_strlen 0EDB  
                          start_initialization 07E3                                    __end_of_abs 0F0F  
                                  __end_of_pad 0097                                  ??_EUSART_Read 0070  
                       _EUSART_is_tx_ready$241 0070                              _EUSART_Write_Text 000F  
                           ?_EUSART_Write_Text 0071                 ?_EUSART_SetOverrunErrorHandler 0070  
                                  vfprintf@fmt 005E                     _EUSART_FramingErrorHandler 00E6  
                       _EUSART_SetErrorHandler 0E3A                                    __pdataBANK1 00E8  
                          ??_EUSART_Write_Text 0073                          __end_of_correct_guess 0EAB  
                                     ??_strlen 0072                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00C5  
                             ___aodiv@dividend 0028                      __end_of_EUSART_Write_Text 0041  
                          __end_of_EUSART_Read 0E94                                      __pnvBANK1 00E2  
                       _PIN_MANAGER_Initialize 0EDB                                       ?___aodiv 0020  
                                     ?___aomod 0020                               ___aodiv@quotient 0073  
                     EUSART_Write_Text@endTrig 0076                                       ?_sprintf 0066  
       EUSART_SetErrorHandler@interruptHandler 0070                                      clear_ram0 0E52  
                            _eusartRxLastError 00A4                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072              _EUSART_DefaultOverrunErrorHandler 0000  
                                    _vfpfcnvrt 0097                                      _user_wait 0EAB  
                                    main@state 00DE                                    _EUSART_Read 0E84  
                                   vfprintf@ap 0060                                     vfprintf@fp 0063  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 00E2  
                                   ?_vfpfcnvrt 004E                                ___aodiv@divisor 0020  
                        correct_guess@user_res 0077                                ___aodiv@counter 0071  
                                   sprintf@fmt 0066                                     ?_user_wait 0070  
                                     _dtoa$729 003B                                       __ptext10 0F55  
                                     __ptext11 0FAE                                       __ptext20 0005  
                                     __ptext12 0004                                       __ptext21 0E58  
                                     __ptext13 0EF5                                       __ptext22 0E31  
                                     __ptext14 0172                                       __ptext23 0EDB  
                                     __ptext15 025C                                       __ptext24 0E4C  
                                     __ptext16 0E94                                       __ptext25 0F0F  
                                     __ptext17 0E74                                       __ptext26 0E46  
                                     __ptext18 000F                                       __ptext27 0E40  
                                     __ptext19 0E65                                       __ptext28 0E3A  
                      ?_EUSART_SetErrorHandler 0070  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                     _vfprintf 0F7D          __end_of_EUSART_SetFramingErrorHandler 0E46  
                _EUSART_SetFramingErrorHandler 0E40                               ___aomod@dividend 0028  
                                    sprintf@ap 00C5                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0E40  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                              ___aomod@divisor 0020                                    ??_vfpfcnvrt 0050  
                              ___aomod@counter 0071                                  __pstringtext1 1000  
                                __pstringtext2 1020                                  __pstringtext3 1038  
                                __pstringtext4 104D                                  __pstringtext5 1056  
                                __pstringtext6 105E                                  __pstringtext7 1066  
                                __pstringtext8 106D                                  __pstringtext9 0000  
                                     sprintf@f 00C7                                       sprintf@s 00C6  
                                  ??_user_wait 0077                             EUSART_Write@txData 0070  
                                 ___aodiv@sign 0072                 __end_of_PIN_MANAGER_Initialize 0EF5  
                                 ___aomod@sign 0072                             EUSART_Write_Text@i 0074  
