

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 05 23:04:18 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1509 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011D                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  018E                     	;# 
   135  0191                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0194                     	;# 
   141  0195                     	;# 
   142  0196                     	;# 
   143  0197                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  0394                     	;# 
   173  0395                     	;# 
   174  0396                     	;# 
   175  0498                     	;# 
   176  0498                     	;# 
   177  0499                     	;# 
   178  049A                     	;# 
   179  049B                     	;# 
   180  049B                     	;# 
   181  049C                     	;# 
   182  049D                     	;# 
   183  049E                     	;# 
   184  049F                     	;# 
   185  0611                     	;# 
   186  0612                     	;# 
   187  0613                     	;# 
   188  0613                     	;# 
   189  0614                     	;# 
   190  0615                     	;# 
   191  0616                     	;# 
   192  0616                     	;# 
   193  0617                     	;# 
   194  0618                     	;# 
   195  0619                     	;# 
   196  0619                     	;# 
   197  061A                     	;# 
   198  061B                     	;# 
   199  061C                     	;# 
   200  061C                     	;# 
   201  0691                     	;# 
   202  0692                     	;# 
   203  0693                     	;# 
   204  0694                     	;# 
   205  0695                     	;# 
   206  0F0F                     	;# 
   207  0F10                     	;# 
   208  0F11                     	;# 
   209  0F12                     	;# 
   210  0F13                     	;# 
   211  0F14                     	;# 
   212  0F15                     	;# 
   213  0F16                     	;# 
   214  0F17                     	;# 
   215  0F18                     	;# 
   216  0F19                     	;# 
   217  0F1A                     	;# 
   218  0F1B                     	;# 
   219  0F1C                     	;# 
   220  0F1D                     	;# 
   221  0F1E                     	;# 
   222  0F1F                     	;# 
   223  0F20                     	;# 
   224  0F21                     	;# 
   225  0F22                     	;# 
   226  0F23                     	;# 
   227  0F24                     	;# 
   228  0F25                     	;# 
   229  0F26                     	;# 
   230  0F27                     	;# 
   231  0F28                     	;# 
   232  0F29                     	;# 
   233  0F2A                     	;# 
   234  0F2B                     	;# 
   235  0F2C                     	;# 
   236  0F2D                     	;# 
   237  0F2E                     	;# 
   238  0F2F                     	;# 
   239  0F8C                     	;# 
   240  0F8D                     	;# 
   241  0F91                     	;# 
   242  0F95                     	;# 
   243  0F96                     	;# 
   244  0F97                     	;# 
   245  0F9C                     	;# 
   246  0F9D                     	;# 
   247  0F9E                     	;# 
   248  0FE3                     	;# 
   249  0FE4                     	;# 
   250  0FE5                     	;# 
   251  0FE6                     	;# 
   252  0FE7                     	;# 
   253  0FE8                     	;# 
   254  0FE9                     	;# 
   255  0FEA                     	;# 
   256  0FEB                     	;# 
   257  0FED                     	;# 
   258  0FEE                     	;# 
   259  0FEF                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  0011                     	;# 
   276  0012                     	;# 
   277  0013                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0016                     	;# 
   281  0017                     	;# 
   282  0018                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001B                     	;# 
   286  001C                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  0111                     	;# 
   308  0112                     	;# 
   309  0113                     	;# 
   310  0114                     	;# 
   311  0115                     	;# 
   312  0116                     	;# 
   313  0117                     	;# 
   314  0118                     	;# 
   315  0119                     	;# 
   316  011D                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  018E                     	;# 
   320  0191                     	;# 
   321  0191                     	;# 
   322  0192                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0194                     	;# 
   326  0195                     	;# 
   327  0196                     	;# 
   328  0197                     	;# 
   329  0199                     	;# 
   330  019A                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019C                     	;# 
   334  019D                     	;# 
   335  019E                     	;# 
   336  019F                     	;# 
   337  020C                     	;# 
   338  020D                     	;# 
   339  0211                     	;# 
   340  0211                     	;# 
   341  0212                     	;# 
   342  0212                     	;# 
   343  0213                     	;# 
   344  0213                     	;# 
   345  0214                     	;# 
   346  0214                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0216                     	;# 
   351  0216                     	;# 
   352  0217                     	;# 
   353  0217                     	;# 
   354  0391                     	;# 
   355  0392                     	;# 
   356  0393                     	;# 
   357  0394                     	;# 
   358  0395                     	;# 
   359  0396                     	;# 
   360  0498                     	;# 
   361  0498                     	;# 
   362  0499                     	;# 
   363  049A                     	;# 
   364  049B                     	;# 
   365  049B                     	;# 
   366  049C                     	;# 
   367  049D                     	;# 
   368  049E                     	;# 
   369  049F                     	;# 
   370  0611                     	;# 
   371  0612                     	;# 
   372  0613                     	;# 
   373  0613                     	;# 
   374  0614                     	;# 
   375  0615                     	;# 
   376  0616                     	;# 
   377  0616                     	;# 
   378  0617                     	;# 
   379  0618                     	;# 
   380  0619                     	;# 
   381  0619                     	;# 
   382  061A                     	;# 
   383  061B                     	;# 
   384  061C                     	;# 
   385  061C                     	;# 
   386  0691                     	;# 
   387  0692                     	;# 
   388  0693                     	;# 
   389  0694                     	;# 
   390  0695                     	;# 
   391  0F0F                     	;# 
   392  0F10                     	;# 
   393  0F11                     	;# 
   394  0F12                     	;# 
   395  0F13                     	;# 
   396  0F14                     	;# 
   397  0F15                     	;# 
   398  0F16                     	;# 
   399  0F17                     	;# 
   400  0F18                     	;# 
   401  0F19                     	;# 
   402  0F1A                     	;# 
   403  0F1B                     	;# 
   404  0F1C                     	;# 
   405  0F1D                     	;# 
   406  0F1E                     	;# 
   407  0F1F                     	;# 
   408  0F20                     	;# 
   409  0F21                     	;# 
   410  0F22                     	;# 
   411  0F23                     	;# 
   412  0F24                     	;# 
   413  0F25                     	;# 
   414  0F26                     	;# 
   415  0F27                     	;# 
   416  0F28                     	;# 
   417  0F29                     	;# 
   418  0F2A                     	;# 
   419  0F2B                     	;# 
   420  0F2C                     	;# 
   421  0F2D                     	;# 
   422  0F2E                     	;# 
   423  0F2F                     	;# 
   424  0F8C                     	;# 
   425  0F8D                     	;# 
   426  0F91                     	;# 
   427  0F95                     	;# 
   428  0F96                     	;# 
   429  0F97                     	;# 
   430  0F9C                     	;# 
   431  0F9D                     	;# 
   432  0F9E                     	;# 
   433  0FE3                     	;# 
   434  0FE4                     	;# 
   435  0FE5                     	;# 
   436  0FE6                     	;# 
   437  0FE7                     	;# 
   438  0FE8                     	;# 
   439  0FE9                     	;# 
   440  0FEA                     	;# 
   441  0FEB                     	;# 
   442  0FED                     	;# 
   443  0FEE                     	;# 
   444  0FEF                     	;# 
   445  000E                     _PORTCbits	set	14
   446  008E                     _TRISC	set	142
   447  008D                     _TRISB	set	141
   448  010D                     _LATBbits	set	269
   449  010D                     _LATB	set	269
   450  010E                     _LATC	set	270
   451  018D                     _ANSELB	set	397
   452  018E                     _ANSELC	set	398
   453                           
   454                           	psect	stringtext1
   455  1000                     __pstringtext1:
   456  1000                     STR_1:
   457  1000  344E               	retlw	78	;'N'
   458  1001  3447               	retlw	71	;'G'
   459  1002  3455               	retlw	85	;'U'
   460  1003  3459               	retlw	89	;'Y'
   461  1004  3445               	retlw	69	;'E'
   462  1005  344E               	retlw	78	;'N'
   463  1006  3420               	retlw	32	;' '
   464  1007  3448               	retlw	72	;'H'
   465  1008  3441               	retlw	65	;'A'
   466  1009  3449               	retlw	73	;'I'
   467  100A  3420               	retlw	32	;' '
   468  100B  3444               	retlw	68	;'D'
   469  100C  3441               	retlw	65	;'A'
   470  100D  344E               	retlw	78	;'N'
   471  100E  3447               	retlw	71	;'G'
   472  100F  3400               	retlw	0
   473                           
   474                           	psect	stringtext2
   475  1010                     __pstringtext2:
   476  1010                     STR_3:
   477  1010  3425               	retlw	37	;'%'
   478  1011  3464               	retlw	100	;'d'
   479  1012  3425               	retlw	37	;'%'
   480  1013  3464               	retlw	100	;'d'
   481  1014  343A               	retlw	58	;':'
   482  1015  3425               	retlw	37	;'%'
   483  1016  3464               	retlw	100	;'d'
   484  1017  3425               	retlw	37	;'%'
   485  1018  3464               	retlw	100	;'d'
   486  1019  343A               	retlw	58	;':'
   487  101A  3425               	retlw	37	;'%'
   488  101B  3464               	retlw	100	;'d'
   489  101C  3425               	retlw	37	;'%'
   490  101D  3464               	retlw	100	;'d'
   491  101E  3400               	retlw	0
   492                           
   493                           	psect	stringtext3
   494  101F                     __pstringtext3:
   495  101F                     STR_2:
   496  101F  3430               	retlw	48	;'0'
   497  1020  3430               	retlw	48	;'0'
   498  1021  343A               	retlw	58	;':'
   499  1022  3430               	retlw	48	;'0'
   500  1023  3430               	retlw	48	;'0'
   501  1024  343A               	retlw	58	;':'
   502  1025  3430               	retlw	48	;'0'
   503  1026  3430               	retlw	48	;'0'
   504  1027  3400               	retlw	0
   505                           
   506                           	psect	stringtext4
   507  0000                     __pstringtext4:
   508                           
   509                           	psect	cinit
   510  07ED                     start_initialization:	
   511                           ; #config settings
   512                           
   513  07ED                     __initialization:
   514                           
   515                           ; Clear objects allocated to BANK0
   516  07ED  3066               	movlw	low __pbssBANK0
   517  07EE  0084               	movwf	4
   518  07EF  3000               	movlw	high __pbssBANK0
   519  07F0  0085               	movwf	5
   520  07F1  3008               	movlw	8
   521  07F2  3180  200D  3187   	fcall	clear_ram0
   522                           
   523                           ; Clear objects allocated to BANK2
   524  07F5  3020               	movlw	low __pbssBANK2
   525  07F6  0084               	movwf	4
   526  07F7  3001               	movlw	high __pbssBANK2
   527  07F8  0085               	movwf	5
   528  07F9  3020               	movlw	32
   529  07FA  3180  200D  3187   	fcall	clear_ram0
   530  07FD                     end_of_initialization:	
   531                           ;End of C runtime variable initialization code
   532                           
   533  07FD                     __end_of__initialization:
   534  07FD  0020               	movlb	0
   535  07FE  3185  2D85         	ljmp	_main	;jump to C main() function
   536                           
   537                           	psect	bssBANK0
   538  0066                     __pbssBANK0:
   539  0066                     _nout:
   540  0066                     	ds	2
   541  0068                     _width:
   542  0068                     	ds	2
   543  006A                     _prec:
   544  006A                     	ds	2
   545  006C                     _flags:
   546  006C                     	ds	2
   547                           
   548                           	psect	bssBANK2
   549  0120                     __pbssBANK2:
   550  0120                     _dbuf:
   551  0120                     	ds	32
   552                           
   553                           	psect	clrtext
   554  000D                     clear_ram0:	
   555                           ;	Called with FSR0 containing the base address, and
   556                           ;	WREG with the size to clear
   557                           
   558  000D  0064               	clrwdt	;clear the watchdog before getting into this loop
   559  000E                     clrloop0:
   560  000E  0180               	clrf	0	;clear RAM location pointed to by FSR
   561  000F  3101               	addfsr 0,1
   562  0010  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   563  0011  280E               	goto	clrloop0	;have we reached the end yet?
   564  0012  3400               	retlw	0	;all done for this memory range, return
   565                           
   566                           	psect	cstackBANK1
   567  00A0                     __pcstackBANK1:
   568  00A0                     ?_sprintf:
   569  00A0                     sprintf@fmt:	
   570                           ; 2 bytes @ 0x0
   571                           
   572                           
   573                           ; 2 bytes @ 0x0
   574  00A0                     	ds	14
   575  00AE                     sprintf@ap:
   576                           
   577                           ; 1 bytes @ 0xE
   578  00AE                     	ds	1
   579  00AF                     sprintf@s:
   580                           
   581                           ; 1 bytes @ 0xF
   582  00AF                     	ds	1
   583  00B0                     sprintf@f:
   584                           
   585                           ; 10 bytes @ 0x10
   586  00B0                     	ds	10
   587  00BA                     ??_main:
   588                           
   589                           ; 1 bytes @ 0x1A
   590  00BA                     	ds	12
   591  00C6                     main@time_string:
   592                           
   593                           ; 9 bytes @ 0x26
   594  00C6                     	ds	9
   595  00CF                     main@hour_digit1:
   596                           
   597                           ; 1 bytes @ 0x2F
   598  00CF                     	ds	1
   599  00D0                     main@hour_digit2:
   600                           
   601                           ; 1 bytes @ 0x30
   602  00D0                     	ds	1
   603  00D1                     main@minute_digit1:
   604                           
   605                           ; 1 bytes @ 0x31
   606  00D1                     	ds	1
   607  00D2                     main@minute_digit2:
   608                           
   609                           ; 1 bytes @ 0x32
   610  00D2                     	ds	1
   611  00D3                     main@second_digit1:
   612                           
   613                           ; 1 bytes @ 0x33
   614  00D3                     	ds	1
   615  00D4                     main@second_digit2:
   616                           
   617                           ; 1 bytes @ 0x34
   618  00D4                     	ds	1
   619  00D5                     main@hour_counter:
   620                           
   621                           ; 1 bytes @ 0x35
   622  00D5                     	ds	1
   623  00D6                     main@minute_counter:
   624                           
   625                           ; 1 bytes @ 0x36
   626  00D6                     	ds	1
   627  00D7                     main@second_counter:
   628                           
   629                           ; 1 bytes @ 0x37
   630  00D7                     	ds	1
   631                           
   632                           	psect	cstackCOMMON
   633  0070                     __pcstackCOMMON:
   634  0070                     ?_LCDPutCmd:
   635  0070                     ?_putch:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ??_putch:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_LCD_Initialize:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_LCDWriteNibble:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_LCDPutChar:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_main:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ??___aodiv:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??___aomod:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_fputc:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_strlen:	
   663                           ; 2 bytes @ 0x0
   664                           
   665  0070                     ?___awdiv:	
   666                           ; 2 bytes @ 0x0
   667                           
   668  0070                     ?___awmod:	
   669                           ; 2 bytes @ 0x0
   670                           
   671  0070                     LCDWriteNibble@rs:	
   672                           ; 2 bytes @ 0x0
   673                           
   674  0070                     putch@c:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ___awdiv@divisor:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ___awmod@divisor:	
   681                           ; 2 bytes @ 0x0
   682                           
   683  0070                     fputc@c:	
   684                           ; 2 bytes @ 0x0
   685                           
   686                           
   687                           ; 2 bytes @ 0x0
   688  0070                     	ds	1
   689  0071                     ??_LCDWriteNibble:
   690  0071                     ___aodiv@counter:	
   691                           ; 1 bytes @ 0x1
   692                           
   693  0071                     ___aomod@counter:	
   694                           ; 1 bytes @ 0x1
   695                           
   696                           
   697                           ; 1 bytes @ 0x1
   698  0071                     	ds	1
   699  0072                     ??_strlen:
   700  0072                     LCDWriteNibble@ch:	
   701                           ; 1 bytes @ 0x2
   702                           
   703  0072                     ___aodiv@sign:	
   704                           ; 1 bytes @ 0x2
   705                           
   706  0072                     ___aomod@sign:	
   707                           ; 1 bytes @ 0x2
   708                           
   709  0072                     fputc@fp:	
   710                           ; 1 bytes @ 0x2
   711                           
   712  0072                     ___awdiv@dividend:	
   713                           ; 1 bytes @ 0x2
   714                           
   715  0072                     ___awmod@dividend:	
   716                           ; 2 bytes @ 0x2
   717                           
   718                           
   719                           ; 2 bytes @ 0x2
   720  0072                     	ds	1
   721  0073                     ??_LCDPutCmd:
   722  0073                     ??_fputc:	
   723                           ; 1 bytes @ 0x3
   724                           
   725  0073                     ??_LCDPutChar:	
   726                           ; 1 bytes @ 0x3
   727                           
   728  0073                     ?_abs:	
   729                           ; 1 bytes @ 0x3
   730                           
   731  0073                     strlen@a:	
   732                           ; 2 bytes @ 0x3
   733                           
   734  0073                     abs@a:	
   735                           ; 1 bytes @ 0x3
   736                           
   737  0073                     ___aodiv@quotient:	
   738                           ; 2 bytes @ 0x3
   739                           
   740                           
   741                           ; 8 bytes @ 0x3
   742  0073                     	ds	1
   743  0074                     ??___awdiv:
   744  0074                     ??___awmod:	
   745                           ; 1 bytes @ 0x4
   746                           
   747  0074                     strlen@s:	
   748                           ; 1 bytes @ 0x4
   749                           
   750                           
   751                           ; 1 bytes @ 0x4
   752  0074                     	ds	1
   753  0075                     ??_abs:
   754  0075                     LCDPutChar@ch:	
   755                           ; 1 bytes @ 0x5
   756                           
   757  0075                     LCDPutCmd@ch:	
   758                           ; 1 bytes @ 0x5
   759                           
   760  0075                     ___awdiv@counter:	
   761                           ; 1 bytes @ 0x5
   762                           
   763  0075                     ___awmod@counter:	
   764                           ; 1 bytes @ 0x5
   765                           
   766                           
   767                           ; 1 bytes @ 0x5
   768  0075                     	ds	1
   769  0076                     ??_LCD_Initialize:
   770  0076                     ?_LCDPutStr:	
   771                           ; 1 bytes @ 0x6
   772                           
   773  0076                     ?_LCDGoto:	
   774                           ; 1 bytes @ 0x6
   775                           
   776  0076                     LCDGoto@ln:	
   777                           ; 1 bytes @ 0x6
   778                           
   779  0076                     ___awdiv@sign:	
   780                           ; 1 bytes @ 0x6
   781                           
   782  0076                     ___awmod@sign:	
   783                           ; 1 bytes @ 0x6
   784                           
   785  0076                     LCDPutStr@str:	
   786                           ; 1 bytes @ 0x6
   787                           
   788                           
   789                           ; 2 bytes @ 0x6
   790  0076                     	ds	1
   791  0077                     ??_LCDGoto:
   792  0077                     _LCDGoto$104:	
   793                           ; 1 bytes @ 0x7
   794                           
   795  0077                     ___awdiv@quotient:	
   796                           ; 2 bytes @ 0x7
   797                           
   798                           
   799                           ; 2 bytes @ 0x7
   800  0077                     	ds	1
   801  0078                     ??_LCDPutStr:
   802  0078                     ?_fputs:	
   803                           ; 1 bytes @ 0x8
   804                           
   805  0078                     fputs@fp:	
   806                           ; 2 bytes @ 0x8
   807                           
   808                           
   809                           ; 1 bytes @ 0x8
   810  0078                     	ds	1
   811  0079                     ??_fputs:
   812  0079                     LCDGoto@pos:	
   813                           ; 1 bytes @ 0x9
   814                           
   815                           
   816                           ; 1 bytes @ 0x9
   817  0079                     	ds	2
   818  007B                     LCDPutStr@i:
   819                           
   820                           ; 1 bytes @ 0xB
   821  007B                     	ds	1
   822  007C                     ??_pad:
   823                           
   824                           ; 1 bytes @ 0xC
   825  007C                     	ds	1
   826  007D                     ??_sprintf:
   827                           
   828                           ; 1 bytes @ 0xD
   829  007D                     	ds	1
   830                           
   831                           	psect	cstackBANK0
   832  0020                     __pcstackBANK0:
   833  0020                     ?___aodiv:
   834  0020                     ?___aomod:	
   835                           ; 8 bytes @ 0x0
   836                           
   837  0020                     fputs@c:	
   838                           ; 8 bytes @ 0x0
   839                           
   840  0020                     ___aodiv@divisor:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0020                     ___aomod@divisor:	
   844                           ; 8 bytes @ 0x0
   845                           
   846                           
   847                           ; 8 bytes @ 0x0
   848  0020                     	ds	1
   849  0021                     fputs@i:
   850                           
   851                           ; 2 bytes @ 0x1
   852  0021                     	ds	2
   853  0023                     fputs@s:
   854                           
   855                           ; 1 bytes @ 0x3
   856  0023                     	ds	1
   857  0024                     ?_pad:
   858  0024                     pad@buf:	
   859                           ; 2 bytes @ 0x4
   860                           
   861                           
   862                           ; 1 bytes @ 0x4
   863  0024                     	ds	1
   864  0025                     pad@p:
   865                           
   866                           ; 2 bytes @ 0x5
   867  0025                     	ds	2
   868  0027                     pad@i:
   869                           
   870                           ; 2 bytes @ 0x7
   871  0027                     	ds	1
   872  0028                     ___aodiv@dividend:
   873  0028                     ___aomod@dividend:	
   874                           ; 8 bytes @ 0x8
   875                           
   876                           
   877                           ; 8 bytes @ 0x8
   878  0028                     	ds	1
   879  0029                     pad@w:
   880                           
   881                           ; 2 bytes @ 0x9
   882  0029                     	ds	2
   883  002B                     pad@fp:
   884                           
   885                           ; 1 bytes @ 0xB
   886  002B                     	ds	5
   887  0030                     ?_dtoa:
   888  0030                     dtoa@d:	
   889                           ; 2 bytes @ 0x10
   890                           
   891                           
   892                           ; 8 bytes @ 0x10
   893  0030                     	ds	8
   894  0038                     ??_dtoa:
   895                           
   896                           ; 1 bytes @ 0x18
   897  0038                     	ds	3
   898  003B                     _dtoa$531:
   899                           
   900                           ; 2 bytes @ 0x1B
   901  003B                     	ds	2
   902  003D                     dtoa@fp:
   903                           
   904                           ; 1 bytes @ 0x1D
   905  003D                     	ds	1
   906  003E                     dtoa@p:
   907                           
   908                           ; 2 bytes @ 0x1E
   909  003E                     	ds	2
   910  0040                     dtoa@w:
   911                           
   912                           ; 2 bytes @ 0x20
   913  0040                     	ds	2
   914  0042                     dtoa@s:
   915                           
   916                           ; 2 bytes @ 0x22
   917  0042                     	ds	2
   918  0044                     dtoa@n:
   919                           
   920                           ; 8 bytes @ 0x24
   921  0044                     	ds	8
   922  004C                     dtoa@i:
   923                           
   924                           ; 2 bytes @ 0x2C
   925  004C                     	ds	2
   926  004E                     ?_vfpfcnvrt:
   927  004E                     vfpfcnvrt@fmt:	
   928                           ; 2 bytes @ 0x2E
   929                           
   930                           
   931                           ; 1 bytes @ 0x2E
   932  004E                     	ds	1
   933  004F                     vfpfcnvrt@ap:
   934                           
   935                           ; 1 bytes @ 0x2F
   936  004F                     	ds	1
   937  0050                     ??_vfpfcnvrt:
   938                           
   939                           ; 1 bytes @ 0x30
   940  0050                     	ds	5
   941  0055                     vfpfcnvrt@ll:
   942                           
   943                           ; 8 bytes @ 0x35
   944  0055                     	ds	8
   945  005D                     vfpfcnvrt@fp:
   946                           
   947                           ; 1 bytes @ 0x3D
   948  005D                     	ds	1
   949  005E                     ?_vfprintf:
   950  005E                     vfprintf@fmt:	
   951                           ; 2 bytes @ 0x3E
   952                           
   953                           
   954                           ; 2 bytes @ 0x3E
   955  005E                     	ds	2
   956  0060                     vfprintf@ap:
   957                           
   958                           ; 1 bytes @ 0x40
   959  0060                     	ds	1
   960  0061                     ??_vfprintf:
   961                           
   962                           ; 1 bytes @ 0x41
   963  0061                     	ds	2
   964  0063                     vfprintf@fp:
   965                           
   966                           ; 1 bytes @ 0x43
   967  0063                     	ds	1
   968  0064                     vfprintf@cfmt:
   969                           
   970                           ; 2 bytes @ 0x44
   971  0064                     	ds	2
   972                           
   973                           	psect	maintext
   974  0585                     __pmaintext:	
   975 ;;
   976 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   977 ;;
   978 ;; *************** function _main *****************
   979 ;; Defined at:
   980 ;;		line 13 in file "Ex6_1_LCD.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  time_string     9   38[BANK1 ] unsigned char [9]
   985 ;;  second_count    1   55[BANK1 ] unsigned char 
   986 ;;  minute_count    1   54[BANK1 ] unsigned char 
   987 ;;  hour_counter    1   53[BANK1 ] unsigned char 
   988 ;;  second_digit    1   52[BANK1 ] unsigned char 
   989 ;;  second_digit    1   51[BANK1 ] unsigned char 
   990 ;;  minute_digit    1   50[BANK1 ] unsigned char 
   991 ;;  minute_digit    1   49[BANK1 ] unsigned char 
   992 ;;  hour_digit2     1   48[BANK1 ] unsigned char 
   993 ;;  hour_digit1     1   47[BANK1 ] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : B1F/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1003 ;;      Params:         0       0       0       0       0       0       0       0
  1004 ;;      Locals:         0       0      18       0       0       0       0       0
  1005 ;;      Temps:          0       0      12       0       0       0       0       0
  1006 ;;      Totals:         0       0      30       0       0       0       0       0
  1007 ;;Total ram usage:       30 bytes
  1008 ;; Hardware stack levels required when called: 8
  1009 ;; This function calls:
  1010 ;;		_LCDGoto
  1011 ;;		_LCDPutStr
  1012 ;;		_LCD_Initialize
  1013 ;;		___awdiv
  1014 ;;		___awmod
  1015 ;;		_sprintf
  1016 ;; This function is called by:
  1017 ;;		Startup code after reset
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021  0585                     _main:	
  1022                           ;psect for function _main
  1023                           
  1024  0585                     l1623:	
  1025                           ;incstack = 0
  1026                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1027                           
  1028                           
  1029                           ;Ex6_1_LCD.c: 16:     unsigned char minute_counter = 0;
  1030  0585  0021               	movlb	1	; select bank1
  1031  0586  01D6               	clrf	main@minute_counter^(0+128)
  1032                           
  1033                           ;Ex6_1_LCD.c: 17:     unsigned char second_counter = 0;
  1034  0587  01D7               	clrf	main@second_counter^(0+128)
  1035                           
  1036                           ;Ex6_1_LCD.c: 18:     char time_string[9];;Ex6_1_LCD.c: 22:     unsigned char hour_digit
      +                          1 = 0, hour_digit2 = 0;
  1037  0588  01CF               	clrf	main@hour_digit1^(0+128)
  1038  0589  01D0               	clrf	main@hour_digit2^(0+128)
  1039                           
  1040                           ;Ex6_1_LCD.c: 23:     unsigned char minute_digit1 = 0, minute_digit2 = 0;
  1041  058A  01D1               	clrf	main@minute_digit1^(0+128)
  1042  058B  01D2               	clrf	main@minute_digit2^(0+128)
  1043                           
  1044                           ;Ex6_1_LCD.c: 24:     unsigned char second_digit1 = 0, second_digit2 = 0;
  1045  058C  01D3               	clrf	main@second_digit1^(0+128)
  1046  058D  01D4               	clrf	main@second_digit2^(0+128)
  1047  058E                     l1625:
  1048                           
  1049                           ;Ex6_1_LCD.c: 27:     LCD_Initialize();
  1050  058E  3180  2032  3185   	fcall	_LCD_Initialize
  1051  0591                     l1627:
  1052                           
  1053                           ;Ex6_1_LCD.c: 30:     LCDGoto(1,0);
  1054  0591  01F6               	clrf	LCDGoto@ln
  1055  0592  3001               	movlw	1
  1056  0593  3180  20A3  3185   	fcall	_LCDGoto
  1057  0596                     l1629:
  1058                           
  1059                           ;Ex6_1_LCD.c: 31:     LCDPutStr("NGUYEN HAI DANG");
  1060  0596  3000               	movlw	low (STR_1| (0+32768))
  1061  0597  00F6               	movwf	LCDPutStr@str
  1062  0598  3090               	movlw	high (STR_1| (0+32768))
  1063  0599  00F7               	movwf	LCDPutStr@str+1
  1064  059A  3180  2057  3185   	fcall	_LCDPutStr
  1065  059D                     l1631:
  1066                           
  1067                           ;Ex6_1_LCD.c: 34:     LCDGoto(4,1);
  1068  059D  01F6               	clrf	LCDGoto@ln
  1069  059E  0AF6               	incf	LCDGoto@ln,f
  1070  059F  3004               	movlw	4
  1071  05A0  3180  20A3  3185   	fcall	_LCDGoto
  1072  05A3                     l1633:
  1073                           
  1074                           ;Ex6_1_LCD.c: 35:     LCDPutStr("00:00:00");
  1075  05A3  301F               	movlw	low (STR_2| (0+32768))
  1076  05A4  00F6               	movwf	LCDPutStr@str
  1077  05A5  3090               	movlw	high (STR_2| (0+32768))
  1078  05A6  00F7               	movwf	LCDPutStr@str+1
  1079  05A7  3180  2057  3185   	fcall	_LCDPutStr
  1080  05AA                     l1635:
  1081                           
  1082                           ;Ex6_1_LCD.c: 38:         for(hour_counter=0;hour_counter<=23;hour_counter+=1){
  1083  05AA  0021               	movlb	1	; select bank1
  1084  05AB  01D5               	clrf	main@hour_counter^(0+128)
  1085  05AC                     l1641:
  1086                           
  1087                           ;Ex6_1_LCD.c: 39:             for(minute_counter=-0;minute_counter<=59;minute_counter+=1
      +                          ){
  1088  05AC  01D6               	clrf	main@minute_counter^(0+128)
  1089  05AD                     l1647:
  1090                           
  1091                           ;Ex6_1_LCD.c: 40:                 for(second_counter=0;second_counter<=59;second_counter
      +                          +=1){
  1092  05AD  01D7               	clrf	main@second_counter^(0+128)
  1093  05AE                     l1653:
  1094                           
  1095                           ;Ex6_1_LCD.c: 42:                     hour_digit1 = hour_counter/10;
  1096  05AE  300A               	movlw	10
  1097  05AF  00F0               	movwf	___awdiv@divisor
  1098  05B0  3000               	movlw	0
  1099  05B1  00F1               	movwf	___awdiv@divisor+1
  1100  05B2  0855               	movf	main@hour_counter^(0+128),w
  1101  05B3  00BA               	movwf	??_main^(0+128)
  1102  05B4  01BB               	clrf	(??_main^(0+128)+1)
  1103  05B5  083A               	movf	??_main^(0+128),w
  1104  05B6  00F2               	movwf	___awdiv@dividend
  1105  05B7  083B               	movf	(??_main+1)^(0+128),w
  1106  05B8  00F3               	movwf	___awdiv@dividend+1
  1107  05B9  3182  2262  3185   	fcall	___awdiv
  1108  05BC  0870               	movf	?___awdiv,w
  1109  05BD  0021               	movlb	1	; select bank1
  1110  05BE  00BC               	movwf	(??_main+2)^(0+128)
  1111  05BF  083C               	movf	(??_main+2)^(0+128),w
  1112  05C0  00CF               	movwf	main@hour_digit1^(0+128)
  1113                           
  1114                           ;Ex6_1_LCD.c: 43:                     hour_digit2 = hour_counter%10;
  1115  05C1  300A               	movlw	10
  1116  05C2  00F0               	movwf	___awmod@divisor
  1117  05C3  3000               	movlw	0
  1118  05C4  00F1               	movwf	___awmod@divisor+1
  1119  05C5  0855               	movf	main@hour_counter^(0+128),w
  1120  05C6  00BA               	movwf	??_main^(0+128)
  1121  05C7  01BB               	clrf	(??_main^(0+128)+1)
  1122  05C8  083A               	movf	??_main^(0+128),w
  1123  05C9  00F2               	movwf	___awmod@dividend
  1124  05CA  083B               	movf	(??_main+1)^(0+128),w
  1125  05CB  00F3               	movwf	___awmod@dividend+1
  1126  05CC  3181  21B9  3185   	fcall	___awmod
  1127  05CF  0870               	movf	?___awmod,w
  1128  05D0  0021               	movlb	1	; select bank1
  1129  05D1  00BC               	movwf	(??_main+2)^(0+128)
  1130  05D2  083C               	movf	(??_main+2)^(0+128),w
  1131  05D3  00D0               	movwf	main@hour_digit2^(0+128)
  1132                           
  1133                           ;Ex6_1_LCD.c: 46:                     minute_digit1 = minute_counter/10;
  1134  05D4  300A               	movlw	10
  1135  05D5  00F0               	movwf	___awdiv@divisor
  1136  05D6  3000               	movlw	0
  1137  05D7  00F1               	movwf	___awdiv@divisor+1
  1138  05D8  0856               	movf	main@minute_counter^(0+128),w
  1139  05D9  00BA               	movwf	??_main^(0+128)
  1140  05DA  01BB               	clrf	(??_main^(0+128)+1)
  1141  05DB  083A               	movf	??_main^(0+128),w
  1142  05DC  00F2               	movwf	___awdiv@dividend
  1143  05DD  083B               	movf	(??_main+1)^(0+128),w
  1144  05DE  00F3               	movwf	___awdiv@dividend+1
  1145  05DF  3182  2262  3185   	fcall	___awdiv
  1146  05E2  0870               	movf	?___awdiv,w
  1147  05E3  0021               	movlb	1	; select bank1
  1148  05E4  00BC               	movwf	(??_main+2)^(0+128)
  1149  05E5  083C               	movf	(??_main+2)^(0+128),w
  1150  05E6  00D1               	movwf	main@minute_digit1^(0+128)
  1151                           
  1152                           ;Ex6_1_LCD.c: 47:                     minute_digit2 = minute_counter%10;
  1153  05E7  300A               	movlw	10
  1154  05E8  00F0               	movwf	___awmod@divisor
  1155  05E9  3000               	movlw	0
  1156  05EA  00F1               	movwf	___awmod@divisor+1
  1157  05EB  0856               	movf	main@minute_counter^(0+128),w
  1158  05EC  00BA               	movwf	??_main^(0+128)
  1159  05ED  01BB               	clrf	(??_main^(0+128)+1)
  1160  05EE  083A               	movf	??_main^(0+128),w
  1161  05EF  00F2               	movwf	___awmod@dividend
  1162  05F0  083B               	movf	(??_main+1)^(0+128),w
  1163  05F1  00F3               	movwf	___awmod@dividend+1
  1164  05F2  3181  21B9  3185   	fcall	___awmod
  1165  05F5  0870               	movf	?___awmod,w
  1166  05F6  0021               	movlb	1	; select bank1
  1167  05F7  00BC               	movwf	(??_main+2)^(0+128)
  1168  05F8  083C               	movf	(??_main+2)^(0+128),w
  1169  05F9  00D2               	movwf	main@minute_digit2^(0+128)
  1170                           
  1171                           ;Ex6_1_LCD.c: 50:                     second_digit1 = second_counter/10;
  1172  05FA  300A               	movlw	10
  1173  05FB  00F0               	movwf	___awdiv@divisor
  1174  05FC  3000               	movlw	0
  1175  05FD  00F1               	movwf	___awdiv@divisor+1
  1176  05FE  0857               	movf	main@second_counter^(0+128),w
  1177  05FF  00BA               	movwf	??_main^(0+128)
  1178  0600  01BB               	clrf	(??_main^(0+128)+1)
  1179  0601  083A               	movf	??_main^(0+128),w
  1180  0602  00F2               	movwf	___awdiv@dividend
  1181  0603  083B               	movf	(??_main+1)^(0+128),w
  1182  0604  00F3               	movwf	___awdiv@dividend+1
  1183  0605  3182  2262  3185   	fcall	___awdiv
  1184  0608  0870               	movf	?___awdiv,w
  1185  0609  0021               	movlb	1	; select bank1
  1186  060A  00BC               	movwf	(??_main+2)^(0+128)
  1187  060B  083C               	movf	(??_main+2)^(0+128),w
  1188  060C  00D3               	movwf	main@second_digit1^(0+128)
  1189                           
  1190                           ;Ex6_1_LCD.c: 51:                     second_digit2 = second_counter%10;
  1191  060D  300A               	movlw	10
  1192  060E  00F0               	movwf	___awmod@divisor
  1193  060F  3000               	movlw	0
  1194  0610  00F1               	movwf	___awmod@divisor+1
  1195  0611  0857               	movf	main@second_counter^(0+128),w
  1196  0612  00BA               	movwf	??_main^(0+128)
  1197  0613  01BB               	clrf	(??_main^(0+128)+1)
  1198  0614  083A               	movf	??_main^(0+128),w
  1199  0615  00F2               	movwf	___awmod@dividend
  1200  0616  083B               	movf	(??_main+1)^(0+128),w
  1201  0617  00F3               	movwf	___awmod@dividend+1
  1202  0618  3181  21B9  3185   	fcall	___awmod
  1203  061B  0870               	movf	?___awmod,w
  1204  061C  0021               	movlb	1	; select bank1
  1205  061D  00BC               	movwf	(??_main+2)^(0+128)
  1206  061E  083C               	movf	(??_main+2)^(0+128),w
  1207  061F  00D4               	movwf	main@second_digit2^(0+128)
  1208  0620                     l1655:
  1209                           
  1210                           ;Ex6_1_LCD.c: 54:                     sprintf(time_string,"%d%d:%d%d:%d%d",hour_digit1,h
      +                          our_digit2
  1211  0620  3010               	movlw	low (STR_3| (0+32768))
  1212  0621  00A0               	movwf	sprintf@fmt^(0+128)
  1213  0622  3090               	movlw	high (STR_3| (0+32768))
  1214  0623  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  1215  0624  084F               	movf	main@hour_digit1^(0+128),w
  1216  0625  00BA               	movwf	??_main^(0+128)
  1217  0626  01BB               	clrf	(??_main^(0+128)+1)
  1218  0627  083A               	movf	??_main^(0+128),w
  1219  0628  00A2               	movwf	(?_sprintf^(0+128)+2)
  1220  0629  083B               	movf	(??_main+1)^(0+128),w
  1221  062A  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  1222  062B  0850               	movf	main@hour_digit2^(0+128),w
  1223  062C  00BC               	movwf	(??_main+2)^(0+128)
  1224  062D  01BD               	clrf	((??_main+2)^(0+128)+1)
  1225  062E  083C               	movf	(??_main+2)^(0+128),w
  1226  062F  00A4               	movwf	(?_sprintf^(0+128)+4)
  1227  0630  083D               	movf	(??_main+3)^(0+128),w
  1228  0631  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  1229  0632  0851               	movf	main@minute_digit1^(0+128),w
  1230  0633  00BE               	movwf	(??_main+4)^(0+128)
  1231  0634  01BF               	clrf	((??_main+4)^(0+128)+1)
  1232  0635  083E               	movf	(??_main+4)^(0+128),w
  1233  0636  00A6               	movwf	(?_sprintf^(0+128)+6)
  1234  0637  083F               	movf	(??_main+5)^(0+128),w
  1235  0638  00A7               	movwf	((?_sprintf+1)^(0+128)+6)
  1236  0639  0852               	movf	main@minute_digit2^(0+128),w
  1237  063A  00C0               	movwf	(??_main+6)^(0+128)
  1238  063B  01C1               	clrf	((??_main+6)^(0+128)+1)
  1239  063C  0840               	movf	(??_main+6)^(0+128),w
  1240  063D  00A8               	movwf	(?_sprintf^(0+128)+8)
  1241  063E  0841               	movf	(??_main+7)^(0+128),w
  1242  063F  00A9               	movwf	((?_sprintf+1)^(0+128)+8)
  1243  0640  0853               	movf	main@second_digit1^(0+128),w
  1244  0641  00C2               	movwf	(??_main+8)^(0+128)
  1245  0642  01C3               	clrf	((??_main+8)^(0+128)+1)
  1246  0643  0842               	movf	(??_main+8)^(0+128),w
  1247  0644  00AA               	movwf	(?_sprintf^(0+128)+10)
  1248  0645  0843               	movf	(??_main+9)^(0+128),w
  1249  0646  00AB               	movwf	((?_sprintf+1)^(0+128)+10)
  1250  0647  0854               	movf	main@second_digit2^(0+128),w
  1251  0648  00C4               	movwf	(??_main+10)^(0+128)
  1252  0649  01C5               	clrf	((??_main+10)^(0+128)+1)
  1253  064A  0844               	movf	(??_main+10)^(0+128),w
  1254  064B  00AC               	movwf	(?_sprintf^(0+128)+12)
  1255  064C  0845               	movf	(??_main+11)^(0+128),w
  1256  064D  00AD               	movwf	((?_sprintf+1)^(0+128)+12)
  1257  064E  30C6               	movlw	(low (main@time_string| 0))& (0+255)
  1258  064F  3180  207D  3185   	fcall	_sprintf
  1259  0652                     l1657:
  1260                           
  1261                           ;Ex6_1_LCD.c: 57:                     LCDGoto(4,1);
  1262  0652  01F6               	clrf	LCDGoto@ln
  1263  0653  0AF6               	incf	LCDGoto@ln,f
  1264  0654  3004               	movlw	4
  1265  0655  3180  20A3  3185   	fcall	_LCDGoto
  1266  0658                     l1659:
  1267                           
  1268                           ;Ex6_1_LCD.c: 58:                     LCDPutStr(time_string);
  1269  0658  30C6               	movlw	low main@time_string
  1270  0659  00F6               	movwf	LCDPutStr@str
  1271  065A  3000               	movlw	high main@time_string
  1272  065B  00F7               	movwf	LCDPutStr@str+1
  1273  065C  3180  2057  3185   	fcall	_LCDPutStr
  1274  065F                     l1661:
  1275                           
  1276                           ;Ex6_1_LCD.c: 59:                     _delay((unsigned long)((50)*(1000000/4000.0)));
  1277  065F  3011               	movlw	17
  1278  0660  0021               	movlb	1	; select bank1
  1279  0661  00BA               	movwf	??_main^(0+128)
  1280  0662  303A               	movlw	58
  1281  0663                     u1797:
  1282  0663  0B89               	decfsz	9,f
  1283  0664  2E63               	goto	u1797
  1284  0665  0BBA               	decfsz	??_main^(0+128),f
  1285  0666  2E63               	goto	u1797
  1286  0667  0000               	nop
  1287  0668                     l1663:
  1288                           
  1289                           ;Ex6_1_LCD.c: 60:                 }
  1290  0668  3001               	movlw	1
  1291  0669  0021               	movlb	1	; select bank1
  1292  066A  00BA               	movwf	??_main^(0+128)
  1293  066B  083A               	movf	??_main^(0+128),w
  1294  066C  07D7               	addwf	main@second_counter^(0+128),f
  1295  066D                     l1665:
  1296  066D  303C               	movlw	60
  1297  066E  0257               	subwf	main@second_counter^(0+128),w
  1298  066F  1C03               	skipc
  1299  0670  2E72               	goto	u1761
  1300  0671  2E73               	goto	u1760
  1301  0672                     u1761:
  1302  0672  2DAE               	goto	l1653
  1303  0673                     u1760:
  1304  0673                     l1667:
  1305                           
  1306                           ;Ex6_1_LCD.c: 61:             }
  1307  0673  3001               	movlw	1
  1308  0674  00BA               	movwf	??_main^(0+128)
  1309  0675  083A               	movf	??_main^(0+128),w
  1310  0676  07D6               	addwf	main@minute_counter^(0+128),f
  1311  0677                     l1669:
  1312  0677  303C               	movlw	60
  1313  0678  0256               	subwf	main@minute_counter^(0+128),w
  1314  0679  1C03               	skipc
  1315  067A  2E7C               	goto	u1771
  1316  067B  2E7D               	goto	u1770
  1317  067C                     u1771:
  1318  067C  2DAD               	goto	l1647
  1319  067D                     u1770:
  1320  067D                     l1671:
  1321                           
  1322                           ;Ex6_1_LCD.c: 62:         }
  1323  067D  3001               	movlw	1
  1324  067E  00BA               	movwf	??_main^(0+128)
  1325  067F  083A               	movf	??_main^(0+128),w
  1326  0680  07D5               	addwf	main@hour_counter^(0+128),f
  1327  0681                     l1673:
  1328  0681  3018               	movlw	24
  1329  0682  0255               	subwf	main@hour_counter^(0+128),w
  1330  0683  1C03               	skipc
  1331  0684  2E86               	goto	u1781
  1332  0685  2E87               	goto	u1780
  1333  0686                     u1781:
  1334  0686  2DAC               	goto	l1641
  1335  0687                     u1780:
  1336  0687                     l1675:
  1337                           
  1338                           ;Ex6_1_LCD.c: 64:         minute_counter = 0;
  1339  0687  01D6               	clrf	main@minute_counter^(0+128)
  1340                           
  1341                           ;Ex6_1_LCD.c: 65:         second_counter = 0;
  1342  0688  01D7               	clrf	main@second_counter^(0+128)
  1343  0689  2DAA               	goto	l1635
  1344  068A  3180  2802         	ljmp	start
  1345  068C                     __end_of_main:
  1346                           
  1347                           	psect	text1
  1348  007D                     __ptext1:	
  1349 ;; *************** function _sprintf *****************
  1350 ;; Defined at:
  1351 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  s               1    wreg     PTR unsigned char 
  1354 ;;		 -> main@time_string(9), 
  1355 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  1356 ;;		 -> STR_3(15), 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  s               1   15[BANK1 ] PTR unsigned char 
  1359 ;;		 -> main@time_string(9), 
  1360 ;;  f              10   16[BANK1 ] struct _IO_FILE
  1361 ;;  ret             2    0        int 
  1362 ;;  ap              1   14[BANK1 ] PTR void [1]
  1363 ;;		 -> ?_sprintf(2), 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2    0[BANK1 ] int 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1373 ;;      Params:         0       0      14       0       0       0       0       0
  1374 ;;      Locals:         0       0      12       0       0       0       0       0
  1375 ;;      Temps:          1       0       0       0       0       0       0       0
  1376 ;;      Totals:         1       0      26       0       0       0       0       0
  1377 ;;Total ram usage:       27 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 7
  1380 ;; This function calls:
  1381 ;;		_vfprintf
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387  007D                     _sprintf:	
  1388                           ;psect for function _sprintf
  1389                           
  1390                           
  1391                           ;incstack = 0
  1392                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1393                           ;sprintf@s stored from wreg
  1394  007D  0021               	movlb	1	; select bank1
  1395  007E  00AF               	movwf	sprintf@s^(0+128)
  1396  007F                     l1529:
  1397  007F  30A2               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1398  0080  00FD               	movwf	??_sprintf
  1399  0081  087D               	movf	??_sprintf,w
  1400  0082  00AE               	movwf	sprintf@ap^(0+128)
  1401  0083  082F               	movf	sprintf@s^(0+128),w
  1402  0084  00FD               	movwf	??_sprintf
  1403  0085  087D               	movf	??_sprintf,w
  1404  0086  00B0               	movwf	sprintf@f^(0+128)
  1405  0087                     l1531:
  1406  0087  01B2               	clrf	(sprintf@f^(0+128)+2)
  1407  0088  01B3               	clrf	((sprintf@f+1)^(0+128)+2)
  1408  0089                     l1533:
  1409  0089  01B8               	clrf	(sprintf@f^(0+128)+8)
  1410  008A  01B9               	clrf	((sprintf@f+1)^(0+128)+8)
  1411  008B                     l1535:
  1412  008B  0821               	movf	(sprintf@fmt+1)^(0+128),w
  1413  008C  0020               	movlb	0	; select bank0
  1414  008D  00DF               	movwf	vfprintf@fmt+1
  1415  008E  0021               	movlb	1	; select bank1
  1416  008F  0820               	movf	sprintf@fmt^(0+128),w
  1417  0090  0020               	movlb	0	; select bank0
  1418  0091  00DE               	movwf	vfprintf@fmt
  1419  0092  30AE               	movlw	(low (sprintf@ap| 0))& (0+255)
  1420  0093  00FD               	movwf	??_sprintf
  1421  0094  087D               	movf	??_sprintf,w
  1422  0095  00E0               	movwf	vfprintf@ap
  1423  0096  30B0               	movlw	(low (sprintf@f| 0))& (0+255)
  1424  0097  3180  20CA  3180   	fcall	_vfprintf
  1425  009A                     l1537:
  1426  009A  0021               	movlb	1	; select bank1
  1427  009B  0832               	movf	(sprintf@f^(0+128)+2),w
  1428  009C  072F               	addwf	sprintf@s^(0+128),w
  1429  009D  00FD               	movwf	??_sprintf
  1430  009E  087D               	movf	??_sprintf,w
  1431  009F  0086               	movwf	6
  1432  00A0  0187               	clrf	7
  1433  00A1  0181               	clrf	1
  1434  00A2                     l611:
  1435  00A2  0008               	return
  1436  00A3                     __end_of_sprintf:
  1437                           
  1438                           	psect	text2
  1439  00CA                     __ptext2:	
  1440 ;; *************** function _vfprintf *****************
  1441 ;; Defined at:
  1442 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  fp              1    wreg     PTR struct _IO_FILE
  1445 ;;		 -> sprintf@f(10), 
  1446 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1447 ;;		 -> STR_3(15), 
  1448 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1449 ;;		 -> sprintf@ap(1), 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1452 ;;		 -> sprintf@f(10), 
  1453 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1454 ;;		 -> STR_3(15), 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  2   62[BANK0 ] int 
  1457 ;; Registers used:
  1458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1464 ;;      Params:         0       3       0       0       0       0       0       0
  1465 ;;      Locals:         0       3       0       0       0       0       0       0
  1466 ;;      Temps:          0       2       0       0       0       0       0       0
  1467 ;;      Totals:         0       8       0       0       0       0       0       0
  1468 ;;Total ram usage:        8 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; Hardware stack levels required when called: 6
  1471 ;; This function calls:
  1472 ;;		_vfpfcnvrt
  1473 ;; This function is called by:
  1474 ;;		_sprintf
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478  00CA                     _vfprintf:	
  1479                           ;psect for function _vfprintf
  1480                           
  1481                           
  1482                           ;incstack = 0
  1483                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1484                           ;vfprintf@fp stored from wreg
  1485  00CA  0020               	movlb	0	; select bank0
  1486  00CB  00E3               	movwf	vfprintf@fp
  1487  00CC                     l1481:
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1490  00CC  085F               	movf	vfprintf@fmt+1,w
  1491  00CD  00E5               	movwf	vfprintf@cfmt+1
  1492  00CE  085E               	movf	vfprintf@fmt,w
  1493  00CF  00E4               	movwf	vfprintf@cfmt
  1494  00D0                     l1483:
  1495                           
  1496                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1497  00D0  01E6               	clrf	_nout
  1498  00D1  01E7               	clrf	_nout+1
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1501  00D2  28E4               	goto	l1487
  1502  00D3                     l1485:
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1505  00D3  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1506  00D4  00E1               	movwf	??_vfprintf
  1507  00D5  0861               	movf	??_vfprintf,w
  1508  00D6  00CE               	movwf	vfpfcnvrt@fmt
  1509  00D7  0860               	movf	vfprintf@ap,w
  1510  00D8  00E2               	movwf	??_vfprintf+1
  1511  00D9  0862               	movf	??_vfprintf+1,w
  1512  00DA  00CF               	movwf	vfpfcnvrt@ap
  1513  00DB  0863               	movf	vfprintf@fp,w
  1514  00DC  3182  22C1  3180   	fcall	_vfpfcnvrt
  1515  00DF  0020               	movlb	0	; select bank0
  1516  00E0  084E               	movf	?_vfpfcnvrt,w
  1517  00E1  07E6               	addwf	_nout,f
  1518  00E2  084F               	movf	?_vfpfcnvrt+1,w
  1519  00E3  3DE7               	addwfc	_nout+1,f
  1520  00E4                     l1487:
  1521                           
  1522                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1523  00E4  0864               	movf	vfprintf@cfmt,w
  1524  00E5  0084               	movwf	4
  1525  00E6  0865               	movf	vfprintf@cfmt+1,w
  1526  00E7  0085               	movwf	5
  1527  00E8  0012               	moviw fsr0++
  1528  00E9  1D03               	btfss	3,2
  1529  00EA  28EC               	goto	u1521
  1530  00EB  28ED               	goto	u1520
  1531  00EC                     u1521:
  1532  00EC  28D3               	goto	l1485
  1533  00ED                     u1520:
  1534  00ED                     l1489:
  1535                           
  1536                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1537  00ED  0867               	movf	_nout+1,w
  1538  00EE  00DF               	movwf	?_vfprintf+1
  1539  00EF  0866               	movf	_nout,w
  1540  00F0  00DE               	movwf	?_vfprintf
  1541  00F1                     l683:
  1542  00F1  0008               	return
  1543  00F2                     __end_of_vfprintf:
  1544                           
  1545                           	psect	text3
  1546  02C1                     __ptext3:	
  1547 ;; *************** function _vfpfcnvrt *****************
  1548 ;; Defined at:
  1549 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  fp              1    wreg     PTR struct _IO_FILE
  1552 ;;		 -> sprintf@f(10), 
  1553 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1554 ;;		 -> vfprintf@cfmt(2), 
  1555 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1556 ;;		 -> sprintf@ap(1), 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1559 ;;		 -> sprintf@f(10), 
  1560 ;;  ll              8   53[BANK0 ] long long 
  1561 ;;  llu             8    0        unsigned long long 
  1562 ;;  f               4    0        unsigned long long 
  1563 ;;  ct              3    0        unsigned char [3]
  1564 ;;  vp              2    0        PTR void 
  1565 ;;  i               2    0        int 
  1566 ;;  done            2    0        int 
  1567 ;;  cp              2    0        PTR unsigned char 
  1568 ;;  c               1    0        unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  2   46[BANK0 ] int 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1578 ;;      Params:         0       2       0       0       0       0       0       0
  1579 ;;      Locals:         0       9       0       0       0       0       0       0
  1580 ;;      Temps:          0       5       0       0       0       0       0       0
  1581 ;;      Totals:         0      16       0       0       0       0       0       0
  1582 ;;Total ram usage:       16 bytes
  1583 ;; Hardware stack levels used: 1
  1584 ;; Hardware stack levels required when called: 5
  1585 ;; This function calls:
  1586 ;;		_dtoa
  1587 ;;		_fputc
  1588 ;; This function is called by:
  1589 ;;		_vfprintf
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593  02C1                     _vfpfcnvrt:	
  1594                           ;psect for function _vfpfcnvrt
  1595                           
  1596                           
  1597                           ;incstack = 0
  1598                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1599                           ;vfpfcnvrt@fp stored from wreg
  1600  02C1  0020               	movlb	0	; select bank0
  1601  02C2  00DD               	movwf	vfpfcnvrt@fp
  1602  02C3                     l1419:
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1605  02C3  084E               	movf	vfpfcnvrt@fmt,w
  1606  02C4  0086               	movwf	6
  1607  02C5  0187               	clrf	7
  1608  02C6  3F40               	moviw [0]fsr1
  1609  02C7  00D0               	movwf	??_vfpfcnvrt
  1610  02C8  3F41               	moviw [1]fsr1
  1611  02C9  00D1               	movwf	??_vfpfcnvrt+1
  1612  02CA  0850               	movf	??_vfpfcnvrt,w
  1613  02CB  0084               	movwf	4
  1614  02CC  0851               	movf	??_vfpfcnvrt+1,w
  1615  02CD  0085               	movwf	5
  1616  02CE  0012               	moviw fsr0++
  1617  02CF  3A25               	xorlw	37
  1618  02D0  1D03               	btfss	3,2
  1619  02D1  2AD3               	goto	u1461
  1620  02D2  2AD4               	goto	u1460
  1621  02D3                     u1461:
  1622  02D3  2B76               	goto	l1455
  1623  02D4                     u1460:
  1624  02D4                     l1421:
  1625                           
  1626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1627  02D4  084E               	movf	vfpfcnvrt@fmt,w
  1628  02D5  0086               	movwf	6
  1629  02D6  0187               	clrf	7
  1630  02D7  3001               	movlw	1
  1631  02D8  0781               	addwf	1,f
  1632  02D9  3141               	addfsr 1,1
  1633  02DA  1803               	skipnc
  1634  02DB  0A81               	incf	1,f
  1635  02DC                     l1423:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1638  02DC  01E8               	clrf	_width
  1639  02DD  01E9               	clrf	_width+1
  1640  02DE  01EC               	clrf	_flags
  1641  02DF  01ED               	clrf	_flags+1
  1642  02E0                     l1425:
  1643                           
  1644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1645  02E0  30FF               	movlw	255
  1646  02E1  00EA               	movwf	_prec
  1647  02E2  30FF               	movlw	255
  1648  02E3  00EB               	movwf	_prec+1
  1649  02E4                     l1427:
  1650                           
  1651                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1652  02E4  084E               	movf	vfpfcnvrt@fmt,w
  1653  02E5  0086               	movwf	6
  1654  02E6  0187               	clrf	7
  1655  02E7  3F40               	moviw [0]fsr1
  1656  02E8  00D0               	movwf	??_vfpfcnvrt
  1657  02E9  3F41               	moviw [1]fsr1
  1658  02EA  00D1               	movwf	??_vfpfcnvrt+1
  1659  02EB  0850               	movf	??_vfpfcnvrt,w
  1660  02EC  0084               	movwf	4
  1661  02ED  0851               	movf	??_vfpfcnvrt+1,w
  1662  02EE  0085               	movwf	5
  1663  02EF  0012               	moviw fsr0++
  1664  02F0  3A64               	xorlw	100
  1665  02F1  1903               	btfsc	3,2
  1666  02F2  2AF4               	goto	u1471
  1667  02F3  2AF5               	goto	u1470
  1668  02F4                     u1471:
  1669  02F4  2B06               	goto	l1431
  1670  02F5                     u1470:
  1671  02F5                     l1429:
  1672  02F5  084E               	movf	vfpfcnvrt@fmt,w
  1673  02F6  0086               	movwf	6
  1674  02F7  0187               	clrf	7
  1675  02F8  3F40               	moviw [0]fsr1
  1676  02F9  00D0               	movwf	??_vfpfcnvrt
  1677  02FA  3F41               	moviw [1]fsr1
  1678  02FB  00D1               	movwf	??_vfpfcnvrt+1
  1679  02FC  0850               	movf	??_vfpfcnvrt,w
  1680  02FD  0084               	movwf	4
  1681  02FE  0851               	movf	??_vfpfcnvrt+1,w
  1682  02FF  0085               	movwf	5
  1683  0300  0012               	moviw fsr0++
  1684  0301  3A69               	xorlw	105
  1685  0302  1D03               	btfss	3,2
  1686  0303  2B05               	goto	u1481
  1687  0304  2B06               	goto	u1480
  1688  0305                     u1481:
  1689  0305  2B41               	goto	l1439
  1690  0306                     u1480:
  1691  0306                     l1431:
  1692                           
  1693                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1694  0306  084E               	movf	vfpfcnvrt@fmt,w
  1695  0307  0086               	movwf	6
  1696  0308  0187               	clrf	7
  1697  0309  3001               	movlw	1
  1698  030A  0781               	addwf	1,f
  1699  030B  3141               	addfsr 1,1
  1700  030C  1803               	skipnc
  1701  030D  0A81               	incf	1,f
  1702  030E                     l1433:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1705  030E  084F               	movf	vfpfcnvrt@ap,w
  1706  030F  0086               	movwf	6
  1707  0310  0187               	clrf	7
  1708  0311  0801               	movf	1,w
  1709  0312  0084               	movwf	4
  1710  0313  0185               	clrf	5
  1711  0314  3002               	movlw	2
  1712  0315  0781               	addwf	1,f
  1713  0316  3F00               	moviw [0]fsr0
  1714  0317  00D0               	movwf	??_vfpfcnvrt
  1715  0318  3F01               	moviw [1]fsr0
  1716  0319  00D1               	movwf	??_vfpfcnvrt+1
  1717  031A  0850               	movf	??_vfpfcnvrt,w
  1718  031B  00D5               	movwf	vfpfcnvrt@ll
  1719  031C  0851               	movf	??_vfpfcnvrt+1,w
  1720  031D  00D6               	movwf	vfpfcnvrt@ll+1
  1721  031E  0D89               	rlf	9,f
  1722  031F  3B89               	subwfb	9,f
  1723  0320  0989               	comf	9,f
  1724  0321  00D7               	movwf	vfpfcnvrt@ll+2
  1725  0322  00D8               	movwf	vfpfcnvrt@ll+3
  1726  0323  00D9               	movwf	vfpfcnvrt@ll+4
  1727  0324  00DA               	movwf	vfpfcnvrt@ll+5
  1728  0325  00DB               	movwf	vfpfcnvrt@ll+6
  1729  0326  00DC               	movwf	vfpfcnvrt@ll+7
  1730  0327                     l1435:
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1733  0327  0855               	movf	vfpfcnvrt@ll,w
  1734  0328  00B0               	movwf	dtoa@d
  1735  0329  0856               	movf	vfpfcnvrt@ll+1,w
  1736  032A  00B1               	movwf	dtoa@d+1
  1737  032B  0857               	movf	vfpfcnvrt@ll+2,w
  1738  032C  00B2               	movwf	dtoa@d+2
  1739  032D  0858               	movf	vfpfcnvrt@ll+3,w
  1740  032E  00B3               	movwf	dtoa@d+3
  1741  032F  0859               	movf	vfpfcnvrt@ll+4,w
  1742  0330  00B4               	movwf	dtoa@d+4
  1743  0331  085A               	movf	vfpfcnvrt@ll+5,w
  1744  0332  00B5               	movwf	dtoa@d+5
  1745  0333  085B               	movf	vfpfcnvrt@ll+6,w
  1746  0334  00B6               	movwf	dtoa@d+6
  1747  0335  085C               	movf	vfpfcnvrt@ll+7,w
  1748  0336  00B7               	movwf	dtoa@d+7
  1749  0337  085D               	movf	vfpfcnvrt@fp,w
  1750  0338  3186  268C  3182   	fcall	_dtoa
  1751  033B  0020               	movlb	0	; select bank0
  1752  033C  0831               	movf	?_dtoa+1,w
  1753  033D  00CF               	movwf	?_vfpfcnvrt+1
  1754  033E  0830               	movf	?_dtoa,w
  1755  033F  00CE               	movwf	?_vfpfcnvrt
  1756  0340  2B99               	goto	l676
  1757  0341                     l1439:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1760  0341  084E               	movf	vfpfcnvrt@fmt,w
  1761  0342  0086               	movwf	6
  1762  0343  0187               	clrf	7
  1763  0344  3F40               	moviw [0]fsr1
  1764  0345  00D0               	movwf	??_vfpfcnvrt
  1765  0346  3F41               	moviw [1]fsr1
  1766  0347  00D1               	movwf	??_vfpfcnvrt+1
  1767  0348  0850               	movf	??_vfpfcnvrt,w
  1768  0349  0084               	movwf	4
  1769  034A  0851               	movf	??_vfpfcnvrt+1,w
  1770  034B  0085               	movwf	5
  1771  034C  0012               	moviw fsr0++
  1772  034D  3A25               	xorlw	37
  1773  034E  1D03               	btfss	3,2
  1774  034F  2B51               	goto	u1491
  1775  0350  2B52               	goto	u1490
  1776  0351                     u1491:
  1777  0351  2B6B               	goto	l1449
  1778  0352                     u1490:
  1779  0352                     l1441:
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1782  0352  084E               	movf	vfpfcnvrt@fmt,w
  1783  0353  0086               	movwf	6
  1784  0354  0187               	clrf	7
  1785  0355  3001               	movlw	1
  1786  0356  0781               	addwf	1,f
  1787  0357  3141               	addfsr 1,1
  1788  0358  1803               	skipnc
  1789  0359  0A81               	incf	1,f
  1790  035A                     l1443:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1793  035A  3025               	movlw	37
  1794  035B  00F0               	movwf	fputc@c
  1795  035C  3000               	movlw	0
  1796  035D  00F1               	movwf	fputc@c+1
  1797  035E  085D               	movf	vfpfcnvrt@fp,w
  1798  035F  00D0               	movwf	??_vfpfcnvrt
  1799  0360  0850               	movf	??_vfpfcnvrt,w
  1800  0361  00F2               	movwf	fputc@fp
  1801  0362  3181  2167  3182   	fcall	_fputc
  1802  0365                     l1445:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1805  0365  3001               	movlw	1
  1806  0366  0020               	movlb	0	; select bank0
  1807  0367  00CE               	movwf	?_vfpfcnvrt
  1808  0368  3000               	movlw	0
  1809  0369  00CF               	movwf	?_vfpfcnvrt+1
  1810  036A  2B99               	goto	l676
  1811  036B                     l1449:
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1814  036B  084E               	movf	vfpfcnvrt@fmt,w
  1815  036C  0086               	movwf	6
  1816  036D  0187               	clrf	7
  1817  036E  3001               	movlw	1
  1818  036F  0781               	addwf	1,f
  1819  0370  3141               	addfsr 1,1
  1820  0371  1803               	skipnc
  1821  0372  0A81               	incf	1,f
  1822  0373                     l1451:
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1825  0373  01CE               	clrf	?_vfpfcnvrt
  1826  0374  01CF               	clrf	?_vfpfcnvrt+1
  1827  0375  2B99               	goto	l676
  1828  0376                     l1455:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1831  0376  084E               	movf	vfpfcnvrt@fmt,w
  1832  0377  0086               	movwf	6
  1833  0378  0187               	clrf	7
  1834  0379  3F40               	moviw [0]fsr1
  1835  037A  00D0               	movwf	??_vfpfcnvrt
  1836  037B  3F41               	moviw [1]fsr1
  1837  037C  00D1               	movwf	??_vfpfcnvrt+1
  1838  037D  0850               	movf	??_vfpfcnvrt,w
  1839  037E  0084               	movwf	4
  1840  037F  0851               	movf	??_vfpfcnvrt+1,w
  1841  0380  0085               	movwf	5
  1842  0381  0800               	movf	0,w	;code access
  1843  0382  00D2               	movwf	??_vfpfcnvrt+2
  1844  0383  01D3               	clrf	??_vfpfcnvrt+3
  1845  0384  0852               	movf	??_vfpfcnvrt+2,w
  1846  0385  00F0               	movwf	fputc@c
  1847  0386  0853               	movf	??_vfpfcnvrt+3,w
  1848  0387  00F1               	movwf	fputc@c+1
  1849  0388  085D               	movf	vfpfcnvrt@fp,w
  1850  0389  00D4               	movwf	??_vfpfcnvrt+4
  1851  038A  0854               	movf	??_vfpfcnvrt+4,w
  1852  038B  00F2               	movwf	fputc@fp
  1853  038C  3181  2167  3182   	fcall	_fputc
  1854  038F                     l1457:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1857  038F  0020               	movlb	0	; select bank0
  1858  0390  084E               	movf	vfpfcnvrt@fmt,w
  1859  0391  0086               	movwf	6
  1860  0392  0187               	clrf	7
  1861  0393  3001               	movlw	1
  1862  0394  0781               	addwf	1,f
  1863  0395  3141               	addfsr 1,1
  1864  0396  1803               	skipnc
  1865  0397  0A81               	incf	1,f
  1866  0398  2B65               	goto	l1445
  1867  0399                     l676:
  1868  0399  0008               	return
  1869  039A                     __end_of_vfpfcnvrt:
  1870                           
  1871                           	psect	text4
  1872  068C                     __ptext4:	
  1873 ;; *************** function _dtoa *****************
  1874 ;; Defined at:
  1875 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  fp              1    wreg     PTR struct _IO_FILE
  1878 ;;		 -> sprintf@f(10), 
  1879 ;;  d               8   16[BANK0 ] long long 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  1882 ;;		 -> sprintf@f(10), 
  1883 ;;  n               8   36[BANK0 ] long long 
  1884 ;;  i               2   44[BANK0 ] int 
  1885 ;;  s               2   34[BANK0 ] int 
  1886 ;;  w               2   32[BANK0 ] int 
  1887 ;;  p               2   30[BANK0 ] int 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  2   16[BANK0 ] int 
  1890 ;; Registers used:
  1891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1897 ;;      Params:         0       8       0       0       0       0       0       0
  1898 ;;      Locals:         0      19       0       0       0       0       0       0
  1899 ;;      Temps:          0       3       0       0       0       0       0       0
  1900 ;;      Totals:         0      30       0       0       0       0       0       0
  1901 ;;Total ram usage:       30 bytes
  1902 ;; Hardware stack levels used: 1
  1903 ;; Hardware stack levels required when called: 4
  1904 ;; This function calls:
  1905 ;;		___aodiv
  1906 ;;		___aomod
  1907 ;;		_abs
  1908 ;;		_pad
  1909 ;; This function is called by:
  1910 ;;		_vfpfcnvrt
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914  068C                     _dtoa:	
  1915                           ;psect for function _dtoa
  1916                           
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1920                           ;dtoa@fp stored from wreg
  1921  068C  0020               	movlb	0	; select bank0
  1922  068D  00BD               	movwf	dtoa@fp
  1923  068E                     l1327:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1926  068E  0830               	movf	dtoa@d,w
  1927  068F  00C4               	movwf	dtoa@n
  1928  0690  0831               	movf	dtoa@d+1,w
  1929  0691  00C5               	movwf	dtoa@n+1
  1930  0692  0832               	movf	dtoa@d+2,w
  1931  0693  00C6               	movwf	dtoa@n+2
  1932  0694  0833               	movf	dtoa@d+3,w
  1933  0695  00C7               	movwf	dtoa@n+3
  1934  0696  0834               	movf	dtoa@d+4,w
  1935  0697  00C8               	movwf	dtoa@n+4
  1936  0698  0835               	movf	dtoa@d+5,w
  1937  0699  00C9               	movwf	dtoa@n+5
  1938  069A  0836               	movf	dtoa@d+6,w
  1939  069B  00CA               	movwf	dtoa@n+6
  1940  069C  0837               	movf	dtoa@d+7,w
  1941  069D  00CB               	movwf	dtoa@n+7
  1942  069E                     l1329:
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1945  069E  3044               	movlw	low dtoa@n
  1946  069F  0086               	movwf	6
  1947  06A0  3000               	movlw	high dtoa@n
  1948  06A1  0087               	movwf	7
  1949  06A2  3F47               	moviw [7]fsr1
  1950  06A3  00B8               	movwf	??_dtoa
  1951  06A4  1BB8               	btfsc	??_dtoa,7
  1952  06A5  2EA7               	goto	u1221
  1953  06A6  2EA9               	goto	u1220
  1954  06A7                     u1221:
  1955  06A7  3001               	movlw	1
  1956  06A8  2EAA               	goto	u1230
  1957  06A9                     u1220:
  1958  06A9  3000               	movlw	0
  1959  06AA                     u1230:
  1960  06AA  0020               	movlb	0	; select bank0
  1961  06AB  00B9               	movwf	??_dtoa+1
  1962  06AC  01BA               	clrf	??_dtoa+2
  1963  06AD  0839               	movf	??_dtoa+1,w
  1964  06AE  00C2               	movwf	dtoa@s
  1965  06AF  083A               	movf	??_dtoa+2,w
  1966  06B0  00C3               	movwf	dtoa@s+1
  1967  06B1                     l1331:
  1968                           
  1969                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1970  06B1  0842               	movf	dtoa@s,w
  1971  06B2  0443               	iorwf	dtoa@s+1,w
  1972  06B3  1903               	btfsc	3,2
  1973  06B4  2EB6               	goto	u1241
  1974  06B5  2EB7               	goto	u1240
  1975  06B6                     u1241:
  1976  06B6  2ED5               	goto	l646
  1977  06B7                     u1240:
  1978  06B7                     l1333:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1981  06B7  09C4               	comf	dtoa@n,f
  1982  06B8  09C5               	comf	dtoa@n+1,f
  1983  06B9  09C6               	comf	dtoa@n+2,f
  1984  06BA  09C7               	comf	dtoa@n+3,f
  1985  06BB  09C8               	comf	dtoa@n+4,f
  1986  06BC  09C9               	comf	dtoa@n+5,f
  1987  06BD  09CA               	comf	dtoa@n+6,f
  1988  06BE  09CB               	comf	dtoa@n+7,f
  1989  06BF  0AC4               	incf	dtoa@n,f
  1990  06C0  1D03               	skipz
  1991  06C1  2ED5               	goto	u125lld
  1992  06C2  0AC5               	incf	dtoa@n+1,f
  1993  06C3  1D03               	skipz
  1994  06C4  2ED5               	goto	u125lld
  1995  06C5  0AC6               	incf	dtoa@n+2,f
  1996  06C6  1D03               	skipz
  1997  06C7  2ED5               	goto	u125lld
  1998  06C8  0AC7               	incf	dtoa@n+3,f
  1999  06C9  1D03               	skipz
  2000  06CA  2ED5               	goto	u125lld
  2001  06CB  0AC8               	incf	dtoa@n+4,f
  2002  06CC  1D03               	skipz
  2003  06CD  2ED5               	goto	u125lld
  2004  06CE  0AC9               	incf	dtoa@n+5,f
  2005  06CF  1D03               	skipz
  2006  06D0  2ED5               	goto	u125lld
  2007  06D1  0ACA               	incf	dtoa@n+6,f
  2008  06D2  1D03               	skipz
  2009  06D3  2ED5               	goto	u125lld
  2010  06D4  0ACB               	incf	dtoa@n+7,f
  2011  06D5                     u125lld:
  2012  06D5                     l646:	
  2013                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 297:     }
  2014                           
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2017  06D5  0020               	movlb	0	; select bank0
  2018  06D6  1BEB               	btfsc	_prec+1,7
  2019  06D7  2ED9               	goto	u1261
  2020  06D8  2EDA               	goto	u1260
  2021  06D9                     u1261:
  2022  06D9  2EDE               	goto	l647
  2023  06DA                     u1260:
  2024  06DA                     l1335:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2027  06DA  30FD               	movlw	253
  2028  06DB  05EC               	andwf	_flags,f
  2029  06DC  30FF               	movlw	255
  2030  06DD  05ED               	andwf	_flags+1,f
  2031  06DE                     l647:	
  2032                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 302:     }
  2033                           
  2034                           
  2035                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2036  06DE  086B               	movf	_prec+1,w
  2037  06DF  3A80               	xorlw	128
  2038  06E0  00B8               	movwf	??_dtoa
  2039  06E1  3080               	movlw	128
  2040  06E2  0238               	subwf	??_dtoa,w
  2041  06E3  1D03               	skipz
  2042  06E4  2EE7               	goto	u1275
  2043  06E5  3001               	movlw	1
  2044  06E6  026A               	subwf	_prec,w
  2045  06E7                     u1275:
  2046  06E7  1803               	skipnc
  2047  06E8  2EEA               	goto	u1271
  2048  06E9  2EEB               	goto	u1270
  2049  06EA                     u1271:
  2050  06EA  2EF1               	goto	l1339
  2051  06EB                     u1270:
  2052  06EB                     l1337:
  2053  06EB  3001               	movlw	1
  2054  06EC  0020               	movlb	0	; select bank0
  2055  06ED  00BE               	movwf	dtoa@p
  2056  06EE  3000               	movlw	0
  2057  06EF  00BF               	movwf	dtoa@p+1
  2058  06F0  2EF6               	goto	l651
  2059  06F1                     l1339:
  2060  06F1  0020               	movlb	0	; select bank0
  2061  06F2  086B               	movf	_prec+1,w
  2062  06F3  00BF               	movwf	dtoa@p+1
  2063  06F4  086A               	movf	_prec,w
  2064  06F5  00BE               	movwf	dtoa@p
  2065  06F6                     l651:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2068  06F6  0869               	movf	_width+1,w
  2069  06F7  00C1               	movwf	dtoa@w+1
  2070  06F8  0868               	movf	_width,w
  2071  06F9  00C0               	movwf	dtoa@w
  2072  06FA                     l1341:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2075  06FA  0842               	movf	dtoa@s,w
  2076  06FB  0443               	iorwf	dtoa@s+1,w
  2077  06FC  1D03               	btfss	3,2
  2078  06FD  2EFF               	goto	u1281
  2079  06FE  2F00               	goto	u1280
  2080  06FF                     u1281:
  2081  06FF  2F04               	goto	l1345
  2082  0700                     u1280:
  2083  0700                     l1343:
  2084  0700  1D6C               	btfss	_flags,2
  2085  0701  2F03               	goto	u1291
  2086  0702  2F04               	goto	u1290
  2087  0703                     u1291:
  2088  0703  2F08               	goto	l652
  2089  0704                     u1290:
  2090  0704                     l1345:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  2093  0704  30FF               	movlw	255
  2094  0705  07C0               	addwf	dtoa@w,f
  2095  0706  30FF               	movlw	255
  2096  0707  3DC1               	addwfc	dtoa@w+1,f
  2097  0708                     l652:	
  2098                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 307:     }
  2099                           
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2102  0708  301F               	movlw	31
  2103  0709  00CC               	movwf	dtoa@i
  2104  070A  3000               	movlw	0
  2105  070B  00CD               	movwf	dtoa@i+1
  2106  070C                     l1347:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2109  070C  0022               	movlb	2	; select bank2
  2110  070D  01BF               	clrf	(_dbuf^(0+256)+31)
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2113  070E  2F78               	goto	l655
  2114  070F                     l1349:
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  2117  070F  30FF               	movlw	255
  2118  0710  0020               	movlb	0	; select bank0
  2119  0711  07CC               	addwf	dtoa@i,f
  2120  0712  30FF               	movlw	255
  2121  0713  3DCD               	addwfc	dtoa@i+1,f
  2122  0714                     l1351:
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2125  0714  300A               	movlw	10
  2126  0715  00A0               	movwf	___aomod@divisor
  2127  0716  01A1               	clrf	___aomod@divisor+1
  2128  0717  01A2               	clrf	___aomod@divisor+2
  2129  0718  01A3               	clrf	___aomod@divisor+3
  2130  0719  01A4               	clrf	___aomod@divisor+4
  2131  071A  01A5               	clrf	___aomod@divisor+5
  2132  071B  01A6               	clrf	___aomod@divisor+6
  2133  071C  01A7               	clrf	___aomod@divisor+7
  2134  071D  0844               	movf	dtoa@n,w
  2135  071E  00A8               	movwf	___aomod@dividend
  2136  071F  0845               	movf	dtoa@n+1,w
  2137  0720  00A9               	movwf	___aomod@dividend+1
  2138  0721  0846               	movf	dtoa@n+2,w
  2139  0722  00AA               	movwf	___aomod@dividend+2
  2140  0723  0847               	movf	dtoa@n+3,w
  2141  0724  00AB               	movwf	___aomod@dividend+3
  2142  0725  0848               	movf	dtoa@n+4,w
  2143  0726  00AC               	movwf	___aomod@dividend+4
  2144  0727  0849               	movf	dtoa@n+5,w
  2145  0728  00AD               	movwf	___aomod@dividend+5
  2146  0729  084A               	movf	dtoa@n+6,w
  2147  072A  00AE               	movwf	___aomod@dividend+6
  2148  072B  084B               	movf	dtoa@n+7,w
  2149  072C  00AF               	movwf	___aomod@dividend+7
  2150  072D  3183  239A  3186   	fcall	___aomod
  2151  0730  0020               	movlb	0	; select bank0
  2152  0731  0821               	movf	?___aomod+1,w
  2153  0732  00F4               	movwf	abs@a+1
  2154  0733  0820               	movf	?___aomod,w
  2155  0734  00F3               	movwf	abs@a
  2156  0735  318F  27AF  3186   	fcall	_abs
  2157  0738  0873               	movf	?_abs,w
  2158  0739  3E30               	addlw	48
  2159  073A  0020               	movlb	0	; select bank0
  2160  073B  00B8               	movwf	??_dtoa
  2161  073C  084C               	movf	dtoa@i,w
  2162  073D  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2163  073E  0086               	movwf	6
  2164  073F  3001               	movlw	1	; select bank2/3
  2165  0740  0087               	movwf	7
  2166  0741  0838               	movf	??_dtoa,w
  2167  0742  0081               	movwf	1
  2168  0743                     l1353:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  2171  0743  30FF               	movlw	255
  2172  0744  07BE               	addwf	dtoa@p,f
  2173  0745  30FF               	movlw	255
  2174  0746  3DBF               	addwfc	dtoa@p+1,f
  2175  0747                     l1355:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  2178  0747  30FF               	movlw	255
  2179  0748  07C0               	addwf	dtoa@w,f
  2180  0749  30FF               	movlw	255
  2181  074A  3DC1               	addwfc	dtoa@w+1,f
  2182  074B                     l1357:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2185  074B  300A               	movlw	10
  2186  074C  00A0               	movwf	___aodiv@divisor
  2187  074D  01A1               	clrf	___aodiv@divisor+1
  2188  074E  01A2               	clrf	___aodiv@divisor+2
  2189  074F  01A3               	clrf	___aodiv@divisor+3
  2190  0750  01A4               	clrf	___aodiv@divisor+4
  2191  0751  01A5               	clrf	___aodiv@divisor+5
  2192  0752  01A6               	clrf	___aodiv@divisor+6
  2193  0753  01A7               	clrf	___aodiv@divisor+7
  2194  0754  0844               	movf	dtoa@n,w
  2195  0755  00A8               	movwf	___aodiv@dividend
  2196  0756  0845               	movf	dtoa@n+1,w
  2197  0757  00A9               	movwf	___aodiv@dividend+1
  2198  0758  0846               	movf	dtoa@n+2,w
  2199  0759  00AA               	movwf	___aodiv@dividend+2
  2200  075A  0847               	movf	dtoa@n+3,w
  2201  075B  00AB               	movwf	___aodiv@dividend+3
  2202  075C  0848               	movf	dtoa@n+4,w
  2203  075D  00AC               	movwf	___aodiv@dividend+4
  2204  075E  0849               	movf	dtoa@n+5,w
  2205  075F  00AD               	movwf	___aodiv@dividend+5
  2206  0760  084A               	movf	dtoa@n+6,w
  2207  0761  00AE               	movwf	___aodiv@dividend+6
  2208  0762  084B               	movf	dtoa@n+7,w
  2209  0763  00AF               	movwf	___aodiv@dividend+7
  2210  0764  3184  2484  3186   	fcall	___aodiv
  2211  0767  0020               	movlb	0	; select bank0
  2212  0768  0820               	movf	?___aodiv,w
  2213  0769  00C4               	movwf	dtoa@n
  2214  076A  0821               	movf	?___aodiv+1,w
  2215  076B  00C5               	movwf	dtoa@n+1
  2216  076C  0822               	movf	?___aodiv+2,w
  2217  076D  00C6               	movwf	dtoa@n+2
  2218  076E  0823               	movf	?___aodiv+3,w
  2219  076F  00C7               	movwf	dtoa@n+3
  2220  0770  0824               	movf	?___aodiv+4,w
  2221  0771  00C8               	movwf	dtoa@n+4
  2222  0772  0825               	movf	?___aodiv+5,w
  2223  0773  00C9               	movwf	dtoa@n+5
  2224  0774  0826               	movf	?___aodiv+6,w
  2225  0775  00CA               	movwf	dtoa@n+6
  2226  0776  0827               	movf	?___aodiv+7,w
  2227  0777  00CB               	movwf	dtoa@n+7
  2228  0778                     l655:	
  2229                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 318:     }
  2230                           
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2233  0778  0020               	movlb	0	; select bank0
  2234  0779  084D               	movf	dtoa@i+1,w
  2235  077A  3A80               	xorlw	128
  2236  077B  00B8               	movwf	??_dtoa
  2237  077C  3080               	movlw	128
  2238  077D  0238               	subwf	??_dtoa,w
  2239  077E  1D03               	skipz
  2240  077F  2F82               	goto	u1305
  2241  0780  3001               	movlw	1
  2242  0781  024C               	subwf	dtoa@i,w
  2243  0782                     u1305:
  2244  0782  1C03               	skipc
  2245  0783  2F85               	goto	u1301
  2246  0784  2F86               	goto	u1300
  2247  0785                     u1301:
  2248  0785  2FB3               	goto	l1367
  2249  0786                     u1300:
  2250  0786                     l1359:
  2251  0786  0020               	movlb	0	; select bank0
  2252  0787  0844               	movf	dtoa@n,w
  2253  0788  0445               	iorwf	dtoa@n+1,w
  2254  0789  0446               	iorwf	dtoa@n+2,w
  2255  078A  0447               	iorwf	dtoa@n+3,w
  2256  078B  0448               	iorwf	dtoa@n+4,w
  2257  078C  0449               	iorwf	dtoa@n+5,w
  2258  078D  044A               	iorwf	dtoa@n+6,w
  2259  078E  044B               	iorwf	dtoa@n+7,w
  2260  078F  1D03               	skipz
  2261  0790  2F92               	goto	u1311
  2262  0791  2F93               	goto	u1310
  2263  0792                     u1311:
  2264  0792  2F0F               	goto	l1349
  2265  0793                     u1310:
  2266  0793                     l1361:
  2267  0793  083F               	movf	dtoa@p+1,w
  2268  0794  3A80               	xorlw	128
  2269  0795  00B8               	movwf	??_dtoa
  2270  0796  3080               	movlw	128
  2271  0797  0238               	subwf	??_dtoa,w
  2272  0798  1D03               	skipz
  2273  0799  2F9C               	goto	u1325
  2274  079A  3001               	movlw	1
  2275  079B  023E               	subwf	dtoa@p,w
  2276  079C                     u1325:
  2277  079C  1803               	skipnc
  2278  079D  2F9F               	goto	u1321
  2279  079E  2FA0               	goto	u1320
  2280  079F                     u1321:
  2281  079F  2F0F               	goto	l1349
  2282  07A0                     u1320:
  2283  07A0                     l1363:
  2284  07A0  0020               	movlb	0	; select bank0
  2285  07A1  0841               	movf	dtoa@w+1,w
  2286  07A2  3A80               	xorlw	128
  2287  07A3  00B8               	movwf	??_dtoa
  2288  07A4  3080               	movlw	128
  2289  07A5  0238               	subwf	??_dtoa,w
  2290  07A6  1D03               	skipz
  2291  07A7  2FAA               	goto	u1335
  2292  07A8  3001               	movlw	1
  2293  07A9  0240               	subwf	dtoa@w,w
  2294  07AA                     u1335:
  2295  07AA  1C03               	skipc
  2296  07AB  2FAD               	goto	u1331
  2297  07AC  2FAE               	goto	u1330
  2298  07AD                     u1331:
  2299  07AD  2FB3               	goto	l1367
  2300  07AE                     u1330:
  2301  07AE                     l1365:
  2302  07AE  0020               	movlb	0	; select bank0
  2303  07AF  18EC               	btfsc	_flags,1
  2304  07B0  2FB2               	goto	u1341
  2305  07B1  2FB3               	goto	u1340
  2306  07B2                     u1341:
  2307  07B2  2F0F               	goto	l1349
  2308  07B3                     u1340:
  2309  07B3                     l1367:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2312  07B3  0020               	movlb	0	; select bank0
  2313  07B4  0842               	movf	dtoa@s,w
  2314  07B5  0443               	iorwf	dtoa@s+1,w
  2315  07B6  1D03               	btfss	3,2
  2316  07B7  2FB9               	goto	u1351
  2317  07B8  2FBA               	goto	u1350
  2318  07B9                     u1351:
  2319  07B9  2FBE               	goto	l1371
  2320  07BA                     u1350:
  2321  07BA                     l1369:
  2322  07BA  1D6C               	btfss	_flags,2
  2323  07BB  2FBD               	goto	u1361
  2324  07BC  2FBE               	goto	u1360
  2325  07BD                     u1361:
  2326  07BD  2FDA               	goto	l1381
  2327  07BE                     u1360:
  2328  07BE                     l1371:
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  2331  07BE  30FF               	movlw	255
  2332  07BF  07CC               	addwf	dtoa@i,f
  2333  07C0  30FF               	movlw	255
  2334  07C1  3DCD               	addwfc	dtoa@i+1,f
  2335  07C2                     l1373:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2338  07C2  0842               	movf	dtoa@s,w
  2339  07C3  0443               	iorwf	dtoa@s+1,w
  2340  07C4  1D03               	btfss	3,2
  2341  07C5  2FC7               	goto	u1371
  2342  07C6  2FC8               	goto	u1370
  2343  07C7                     u1371:
  2344  07C7  2FCD               	goto	l1377
  2345  07C8                     u1370:
  2346  07C8                     l1375:
  2347  07C8  302B               	movlw	43
  2348  07C9  00BB               	movwf	_dtoa$531
  2349  07CA  3000               	movlw	0
  2350  07CB  00BC               	movwf	_dtoa$531+1
  2351  07CC  2FD1               	goto	l1379
  2352  07CD                     l1377:
  2353  07CD  302D               	movlw	45
  2354  07CE  00BB               	movwf	_dtoa$531
  2355  07CF  3000               	movlw	0
  2356  07D0  00BC               	movwf	_dtoa$531+1
  2357  07D1                     l1379:
  2358  07D1  083B               	movf	_dtoa$531,w
  2359  07D2  00B8               	movwf	??_dtoa
  2360  07D3  084C               	movf	dtoa@i,w
  2361  07D4  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2362  07D5  0086               	movwf	6
  2363  07D6  3001               	movlw	1	; select bank2/3
  2364  07D7  0087               	movwf	7
  2365  07D8  0838               	movf	??_dtoa,w
  2366  07D9  0081               	movwf	1
  2367  07DA                     l1381:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2370  07DA  084C               	movf	dtoa@i,w
  2371  07DB  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2372  07DC  00B8               	movwf	??_dtoa
  2373  07DD  0838               	movf	??_dtoa,w
  2374  07DE  00A4               	movwf	pad@buf
  2375  07DF  0841               	movf	dtoa@w+1,w
  2376  07E0  00A6               	movwf	pad@p+1
  2377  07E1  0840               	movf	dtoa@w,w
  2378  07E2  00A5               	movwf	pad@p
  2379  07E3  083D               	movf	dtoa@fp,w
  2380  07E4  3182  220C  3186   	fcall	_pad
  2381  07E7  0020               	movlb	0	; select bank0
  2382  07E8  0825               	movf	?_pad+1,w
  2383  07E9  00B1               	movwf	?_dtoa+1
  2384  07EA  0824               	movf	?_pad,w
  2385  07EB  00B0               	movwf	?_dtoa
  2386  07EC                     l669:
  2387  07EC  0008               	return
  2388  07ED                     __end_of_dtoa:
  2389                           
  2390                           	psect	text5
  2391  020C                     __ptext5:	
  2392 ;; *************** function _pad *****************
  2393 ;; Defined at:
  2394 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  fp              1    wreg     PTR struct _IO_FILE
  2397 ;;		 -> sprintf@f(10), 
  2398 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2399 ;;		 -> dbuf(32), 
  2400 ;;  p               2    5[BANK0 ] int 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  2403 ;;		 -> sprintf@f(10), 
  2404 ;;  w               2    9[BANK0 ] int 
  2405 ;;  i               2    7[BANK0 ] int 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  2    4[BANK0 ] int 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2415 ;;      Params:         0       3       0       0       0       0       0       0
  2416 ;;      Locals:         0       5       0       0       0       0       0       0
  2417 ;;      Temps:          1       0       0       0       0       0       0       0
  2418 ;;      Totals:         1       8       0       0       0       0       0       0
  2419 ;;Total ram usage:        9 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 3
  2422 ;; This function calls:
  2423 ;;		_fputc
  2424 ;;		_fputs
  2425 ;;		_strlen
  2426 ;; This function is called by:
  2427 ;;		_dtoa
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431  020C                     _pad:	
  2432                           ;psect for function _pad
  2433                           
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2437                           ;pad@fp stored from wreg
  2438  020C  0020               	movlb	0	; select bank0
  2439  020D  00AB               	movwf	pad@fp
  2440  020E                     l1301:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2443  020E  1C6C               	btfss	_flags,0
  2444  020F  2A11               	goto	u1171
  2445  0210  2A12               	goto	u1170
  2446  0211                     u1171:
  2447  0211  2A1A               	goto	l1305
  2448  0212                     u1170:
  2449  0212                     l1303:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2452  0212  082B               	movf	pad@fp,w
  2453  0213  00FC               	movwf	??_pad
  2454  0214  087C               	movf	??_pad,w
  2455  0215  00F8               	movwf	fputs@fp
  2456  0216  0824               	movf	pad@buf,w
  2457  0217  3180  20F2  3182   	fcall	_fputs
  2458  021A                     l1305:
  2459                           
  2460                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2461  021A  0020               	movlb	0	; select bank0
  2462  021B  1BA6               	btfsc	pad@p+1,7
  2463  021C  2A1E               	goto	u1181
  2464  021D  2A1F               	goto	u1180
  2465  021E                     u1181:
  2466  021E  2A24               	goto	l1309
  2467  021F                     u1180:
  2468  021F                     l1307:
  2469  021F  0826               	movf	pad@p+1,w
  2470  0220  00AA               	movwf	pad@w+1
  2471  0221  0825               	movf	pad@p,w
  2472  0222  00A9               	movwf	pad@w
  2473  0223  2A26               	goto	l638
  2474  0224                     l1309:
  2475  0224  01A9               	clrf	pad@w
  2476  0225  01AA               	clrf	pad@w+1
  2477  0226                     l638:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2480  0226  01A7               	clrf	pad@i
  2481  0227  01A8               	clrf	pad@i+1
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2484  0228  2A3A               	goto	l1315
  2485  0229                     l1311:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2488  0229  3020               	movlw	32
  2489  022A  00F0               	movwf	fputc@c
  2490  022B  3000               	movlw	0
  2491  022C  00F1               	movwf	fputc@c+1
  2492  022D  0020               	movlb	0	; select bank0
  2493  022E  082B               	movf	pad@fp,w
  2494  022F  00FC               	movwf	??_pad
  2495  0230  087C               	movf	??_pad,w
  2496  0231  00F2               	movwf	fputc@fp
  2497  0232  3181  2167  3182   	fcall	_fputc
  2498  0235                     l1313:
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2501  0235  3001               	movlw	1
  2502  0236  0020               	movlb	0	; select bank0
  2503  0237  07A7               	addwf	pad@i,f
  2504  0238  3000               	movlw	0
  2505  0239  3DA8               	addwfc	pad@i+1,f
  2506  023A                     l1315:
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2509  023A  0828               	movf	pad@i+1,w
  2510  023B  3A80               	xorlw	128
  2511  023C  00FC               	movwf	??_pad
  2512  023D  082A               	movf	pad@w+1,w
  2513  023E  3A80               	xorlw	128
  2514  023F  027C               	subwf	??_pad,w
  2515  0240  1D03               	skipz
  2516  0241  2A44               	goto	u1195
  2517  0242  0829               	movf	pad@w,w
  2518  0243  0227               	subwf	pad@i,w
  2519  0244                     u1195:
  2520  0244  1C03               	skipc
  2521  0245  2A47               	goto	u1191
  2522  0246  2A48               	goto	u1190
  2523  0247                     u1191:
  2524  0247  2A29               	goto	l1311
  2525  0248                     u1190:
  2526  0248                     l641:
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2529  0248  0020               	movlb	0	; select bank0
  2530  0249  186C               	btfsc	_flags,0
  2531  024A  2A4C               	goto	u1201
  2532  024B  2A4D               	goto	u1200
  2533  024C                     u1201:
  2534  024C  2A55               	goto	l1319
  2535  024D                     u1200:
  2536  024D                     l1317:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2539  024D  082B               	movf	pad@fp,w
  2540  024E  00FC               	movwf	??_pad
  2541  024F  087C               	movf	??_pad,w
  2542  0250  00F8               	movwf	fputs@fp
  2543  0251  0824               	movf	pad@buf,w
  2544  0252  3180  20F2  3182   	fcall	_fputs
  2545  0255                     l1319:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2548  0255  0020               	movlb	0	; select bank0
  2549  0256  0824               	movf	pad@buf,w
  2550  0257  318F  27C9  3182   	fcall	_strlen
  2551  025A  0020               	movlb	0	; select bank0
  2552  025B  0829               	movf	pad@w,w
  2553  025C  0770               	addwf	?_strlen,w
  2554  025D  00A4               	movwf	?_pad
  2555  025E  082A               	movf	pad@w+1,w
  2556  025F  3D71               	addwfc	?_strlen+1,w
  2557  0260  00A5               	movwf	?_pad+1
  2558  0261                     l643:
  2559  0261  0008               	return
  2560  0262                     __end_of_pad:
  2561                           
  2562                           	psect	text6
  2563  0FC9                     __ptext6:	
  2564 ;; *************** function _strlen *****************
  2565 ;; Defined at:
  2566 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  s               1    wreg     PTR const unsigned char 
  2569 ;;		 -> dbuf(32), 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  s               1    4[COMMON] PTR const unsigned char 
  2572 ;;		 -> dbuf(32), 
  2573 ;;  a               1    3[COMMON] PTR const unsigned char 
  2574 ;;		 -> dbuf(32), 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  2    0[COMMON] unsigned int 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2584 ;;      Params:         2       0       0       0       0       0       0       0
  2585 ;;      Locals:         2       0       0       0       0       0       0       0
  2586 ;;      Temps:          1       0       0       0       0       0       0       0
  2587 ;;      Totals:         5       0       0       0       0       0       0       0
  2588 ;;Total ram usage:        5 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_pad
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597  0FC9                     _strlen:	
  2598                           ;psect for function _strlen
  2599                           
  2600                           
  2601                           ;incstack = 0
  2602                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2603                           ;strlen@s stored from wreg
  2604  0FC9  00F4               	movwf	strlen@s
  2605  0FCA                     l1223:
  2606  0FCA  0874               	movf	strlen@s,w
  2607  0FCB  00F2               	movwf	??_strlen
  2608  0FCC  0872               	movf	??_strlen,w
  2609  0FCD  00F3               	movwf	strlen@a
  2610  0FCE  2FD3               	goto	l1227
  2611  0FCF                     l1225:
  2612  0FCF  3001               	movlw	1
  2613  0FD0  00F2               	movwf	??_strlen
  2614  0FD1  0872               	movf	??_strlen,w
  2615  0FD2  07F4               	addwf	strlen@s,f
  2616  0FD3                     l1227:
  2617  0FD3  0874               	movf	strlen@s,w
  2618  0FD4  0086               	movwf	6
  2619  0FD5  3001               	movlw	1	; select bank2/3
  2620  0FD6  0087               	movwf	7
  2621  0FD7  0801               	movf	1,w
  2622  0FD8  1D03               	btfss	3,2
  2623  0FD9  2FDB               	goto	u951
  2624  0FDA  2FDC               	goto	u950
  2625  0FDB                     u951:
  2626  0FDB  2FCF               	goto	l1225
  2627  0FDC                     u950:
  2628  0FDC                     l1229:
  2629  0FDC  0873               	movf	strlen@a,w
  2630  0FDD  0274               	subwf	strlen@s,w
  2631  0FDE  00F0               	movwf	?_strlen
  2632  0FDF  01F1               	clrf	?_strlen+1
  2633  0FE0  1BF0               	btfsc	?_strlen,7
  2634  0FE1  03F1               	decf	?_strlen+1,f
  2635  0FE2                     l719:
  2636  0FE2  0008               	return
  2637  0FE3                     __end_of_strlen:
  2638                           
  2639                           	psect	text7
  2640  00F2                     __ptext7:	
  2641 ;; *************** function _fputs *****************
  2642 ;; Defined at:
  2643 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  s               1    wreg     PTR const unsigned char 
  2646 ;;		 -> dbuf(32), 
  2647 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2648 ;;		 -> sprintf@f(10), 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2651 ;;		 -> dbuf(32), 
  2652 ;;  i               2    1[BANK0 ] int 
  2653 ;;  c               1    0[BANK0 ] unsigned char 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  2    8[COMMON] int 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2663 ;;      Params:         1       0       0       0       0       0       0       0
  2664 ;;      Locals:         0       4       0       0       0       0       0       0
  2665 ;;      Temps:          3       0       0       0       0       0       0       0
  2666 ;;      Totals:         4       4       0       0       0       0       0       0
  2667 ;;Total ram usage:        8 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; Hardware stack levels required when called: 2
  2670 ;; This function calls:
  2671 ;;		_fputc
  2672 ;; This function is called by:
  2673 ;;		_pad
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677  00F2                     _fputs:	
  2678                           ;psect for function _fputs
  2679                           
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2683                           ;fputs@s stored from wreg
  2684  00F2  0020               	movlb	0	; select bank0
  2685  00F3  00A3               	movwf	fputs@s
  2686  00F4                     l1215:
  2687  00F4  01A1               	clrf	fputs@i
  2688  00F5  01A2               	clrf	fputs@i+1
  2689  00F6  290A               	goto	l1221
  2690  00F7                     l1217:
  2691  00F7  0820               	movf	fputs@c,w
  2692  00F8  00F9               	movwf	??_fputs
  2693  00F9  01FA               	clrf	??_fputs+1
  2694  00FA  0879               	movf	??_fputs,w
  2695  00FB  00F0               	movwf	fputc@c
  2696  00FC  087A               	movf	??_fputs+1,w
  2697  00FD  00F1               	movwf	fputc@c+1
  2698  00FE  0878               	movf	fputs@fp,w
  2699  00FF  00FB               	movwf	??_fputs+2
  2700  0100  087B               	movf	??_fputs+2,w
  2701  0101  00F2               	movwf	fputc@fp
  2702  0102  3181  2167  3180   	fcall	_fputc
  2703  0105                     l1219:
  2704  0105  3001               	movlw	1
  2705  0106  0020               	movlb	0	; select bank0
  2706  0107  07A1               	addwf	fputs@i,f
  2707  0108  3000               	movlw	0
  2708  0109  3DA2               	addwfc	fputs@i+1,f
  2709  010A                     l1221:
  2710  010A  0821               	movf	fputs@i,w
  2711  010B  0723               	addwf	fputs@s,w
  2712  010C  00F9               	movwf	??_fputs
  2713  010D  0879               	movf	??_fputs,w
  2714  010E  0086               	movwf	6
  2715  010F  3001               	movlw	1	; select bank2/3
  2716  0110  0087               	movwf	7
  2717  0111  0801               	movf	1,w
  2718  0112  00FA               	movwf	??_fputs+1
  2719  0113  087A               	movf	??_fputs+1,w
  2720  0114  00A0               	movwf	fputs@c
  2721  0115  0820               	movf	fputs@c,w
  2722  0116  1D03               	btfss	3,2
  2723  0117  2919               	goto	u941
  2724  0118  291A               	goto	u940
  2725  0119                     u941:
  2726  0119  28F7               	goto	l1217
  2727  011A                     u940:
  2728  011A                     l710:
  2729  011A  0008               	return
  2730  011B                     __end_of_fputs:
  2731                           
  2732                           	psect	text8
  2733  0167                     __ptext8:	
  2734 ;; *************** function _fputc *****************
  2735 ;; Defined at:
  2736 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  c               2    0[COMMON] int 
  2739 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  2740 ;;		 -> sprintf@f(10), 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  2    0[COMMON] int 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2752 ;;      Params:         3       0       0       0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0
  2754 ;;      Temps:          5       0       0       0       0       0       0       0
  2755 ;;      Totals:         8       0       0       0       0       0       0       0
  2756 ;;Total ram usage:        8 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 1
  2759 ;; This function calls:
  2760 ;;		_putch
  2761 ;; This function is called by:
  2762 ;;		_pad
  2763 ;;		_vfpfcnvrt
  2764 ;;		_fputs
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768  0167                     _fputc:	
  2769                           ;psect for function _fputc
  2770                           
  2771  0167                     l1199:	
  2772                           ;incstack = 0
  2773                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2774                           
  2775  0167  0872               	movf	fputc@fp,w
  2776  0168  1903               	btfsc	3,2
  2777  0169  296B               	goto	u901
  2778  016A  296C               	goto	u900
  2779  016B                     u901:
  2780  016B  2971               	goto	l1203
  2781  016C                     u900:
  2782  016C                     l1201:
  2783  016C  0872               	movf	fputc@fp,w
  2784  016D  1D03               	btfss	3,2
  2785  016E  2970               	goto	u911
  2786  016F  2971               	goto	u910
  2787  0170                     u911:
  2788  0170  2976               	goto	l1205
  2789  0171                     u910:
  2790  0171                     l1203:
  2791  0171  0870               	movf	fputc@c,w
  2792  0172  3180  200C  3181   	fcall	_putch
  2793  0175  29B8               	goto	l702
  2794  0176                     l1205:
  2795  0176  0872               	movf	fputc@fp,w
  2796  0177  3E08               	addlw	8
  2797  0178  0086               	movwf	6
  2798  0179  0187               	clrf	7
  2799  017A  0016               	moviw fsr1++
  2800  017B  0401               	iorwf	1,w
  2801  017C  1903               	btfsc	3,2
  2802  017D  297F               	goto	u921
  2803  017E  2980               	goto	u920
  2804  017F                     u921:
  2805  017F  299E               	goto	l1209
  2806  0180                     u920:
  2807  0180                     l1207:
  2808  0180  0872               	movf	fputc@fp,w
  2809  0181  3E08               	addlw	8
  2810  0182  0086               	movwf	6
  2811  0183  0187               	clrf	7
  2812  0184  3F40               	moviw [0]fsr1
  2813  0185  00F3               	movwf	??_fputc
  2814  0186  3F41               	moviw [1]fsr1
  2815  0187  00F4               	movwf	??_fputc+1
  2816  0188  0872               	movf	fputc@fp,w
  2817  0189  3E02               	addlw	2
  2818  018A  0086               	movwf	6
  2819  018B  0187               	clrf	7
  2820  018C  3F40               	moviw [0]fsr1
  2821  018D  00F5               	movwf	??_fputc+2
  2822  018E  3F41               	moviw [1]fsr1
  2823  018F  00F6               	movwf	??_fputc+3
  2824  0190  0876               	movf	??_fputc+3,w
  2825  0191  3A80               	xorlw	128
  2826  0192  00F7               	movwf	??_fputc+4
  2827  0193  0874               	movf	??_fputc+1,w
  2828  0194  3A80               	xorlw	128
  2829  0195  0277               	subwf	??_fputc+4,w
  2830  0196  1D03               	skipz
  2831  0197  299A               	goto	u935
  2832  0198  0873               	movf	??_fputc,w
  2833  0199  0275               	subwf	??_fputc+2,w
  2834  019A                     u935:
  2835  019A  1803               	skipnc
  2836  019B  299D               	goto	u931
  2837  019C  299E               	goto	u930
  2838  019D                     u931:
  2839  019D  29B8               	goto	l702
  2840  019E                     u930:
  2841  019E                     l1209:
  2842  019E  0870               	movf	fputc@c,w
  2843  019F  00F3               	movwf	??_fputc
  2844  01A0  0872               	movf	fputc@fp,w
  2845  01A1  0086               	movwf	6
  2846  01A2  0187               	clrf	7
  2847  01A3  0872               	movf	fputc@fp,w
  2848  01A4  3E02               	addlw	2
  2849  01A5  0084               	movwf	4
  2850  01A6  0185               	clrf	5
  2851  01A7  0800               	movf	0,w
  2852  01A8  0701               	addwf	1,w
  2853  01A9  00F4               	movwf	??_fputc+1
  2854  01AA  0874               	movf	??_fputc+1,w
  2855  01AB  0086               	movwf	6
  2856  01AC  0187               	clrf	7
  2857  01AD  0873               	movf	??_fputc,w
  2858  01AE  0081               	movwf	1
  2859  01AF                     l1211:
  2860  01AF  0872               	movf	fputc@fp,w
  2861  01B0  3E02               	addlw	2
  2862  01B1  0086               	movwf	6
  2863  01B2  0187               	clrf	7
  2864  01B3  3001               	movlw	1
  2865  01B4  0781               	addwf	1,f
  2866  01B5  3141               	addfsr 1,1
  2867  01B6  1803               	skipnc
  2868  01B7  0A81               	incf	1,f
  2869  01B8                     l702:
  2870  01B8  0008               	return
  2871  01B9                     __end_of_fputc:
  2872                           
  2873                           	psect	text9
  2874  000C                     __ptext9:	
  2875 ;; *************** function _putch *****************
  2876 ;; Defined at:
  2877 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  c               1    wreg     unsigned char 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  c               1    0[COMMON] unsigned char 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2891 ;;      Params:         0       0       0       0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0
  2894 ;;      Totals:         0       0       0       0       0       0       0       0
  2895 ;;Total ram usage:        0 bytes
  2896 ;; Hardware stack levels used: 1
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_fputc
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904  000C                     _putch:	
  2905                           ;psect for function _putch
  2906                           
  2907  000C                     l713:	
  2908                           ;incstack = 0
  2909                           ; Regs used in _putch: [wreg]
  2910                           
  2911  000C  0008               	return
  2912  000D                     __end_of_putch:
  2913                           
  2914                           	psect	text10
  2915  0FAF                     __ptext10:	
  2916 ;; *************** function _abs *****************
  2917 ;; Defined at:
  2918 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  a               2    3[COMMON] int 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  2    3[COMMON] int 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2932 ;;      Params:         2       0       0       0       0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0
  2934 ;;      Temps:          2       0       0       0       0       0       0       0
  2935 ;;      Totals:         4       0       0       0       0       0       0       0
  2936 ;;Total ram usage:        4 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_dtoa
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945  0FAF                     _abs:	
  2946                           ;psect for function _abs
  2947                           
  2948  0FAF                     l1323:	
  2949                           ;incstack = 0
  2950                           ; Regs used in _abs: [wreg+status,2+status,0]
  2951                           
  2952  0FAF  0874               	movf	abs@a+1,w
  2953  0FB0  3A80               	xorlw	128
  2954  0FB1  00F5               	movwf	??_abs
  2955  0FB2  3080               	movlw	128
  2956  0FB3  0275               	subwf	??_abs,w
  2957  0FB4  1D03               	skipz
  2958  0FB5  2FB8               	goto	u1215
  2959  0FB6  3001               	movlw	1
  2960  0FB7  0273               	subwf	abs@a,w
  2961  0FB8                     u1215:
  2962  0FB8  1803               	skipnc
  2963  0FB9  2FBB               	goto	u1211
  2964  0FBA  2FBC               	goto	u1210
  2965  0FBB                     u1211:
  2966  0FBB  2FC8               	goto	l687
  2967  0FBC                     u1210:
  2968  0FBC                     l1325:
  2969  0FBC  0973               	comf	abs@a,w
  2970  0FBD  00F5               	movwf	??_abs
  2971  0FBE  0974               	comf	abs@a+1,w
  2972  0FBF  00F6               	movwf	??_abs+1
  2973  0FC0  0AF5               	incf	??_abs,f
  2974  0FC1  1903               	skipnz
  2975  0FC2  0AF6               	incf	??_abs+1,f
  2976  0FC3  0875               	movf	??_abs,w
  2977  0FC4  00F3               	movwf	?_abs
  2978  0FC5  0876               	movf	??_abs+1,w
  2979  0FC6  00F4               	movwf	?_abs+1
  2980  0FC7  2FC8               	goto	l690
  2981  0FC8                     l687:
  2982  0FC8                     l690:
  2983  0FC8  0008               	return
  2984  0FC9                     __end_of_abs:
  2985                           
  2986                           	psect	text11
  2987  039A                     __ptext11:	
  2988 ;; *************** function ___aomod *****************
  2989 ;; Defined at:
  2990 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  divisor         8    0[BANK0 ] long long 
  2993 ;;  dividend        8    8[BANK0 ] long long 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  sign            1    2[COMMON] unsigned char 
  2996 ;;  counter         1    1[COMMON] unsigned char 
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  8    0[BANK0 ] long long 
  2999 ;; Registers used:
  3000 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3006 ;;      Params:         0      16       0       0       0       0       0       0
  3007 ;;      Locals:         2       0       0       0       0       0       0       0
  3008 ;;      Temps:          1       0       0       0       0       0       0       0
  3009 ;;      Totals:         3      16       0       0       0       0       0       0
  3010 ;;Total ram usage:       19 bytes
  3011 ;; Hardware stack levels used: 1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_dtoa
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019  039A                     ___aomod:	
  3020                           ;psect for function ___aomod
  3021                           
  3022  039A                     l1271:	
  3023                           ;incstack = 0
  3024                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3025                           
  3026  039A  01F2               	clrf	___aomod@sign
  3027  039B                     l1273:
  3028  039B  3028               	movlw	low ___aomod@dividend
  3029  039C  0086               	movwf	6
  3030  039D  3000               	movlw	high ___aomod@dividend
  3031  039E  0087               	movwf	7
  3032  039F  3F47               	moviw [7]fsr1
  3033  03A0  00F0               	movwf	??___aomod
  3034  03A1  1FF0               	btfss	??___aomod,7
  3035  03A2  2BA4               	goto	u1071
  3036  03A3  2BA5               	goto	u1070
  3037  03A4                     u1071:
  3038  03A4  2BC6               	goto	l1277
  3039  03A5                     u1070:
  3040  03A5                     l1275:
  3041  03A5  0020               	movlb	0	; select bank0
  3042  03A6  09A8               	comf	___aomod@dividend,f
  3043  03A7  09A9               	comf	___aomod@dividend+1,f
  3044  03A8  09AA               	comf	___aomod@dividend+2,f
  3045  03A9  09AB               	comf	___aomod@dividend+3,f
  3046  03AA  09AC               	comf	___aomod@dividend+4,f
  3047  03AB  09AD               	comf	___aomod@dividend+5,f
  3048  03AC  09AE               	comf	___aomod@dividend+6,f
  3049  03AD  09AF               	comf	___aomod@dividend+7,f
  3050  03AE  0AA8               	incf	___aomod@dividend,f
  3051  03AF  1D03               	skipz
  3052  03B0  2BC4               	goto	u108lld
  3053  03B1  0AA9               	incf	___aomod@dividend+1,f
  3054  03B2  1D03               	skipz
  3055  03B3  2BC4               	goto	u108lld
  3056  03B4  0AAA               	incf	___aomod@dividend+2,f
  3057  03B5  1D03               	skipz
  3058  03B6  2BC4               	goto	u108lld
  3059  03B7  0AAB               	incf	___aomod@dividend+3,f
  3060  03B8  1D03               	skipz
  3061  03B9  2BC4               	goto	u108lld
  3062  03BA  0AAC               	incf	___aomod@dividend+4,f
  3063  03BB  1D03               	skipz
  3064  03BC  2BC4               	goto	u108lld
  3065  03BD  0AAD               	incf	___aomod@dividend+5,f
  3066  03BE  1D03               	skipz
  3067  03BF  2BC4               	goto	u108lld
  3068  03C0  0AAE               	incf	___aomod@dividend+6,f
  3069  03C1  1D03               	skipz
  3070  03C2  2BC4               	goto	u108lld
  3071  03C3  0AAF               	incf	___aomod@dividend+7,f
  3072  03C4                     u108lld:
  3073  03C4  01F2               	clrf	___aomod@sign
  3074  03C5  0AF2               	incf	___aomod@sign,f
  3075  03C6                     l1277:
  3076  03C6  3020               	movlw	low ___aomod@divisor
  3077  03C7  0086               	movwf	6
  3078  03C8  3000               	movlw	high ___aomod@divisor
  3079  03C9  0087               	movwf	7
  3080  03CA  3F47               	moviw [7]fsr1
  3081  03CB  00F0               	movwf	??___aomod
  3082  03CC  1FF0               	btfss	??___aomod,7
  3083  03CD  2BCF               	goto	u1091
  3084  03CE  2BD0               	goto	u1090
  3085  03CF                     u1091:
  3086  03CF  2BEF               	goto	l1281
  3087  03D0                     u1090:
  3088  03D0                     l1279:
  3089  03D0  0020               	movlb	0	; select bank0
  3090  03D1  09A0               	comf	___aomod@divisor,f
  3091  03D2  09A1               	comf	___aomod@divisor+1,f
  3092  03D3  09A2               	comf	___aomod@divisor+2,f
  3093  03D4  09A3               	comf	___aomod@divisor+3,f
  3094  03D5  09A4               	comf	___aomod@divisor+4,f
  3095  03D6  09A5               	comf	___aomod@divisor+5,f
  3096  03D7  09A6               	comf	___aomod@divisor+6,f
  3097  03D8  09A7               	comf	___aomod@divisor+7,f
  3098  03D9  0AA0               	incf	___aomod@divisor,f
  3099  03DA  1D03               	skipz
  3100  03DB  2BEF               	goto	u110lld
  3101  03DC  0AA1               	incf	___aomod@divisor+1,f
  3102  03DD  1D03               	skipz
  3103  03DE  2BEF               	goto	u110lld
  3104  03DF  0AA2               	incf	___aomod@divisor+2,f
  3105  03E0  1D03               	skipz
  3106  03E1  2BEF               	goto	u110lld
  3107  03E2  0AA3               	incf	___aomod@divisor+3,f
  3108  03E3  1D03               	skipz
  3109  03E4  2BEF               	goto	u110lld
  3110  03E5  0AA4               	incf	___aomod@divisor+4,f
  3111  03E6  1D03               	skipz
  3112  03E7  2BEF               	goto	u110lld
  3113  03E8  0AA5               	incf	___aomod@divisor+5,f
  3114  03E9  1D03               	skipz
  3115  03EA  2BEF               	goto	u110lld
  3116  03EB  0AA6               	incf	___aomod@divisor+6,f
  3117  03EC  1D03               	skipz
  3118  03ED  2BEF               	goto	u110lld
  3119  03EE  0AA7               	incf	___aomod@divisor+7,f
  3120  03EF                     u110lld:
  3121  03EF                     l1281:
  3122  03EF  0020               	movlb	0	; select bank0
  3123  03F0  0820               	movf	___aomod@divisor,w
  3124  03F1  0421               	iorwf	___aomod@divisor+1,w
  3125  03F2  0422               	iorwf	___aomod@divisor+2,w
  3126  03F3  0423               	iorwf	___aomod@divisor+3,w
  3127  03F4  0424               	iorwf	___aomod@divisor+4,w
  3128  03F5  0425               	iorwf	___aomod@divisor+5,w
  3129  03F6  0426               	iorwf	___aomod@divisor+6,w
  3130  03F7  0427               	iorwf	___aomod@divisor+7,w
  3131  03F8  1903               	skipnz
  3132  03F9  2BFB               	goto	u1111
  3133  03FA  2BFC               	goto	u1110
  3134  03FB                     u1111:
  3135  03FB  2C4F               	goto	l1297
  3136  03FC                     u1110:
  3137  03FC                     l1283:
  3138  03FC  01F1               	clrf	___aomod@counter
  3139  03FD  0AF1               	incf	___aomod@counter,f
  3140  03FE  2C0B               	goto	l1289
  3141  03FF                     l1285:
  3142  03FF  35A0               	lslf	___aomod@divisor,f
  3143  0400  0DA1               	rlf	___aomod@divisor+1,f
  3144  0401  0DA2               	rlf	___aomod@divisor+2,f
  3145  0402  0DA3               	rlf	___aomod@divisor+3,f
  3146  0403  0DA4               	rlf	___aomod@divisor+4,f
  3147  0404  0DA5               	rlf	___aomod@divisor+5,f
  3148  0405  0DA6               	rlf	___aomod@divisor+6,f
  3149  0406  0DA7               	rlf	___aomod@divisor+7,f
  3150  0407                     l1287:
  3151  0407  3001               	movlw	1
  3152  0408  00F0               	movwf	??___aomod
  3153  0409  0870               	movf	??___aomod,w
  3154  040A  07F1               	addwf	___aomod@counter,f
  3155  040B                     l1289:
  3156  040B  1FA7               	btfss	___aomod@divisor+7,7
  3157  040C  2C0E               	goto	u1121
  3158  040D  2C0F               	goto	u1120
  3159  040E                     u1121:
  3160  040E  2BFF               	goto	l1285
  3161  040F                     u1120:
  3162  040F                     l1291:
  3163  040F  0827               	movf	___aomod@divisor+7,w
  3164  0410  022F               	subwf	___aomod@dividend+7,w
  3165  0411  1D03               	skipz
  3166  0412  2C2D               	goto	u1135
  3167  0413  0826               	movf	___aomod@divisor+6,w
  3168  0414  022E               	subwf	___aomod@dividend+6,w
  3169  0415  1D03               	skipz
  3170  0416  2C2D               	goto	u1135
  3171  0417  0825               	movf	___aomod@divisor+5,w
  3172  0418  022D               	subwf	___aomod@dividend+5,w
  3173  0419  1D03               	skipz
  3174  041A  2C2D               	goto	u1135
  3175  041B  0824               	movf	___aomod@divisor+4,w
  3176  041C  022C               	subwf	___aomod@dividend+4,w
  3177  041D  1D03               	skipz
  3178  041E  2C2D               	goto	u1135
  3179  041F  0823               	movf	___aomod@divisor+3,w
  3180  0420  022B               	subwf	___aomod@dividend+3,w
  3181  0421  1D03               	skipz
  3182  0422  2C2D               	goto	u1135
  3183  0423  0822               	movf	___aomod@divisor+2,w
  3184  0424  022A               	subwf	___aomod@dividend+2,w
  3185  0425  1D03               	skipz
  3186  0426  2C2D               	goto	u1135
  3187  0427  0821               	movf	___aomod@divisor+1,w
  3188  0428  0229               	subwf	___aomod@dividend+1,w
  3189  0429  1D03               	skipz
  3190  042A  2C2D               	goto	u1135
  3191  042B  0820               	movf	___aomod@divisor,w
  3192  042C  0228               	subwf	___aomod@dividend,w
  3193  042D                     u1135:
  3194  042D  1C03               	skipc
  3195  042E  2C30               	goto	u1131
  3196  042F  2C31               	goto	u1130
  3197  0430                     u1131:
  3198  0430  2C41               	goto	l1295
  3199  0431                     u1130:
  3200  0431                     l1293:
  3201  0431  0820               	movf	___aomod@divisor,w
  3202  0432  02A8               	subwf	___aomod@dividend,f
  3203  0433  0821               	movf	___aomod@divisor+1,w
  3204  0434  3BA9               	subwfb	___aomod@dividend+1,f
  3205  0435  0822               	movf	___aomod@divisor+2,w
  3206  0436  3BAA               	subwfb	___aomod@dividend+2,f
  3207  0437  0823               	movf	___aomod@divisor+3,w
  3208  0438  3BAB               	subwfb	___aomod@dividend+3,f
  3209  0439  0824               	movf	___aomod@divisor+4,w
  3210  043A  3BAC               	subwfb	___aomod@dividend+4,f
  3211  043B  0825               	movf	___aomod@divisor+5,w
  3212  043C  3BAD               	subwfb	___aomod@dividend+5,f
  3213  043D  0826               	movf	___aomod@divisor+6,w
  3214  043E  3BAE               	subwfb	___aomod@dividend+6,f
  3215  043F  0827               	movf	___aomod@divisor+7,w
  3216  0440  3BAF               	subwfb	___aomod@dividend+7,f
  3217  0441                     l1295:
  3218  0441  36A7               	lsrf	___aomod@divisor+7,f
  3219  0442  0CA6               	rrf	___aomod@divisor+6,f
  3220  0443  0CA5               	rrf	___aomod@divisor+5,f
  3221  0444  0CA4               	rrf	___aomod@divisor+4,f
  3222  0445  0CA3               	rrf	___aomod@divisor+3,f
  3223  0446  0CA2               	rrf	___aomod@divisor+2,f
  3224  0447  0CA1               	rrf	___aomod@divisor+1,f
  3225  0448  0CA0               	rrf	___aomod@divisor,f
  3226  0449  3001               	movlw	1
  3227  044A  02F1               	subwf	___aomod@counter,f
  3228  044B  1D03               	btfss	3,2
  3229  044C  2C4E               	goto	u1141
  3230  044D  2C4F               	goto	u1140
  3231  044E                     u1141:
  3232  044E  2C0F               	goto	l1291
  3233  044F                     u1140:
  3234  044F                     l1297:
  3235  044F  0872               	movf	___aomod@sign,w
  3236  0450  1903               	btfsc	3,2
  3237  0451  2C53               	goto	u1151
  3238  0452  2C54               	goto	u1150
  3239  0453                     u1151:
  3240  0453  2C72               	goto	l261
  3241  0454                     u1150:
  3242  0454                     l1299:
  3243  0454  09A8               	comf	___aomod@dividend,f
  3244  0455  09A9               	comf	___aomod@dividend+1,f
  3245  0456  09AA               	comf	___aomod@dividend+2,f
  3246  0457  09AB               	comf	___aomod@dividend+3,f
  3247  0458  09AC               	comf	___aomod@dividend+4,f
  3248  0459  09AD               	comf	___aomod@dividend+5,f
  3249  045A  09AE               	comf	___aomod@dividend+6,f
  3250  045B  09AF               	comf	___aomod@dividend+7,f
  3251  045C  0AA8               	incf	___aomod@dividend,f
  3252  045D  1D03               	skipz
  3253  045E  2C72               	goto	u116lld
  3254  045F  0AA9               	incf	___aomod@dividend+1,f
  3255  0460  1D03               	skipz
  3256  0461  2C72               	goto	u116lld
  3257  0462  0AAA               	incf	___aomod@dividend+2,f
  3258  0463  1D03               	skipz
  3259  0464  2C72               	goto	u116lld
  3260  0465  0AAB               	incf	___aomod@dividend+3,f
  3261  0466  1D03               	skipz
  3262  0467  2C72               	goto	u116lld
  3263  0468  0AAC               	incf	___aomod@dividend+4,f
  3264  0469  1D03               	skipz
  3265  046A  2C72               	goto	u116lld
  3266  046B  0AAD               	incf	___aomod@dividend+5,f
  3267  046C  1D03               	skipz
  3268  046D  2C72               	goto	u116lld
  3269  046E  0AAE               	incf	___aomod@dividend+6,f
  3270  046F  1D03               	skipz
  3271  0470  2C72               	goto	u116lld
  3272  0471  0AAF               	incf	___aomod@dividend+7,f
  3273  0472                     u116lld:
  3274  0472                     l261:
  3275  0472  0020               	movlb	0	; select bank0
  3276  0473  0828               	movf	___aomod@dividend,w
  3277  0474  00A0               	movwf	?___aomod
  3278  0475  0829               	movf	___aomod@dividend+1,w
  3279  0476  00A1               	movwf	?___aomod+1
  3280  0477  082A               	movf	___aomod@dividend+2,w
  3281  0478  00A2               	movwf	?___aomod+2
  3282  0479  082B               	movf	___aomod@dividend+3,w
  3283  047A  00A3               	movwf	?___aomod+3
  3284  047B  082C               	movf	___aomod@dividend+4,w
  3285  047C  00A4               	movwf	?___aomod+4
  3286  047D  082D               	movf	___aomod@dividend+5,w
  3287  047E  00A5               	movwf	?___aomod+5
  3288  047F  082E               	movf	___aomod@dividend+6,w
  3289  0480  00A6               	movwf	?___aomod+6
  3290  0481  082F               	movf	___aomod@dividend+7,w
  3291  0482  00A7               	movwf	?___aomod+7
  3292  0483                     l262:
  3293  0483  0008               	return
  3294  0484                     __end_of___aomod:
  3295                           
  3296                           	psect	text12
  3297  0484                     __ptext12:	
  3298 ;; *************** function ___aodiv *****************
  3299 ;; Defined at:
  3300 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  divisor         8    0[BANK0 ] long long 
  3303 ;;  dividend        8    8[BANK0 ] long long 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  quotient        8    3[COMMON] long long 
  3306 ;;  sign            1    2[COMMON] unsigned char 
  3307 ;;  counter         1    1[COMMON] unsigned char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  8    0[BANK0 ] long long 
  3310 ;; Registers used:
  3311 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3317 ;;      Params:         0      16       0       0       0       0       0       0
  3318 ;;      Locals:        10       0       0       0       0       0       0       0
  3319 ;;      Temps:          1       0       0       0       0       0       0       0
  3320 ;;      Totals:        11      16       0       0       0       0       0       0
  3321 ;;Total ram usage:       27 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_dtoa
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330  0484                     ___aodiv:	
  3331                           ;psect for function ___aodiv
  3332                           
  3333  0484                     l1233:	
  3334                           ;incstack = 0
  3335                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3336                           
  3337  0484  01F2               	clrf	___aodiv@sign
  3338  0485                     l1235:
  3339  0485  3020               	movlw	low ___aodiv@divisor
  3340  0486  0086               	movwf	6
  3341  0487  3000               	movlw	high ___aodiv@divisor
  3342  0488  0087               	movwf	7
  3343  0489  3F47               	moviw [7]fsr1
  3344  048A  00F0               	movwf	??___aodiv
  3345  048B  1FF0               	btfss	??___aodiv,7
  3346  048C  2C8E               	goto	u961
  3347  048D  2C8F               	goto	u960
  3348  048E                     u961:
  3349  048E  2CB0               	goto	l1239
  3350  048F                     u960:
  3351  048F                     l1237:
  3352  048F  0020               	movlb	0	; select bank0
  3353  0490  09A0               	comf	___aodiv@divisor,f
  3354  0491  09A1               	comf	___aodiv@divisor+1,f
  3355  0492  09A2               	comf	___aodiv@divisor+2,f
  3356  0493  09A3               	comf	___aodiv@divisor+3,f
  3357  0494  09A4               	comf	___aodiv@divisor+4,f
  3358  0495  09A5               	comf	___aodiv@divisor+5,f
  3359  0496  09A6               	comf	___aodiv@divisor+6,f
  3360  0497  09A7               	comf	___aodiv@divisor+7,f
  3361  0498  0AA0               	incf	___aodiv@divisor,f
  3362  0499  1D03               	skipz
  3363  049A  2CAE               	goto	u97lld
  3364  049B  0AA1               	incf	___aodiv@divisor+1,f
  3365  049C  1D03               	skipz
  3366  049D  2CAE               	goto	u97lld
  3367  049E  0AA2               	incf	___aodiv@divisor+2,f
  3368  049F  1D03               	skipz
  3369  04A0  2CAE               	goto	u97lld
  3370  04A1  0AA3               	incf	___aodiv@divisor+3,f
  3371  04A2  1D03               	skipz
  3372  04A3  2CAE               	goto	u97lld
  3373  04A4  0AA4               	incf	___aodiv@divisor+4,f
  3374  04A5  1D03               	skipz
  3375  04A6  2CAE               	goto	u97lld
  3376  04A7  0AA5               	incf	___aodiv@divisor+5,f
  3377  04A8  1D03               	skipz
  3378  04A9  2CAE               	goto	u97lld
  3379  04AA  0AA6               	incf	___aodiv@divisor+6,f
  3380  04AB  1D03               	skipz
  3381  04AC  2CAE               	goto	u97lld
  3382  04AD  0AA7               	incf	___aodiv@divisor+7,f
  3383  04AE                     u97lld:
  3384  04AE  01F2               	clrf	___aodiv@sign
  3385  04AF  0AF2               	incf	___aodiv@sign,f
  3386  04B0                     l1239:
  3387  04B0  3028               	movlw	low ___aodiv@dividend
  3388  04B1  0086               	movwf	6
  3389  04B2  3000               	movlw	high ___aodiv@dividend
  3390  04B3  0087               	movwf	7
  3391  04B4  3F47               	moviw [7]fsr1
  3392  04B5  00F0               	movwf	??___aodiv
  3393  04B6  1FF0               	btfss	??___aodiv,7
  3394  04B7  2CB9               	goto	u981
  3395  04B8  2CBA               	goto	u980
  3396  04B9                     u981:
  3397  04B9  2CDD               	goto	l1245
  3398  04BA                     u980:
  3399  04BA                     l1241:
  3400  04BA  0020               	movlb	0	; select bank0
  3401  04BB  09A8               	comf	___aodiv@dividend,f
  3402  04BC  09A9               	comf	___aodiv@dividend+1,f
  3403  04BD  09AA               	comf	___aodiv@dividend+2,f
  3404  04BE  09AB               	comf	___aodiv@dividend+3,f
  3405  04BF  09AC               	comf	___aodiv@dividend+4,f
  3406  04C0  09AD               	comf	___aodiv@dividend+5,f
  3407  04C1  09AE               	comf	___aodiv@dividend+6,f
  3408  04C2  09AF               	comf	___aodiv@dividend+7,f
  3409  04C3  0AA8               	incf	___aodiv@dividend,f
  3410  04C4  1D03               	skipz
  3411  04C5  2CD9               	goto	u99lld
  3412  04C6  0AA9               	incf	___aodiv@dividend+1,f
  3413  04C7  1D03               	skipz
  3414  04C8  2CD9               	goto	u99lld
  3415  04C9  0AAA               	incf	___aodiv@dividend+2,f
  3416  04CA  1D03               	skipz
  3417  04CB  2CD9               	goto	u99lld
  3418  04CC  0AAB               	incf	___aodiv@dividend+3,f
  3419  04CD  1D03               	skipz
  3420  04CE  2CD9               	goto	u99lld
  3421  04CF  0AAC               	incf	___aodiv@dividend+4,f
  3422  04D0  1D03               	skipz
  3423  04D1  2CD9               	goto	u99lld
  3424  04D2  0AAD               	incf	___aodiv@dividend+5,f
  3425  04D3  1D03               	skipz
  3426  04D4  2CD9               	goto	u99lld
  3427  04D5  0AAE               	incf	___aodiv@dividend+6,f
  3428  04D6  1D03               	skipz
  3429  04D7  2CD9               	goto	u99lld
  3430  04D8  0AAF               	incf	___aodiv@dividend+7,f
  3431  04D9                     u99lld:
  3432  04D9                     l1243:
  3433  04D9  3001               	movlw	1
  3434  04DA  00F0               	movwf	??___aodiv
  3435  04DB  0870               	movf	??___aodiv,w
  3436  04DC  06F2               	xorwf	___aodiv@sign,f
  3437  04DD                     l1245:
  3438  04DD  3073               	movlw	low ___aodiv@quotient
  3439  04DE  0086               	movwf	6
  3440  04DF  3000               	movlw	high ___aodiv@quotient
  3441  04E0  0087               	movwf	7
  3442  04E1  3008               	movlw	8
  3443  04E2  00F0               	movwf	??___aodiv
  3444  04E3  3000               	movlw	0
  3445  04E4                     u1000:
  3446  04E4  001E               	movwi fsr1++
  3447  04E5  0BF0               	decfsz	??___aodiv,f
  3448  04E6  2CE4               	goto	u1000
  3449  04E7                     l1247:
  3450  04E7  0020               	movlb	0	; select bank0
  3451  04E8  0820               	movf	___aodiv@divisor,w
  3452  04E9  0421               	iorwf	___aodiv@divisor+1,w
  3453  04EA  0422               	iorwf	___aodiv@divisor+2,w
  3454  04EB  0423               	iorwf	___aodiv@divisor+3,w
  3455  04EC  0424               	iorwf	___aodiv@divisor+4,w
  3456  04ED  0425               	iorwf	___aodiv@divisor+5,w
  3457  04EE  0426               	iorwf	___aodiv@divisor+6,w
  3458  04EF  0427               	iorwf	___aodiv@divisor+7,w
  3459  04F0  1903               	skipnz
  3460  04F1  2CF3               	goto	u1011
  3461  04F2  2CF4               	goto	u1010
  3462  04F3                     u1011:
  3463  04F3  2D50               	goto	l1267
  3464  04F4                     u1010:
  3465  04F4                     l1249:
  3466  04F4  01F1               	clrf	___aodiv@counter
  3467  04F5  0AF1               	incf	___aodiv@counter,f
  3468  04F6  2D03               	goto	l1255
  3469  04F7                     l1251:
  3470  04F7  35A0               	lslf	___aodiv@divisor,f
  3471  04F8  0DA1               	rlf	___aodiv@divisor+1,f
  3472  04F9  0DA2               	rlf	___aodiv@divisor+2,f
  3473  04FA  0DA3               	rlf	___aodiv@divisor+3,f
  3474  04FB  0DA4               	rlf	___aodiv@divisor+4,f
  3475  04FC  0DA5               	rlf	___aodiv@divisor+5,f
  3476  04FD  0DA6               	rlf	___aodiv@divisor+6,f
  3477  04FE  0DA7               	rlf	___aodiv@divisor+7,f
  3478  04FF                     l1253:
  3479  04FF  3001               	movlw	1
  3480  0500  00F0               	movwf	??___aodiv
  3481  0501  0870               	movf	??___aodiv,w
  3482  0502  07F1               	addwf	___aodiv@counter,f
  3483  0503                     l1255:
  3484  0503  1FA7               	btfss	___aodiv@divisor+7,7
  3485  0504  2D06               	goto	u1021
  3486  0505  2D07               	goto	u1020
  3487  0506                     u1021:
  3488  0506  2CF7               	goto	l1251
  3489  0507                     u1020:
  3490  0507                     l1257:
  3491  0507  35F3               	lslf	___aodiv@quotient,f
  3492  0508  0DF4               	rlf	___aodiv@quotient+1,f
  3493  0509  0DF5               	rlf	___aodiv@quotient+2,f
  3494  050A  0DF6               	rlf	___aodiv@quotient+3,f
  3495  050B  0DF7               	rlf	___aodiv@quotient+4,f
  3496  050C  0DF8               	rlf	___aodiv@quotient+5,f
  3497  050D  0DF9               	rlf	___aodiv@quotient+6,f
  3498  050E  0DFA               	rlf	___aodiv@quotient+7,f
  3499  050F                     l1259:
  3500  050F  0827               	movf	___aodiv@divisor+7,w
  3501  0510  022F               	subwf	___aodiv@dividend+7,w
  3502  0511  1D03               	skipz
  3503  0512  2D2D               	goto	u1035
  3504  0513  0826               	movf	___aodiv@divisor+6,w
  3505  0514  022E               	subwf	___aodiv@dividend+6,w
  3506  0515  1D03               	skipz
  3507  0516  2D2D               	goto	u1035
  3508  0517  0825               	movf	___aodiv@divisor+5,w
  3509  0518  022D               	subwf	___aodiv@dividend+5,w
  3510  0519  1D03               	skipz
  3511  051A  2D2D               	goto	u1035
  3512  051B  0824               	movf	___aodiv@divisor+4,w
  3513  051C  022C               	subwf	___aodiv@dividend+4,w
  3514  051D  1D03               	skipz
  3515  051E  2D2D               	goto	u1035
  3516  051F  0823               	movf	___aodiv@divisor+3,w
  3517  0520  022B               	subwf	___aodiv@dividend+3,w
  3518  0521  1D03               	skipz
  3519  0522  2D2D               	goto	u1035
  3520  0523  0822               	movf	___aodiv@divisor+2,w
  3521  0524  022A               	subwf	___aodiv@dividend+2,w
  3522  0525  1D03               	skipz
  3523  0526  2D2D               	goto	u1035
  3524  0527  0821               	movf	___aodiv@divisor+1,w
  3525  0528  0229               	subwf	___aodiv@dividend+1,w
  3526  0529  1D03               	skipz
  3527  052A  2D2D               	goto	u1035
  3528  052B  0820               	movf	___aodiv@divisor,w
  3529  052C  0228               	subwf	___aodiv@dividend,w
  3530  052D                     u1035:
  3531  052D  1C03               	skipc
  3532  052E  2D30               	goto	u1031
  3533  052F  2D31               	goto	u1030
  3534  0530                     u1031:
  3535  0530  2D42               	goto	l1265
  3536  0531                     u1030:
  3537  0531                     l1261:
  3538  0531  0820               	movf	___aodiv@divisor,w
  3539  0532  02A8               	subwf	___aodiv@dividend,f
  3540  0533  0821               	movf	___aodiv@divisor+1,w
  3541  0534  3BA9               	subwfb	___aodiv@dividend+1,f
  3542  0535  0822               	movf	___aodiv@divisor+2,w
  3543  0536  3BAA               	subwfb	___aodiv@dividend+2,f
  3544  0537  0823               	movf	___aodiv@divisor+3,w
  3545  0538  3BAB               	subwfb	___aodiv@dividend+3,f
  3546  0539  0824               	movf	___aodiv@divisor+4,w
  3547  053A  3BAC               	subwfb	___aodiv@dividend+4,f
  3548  053B  0825               	movf	___aodiv@divisor+5,w
  3549  053C  3BAD               	subwfb	___aodiv@dividend+5,f
  3550  053D  0826               	movf	___aodiv@divisor+6,w
  3551  053E  3BAE               	subwfb	___aodiv@dividend+6,f
  3552  053F  0827               	movf	___aodiv@divisor+7,w
  3553  0540  3BAF               	subwfb	___aodiv@dividend+7,f
  3554  0541                     l1263:
  3555  0541  1473               	bsf	___aodiv@quotient,0
  3556  0542                     l1265:
  3557  0542  36A7               	lsrf	___aodiv@divisor+7,f
  3558  0543  0CA6               	rrf	___aodiv@divisor+6,f
  3559  0544  0CA5               	rrf	___aodiv@divisor+5,f
  3560  0545  0CA4               	rrf	___aodiv@divisor+4,f
  3561  0546  0CA3               	rrf	___aodiv@divisor+3,f
  3562  0547  0CA2               	rrf	___aodiv@divisor+2,f
  3563  0548  0CA1               	rrf	___aodiv@divisor+1,f
  3564  0549  0CA0               	rrf	___aodiv@divisor,f
  3565  054A  3001               	movlw	1
  3566  054B  02F1               	subwf	___aodiv@counter,f
  3567  054C  1D03               	btfss	3,2
  3568  054D  2D4F               	goto	u1041
  3569  054E  2D50               	goto	u1040
  3570  054F                     u1041:
  3571  054F  2D07               	goto	l1257
  3572  0550                     u1040:
  3573  0550                     l1267:
  3574  0550  0872               	movf	___aodiv@sign,w
  3575  0551  1903               	btfsc	3,2
  3576  0552  2D54               	goto	u1051
  3577  0553  2D55               	goto	u1050
  3578  0554                     u1051:
  3579  0554  2D73               	goto	l248
  3580  0555                     u1050:
  3581  0555                     l1269:
  3582  0555  09F3               	comf	___aodiv@quotient,f
  3583  0556  09F4               	comf	___aodiv@quotient+1,f
  3584  0557  09F5               	comf	___aodiv@quotient+2,f
  3585  0558  09F6               	comf	___aodiv@quotient+3,f
  3586  0559  09F7               	comf	___aodiv@quotient+4,f
  3587  055A  09F8               	comf	___aodiv@quotient+5,f
  3588  055B  09F9               	comf	___aodiv@quotient+6,f
  3589  055C  09FA               	comf	___aodiv@quotient+7,f
  3590  055D  0AF3               	incf	___aodiv@quotient,f
  3591  055E  1D03               	skipz
  3592  055F  2D73               	goto	u106lld
  3593  0560  0AF4               	incf	___aodiv@quotient+1,f
  3594  0561  1D03               	skipz
  3595  0562  2D73               	goto	u106lld
  3596  0563  0AF5               	incf	___aodiv@quotient+2,f
  3597  0564  1D03               	skipz
  3598  0565  2D73               	goto	u106lld
  3599  0566  0AF6               	incf	___aodiv@quotient+3,f
  3600  0567  1D03               	skipz
  3601  0568  2D73               	goto	u106lld
  3602  0569  0AF7               	incf	___aodiv@quotient+4,f
  3603  056A  1D03               	skipz
  3604  056B  2D73               	goto	u106lld
  3605  056C  0AF8               	incf	___aodiv@quotient+5,f
  3606  056D  1D03               	skipz
  3607  056E  2D73               	goto	u106lld
  3608  056F  0AF9               	incf	___aodiv@quotient+6,f
  3609  0570  1D03               	skipz
  3610  0571  2D73               	goto	u106lld
  3611  0572  0AFA               	incf	___aodiv@quotient+7,f
  3612  0573                     u106lld:
  3613  0573                     l248:
  3614  0573  0873               	movf	___aodiv@quotient,w
  3615  0574  0020               	movlb	0	; select bank0
  3616  0575  00A0               	movwf	?___aodiv
  3617  0576  0874               	movf	___aodiv@quotient+1,w
  3618  0577  00A1               	movwf	?___aodiv+1
  3619  0578  0875               	movf	___aodiv@quotient+2,w
  3620  0579  00A2               	movwf	?___aodiv+2
  3621  057A  0876               	movf	___aodiv@quotient+3,w
  3622  057B  00A3               	movwf	?___aodiv+3
  3623  057C  0877               	movf	___aodiv@quotient+4,w
  3624  057D  00A4               	movwf	?___aodiv+4
  3625  057E  0878               	movf	___aodiv@quotient+5,w
  3626  057F  00A5               	movwf	?___aodiv+5
  3627  0580  0879               	movf	___aodiv@quotient+6,w
  3628  0581  00A6               	movwf	?___aodiv+6
  3629  0582  087A               	movf	___aodiv@quotient+7,w
  3630  0583  00A7               	movwf	?___aodiv+7
  3631  0584                     l249:
  3632  0584  0008               	return
  3633  0585                     __end_of___aodiv:
  3634                           
  3635                           	psect	text13
  3636  01B9                     __ptext13:	
  3637 ;; *************** function ___awmod *****************
  3638 ;; Defined at:
  3639 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  divisor         2    0[COMMON] int 
  3642 ;;  dividend        2    2[COMMON] int 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  sign            1    6[COMMON] unsigned char 
  3645 ;;  counter         1    5[COMMON] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  2    0[COMMON] int 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3655 ;;      Params:         4       0       0       0       0       0       0       0
  3656 ;;      Locals:         2       0       0       0       0       0       0       0
  3657 ;;      Temps:          1       0       0       0       0       0       0       0
  3658 ;;      Totals:         7       0       0       0       0       0       0       0
  3659 ;;Total ram usage:        7 bytes
  3660 ;; Hardware stack levels used: 1
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668  01B9                     ___awmod:	
  3669                           ;psect for function ___awmod
  3670                           
  3671  01B9                     l1585:	
  3672                           ;incstack = 0
  3673                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3674                           
  3675  01B9  01F6               	clrf	___awmod@sign
  3676  01BA                     l1587:
  3677  01BA  1FF3               	btfss	___awmod@dividend+1,7
  3678  01BB  29BD               	goto	u1671
  3679  01BC  29BE               	goto	u1670
  3680  01BD                     u1671:
  3681  01BD  29C5               	goto	l1593
  3682  01BE                     u1670:
  3683  01BE                     l1589:
  3684  01BE  09F2               	comf	___awmod@dividend,f
  3685  01BF  09F3               	comf	___awmod@dividend+1,f
  3686  01C0  0AF2               	incf	___awmod@dividend,f
  3687  01C1  1903               	skipnz
  3688  01C2  0AF3               	incf	___awmod@dividend+1,f
  3689  01C3                     l1591:
  3690  01C3  01F6               	clrf	___awmod@sign
  3691  01C4  0AF6               	incf	___awmod@sign,f
  3692  01C5                     l1593:
  3693  01C5  1FF1               	btfss	___awmod@divisor+1,7
  3694  01C6  29C8               	goto	u1681
  3695  01C7  29C9               	goto	u1680
  3696  01C8                     u1681:
  3697  01C8  29CE               	goto	l1597
  3698  01C9                     u1680:
  3699  01C9                     l1595:
  3700  01C9  09F0               	comf	___awmod@divisor,f
  3701  01CA  09F1               	comf	___awmod@divisor+1,f
  3702  01CB  0AF0               	incf	___awmod@divisor,f
  3703  01CC  1903               	skipnz
  3704  01CD  0AF1               	incf	___awmod@divisor+1,f
  3705  01CE                     l1597:
  3706  01CE  0870               	movf	___awmod@divisor,w
  3707  01CF  0471               	iorwf	___awmod@divisor+1,w
  3708  01D0  1903               	btfsc	3,2
  3709  01D1  29D3               	goto	u1691
  3710  01D2  29D4               	goto	u1690
  3711  01D3                     u1691:
  3712  01D3  29FD               	goto	l1615
  3713  01D4                     u1690:
  3714  01D4                     l1599:
  3715  01D4  01F5               	clrf	___awmod@counter
  3716  01D5  0AF5               	incf	___awmod@counter,f
  3717  01D6  29E0               	goto	l1605
  3718  01D7                     l1601:
  3719  01D7  3001               	movlw	1
  3720  01D8                     u1705:
  3721  01D8  35F0               	lslf	___awmod@divisor,f
  3722  01D9  0DF1               	rlf	___awmod@divisor+1,f
  3723  01DA  0B89               	decfsz	9,f
  3724  01DB  29D8               	goto	u1705
  3725  01DC                     l1603:
  3726  01DC  3001               	movlw	1
  3727  01DD  00F4               	movwf	??___awmod
  3728  01DE  0874               	movf	??___awmod,w
  3729  01DF  07F5               	addwf	___awmod@counter,f
  3730  01E0                     l1605:
  3731  01E0  1FF1               	btfss	___awmod@divisor+1,7
  3732  01E1  29E3               	goto	u1711
  3733  01E2  29E4               	goto	u1710
  3734  01E3                     u1711:
  3735  01E3  29D7               	goto	l1601
  3736  01E4                     u1710:
  3737  01E4                     l1607:
  3738  01E4  0871               	movf	___awmod@divisor+1,w
  3739  01E5  0273               	subwf	___awmod@dividend+1,w
  3740  01E6  1D03               	skipz
  3741  01E7  29EA               	goto	u1725
  3742  01E8  0870               	movf	___awmod@divisor,w
  3743  01E9  0272               	subwf	___awmod@dividend,w
  3744  01EA                     u1725:
  3745  01EA  1C03               	skipc
  3746  01EB  29ED               	goto	u1721
  3747  01EC  29EE               	goto	u1720
  3748  01ED                     u1721:
  3749  01ED  29F2               	goto	l1611
  3750  01EE                     u1720:
  3751  01EE                     l1609:
  3752  01EE  0870               	movf	___awmod@divisor,w
  3753  01EF  02F2               	subwf	___awmod@dividend,f
  3754  01F0  0871               	movf	___awmod@divisor+1,w
  3755  01F1  3BF3               	subwfb	___awmod@dividend+1,f
  3756  01F2                     l1611:
  3757  01F2  3001               	movlw	1
  3758  01F3                     u1735:
  3759  01F3  36F1               	lsrf	___awmod@divisor+1,f
  3760  01F4  0CF0               	rrf	___awmod@divisor,f
  3761  01F5  0B89               	decfsz	9,f
  3762  01F6  29F3               	goto	u1735
  3763  01F7                     l1613:
  3764  01F7  3001               	movlw	1
  3765  01F8  02F5               	subwf	___awmod@counter,f
  3766  01F9  1D03               	btfss	3,2
  3767  01FA  29FC               	goto	u1741
  3768  01FB  29FD               	goto	u1740
  3769  01FC                     u1741:
  3770  01FC  29E4               	goto	l1607
  3771  01FD                     u1740:
  3772  01FD                     l1615:
  3773  01FD  0876               	movf	___awmod@sign,w
  3774  01FE  1903               	btfsc	3,2
  3775  01FF  2A01               	goto	u1751
  3776  0200  2A02               	goto	u1750
  3777  0201                     u1751:
  3778  0201  2A07               	goto	l1619
  3779  0202                     u1750:
  3780  0202                     l1617:
  3781  0202  09F2               	comf	___awmod@dividend,f
  3782  0203  09F3               	comf	___awmod@dividend+1,f
  3783  0204  0AF2               	incf	___awmod@dividend,f
  3784  0205  1903               	skipnz
  3785  0206  0AF3               	incf	___awmod@dividend+1,f
  3786  0207                     l1619:
  3787  0207  0873               	movf	___awmod@dividend+1,w
  3788  0208  00F1               	movwf	?___awmod+1
  3789  0209  0872               	movf	___awmod@dividend,w
  3790  020A  00F0               	movwf	?___awmod
  3791  020B                     l314:
  3792  020B  0008               	return
  3793  020C                     __end_of___awmod:
  3794                           
  3795                           	psect	text14
  3796  0262                     __ptext14:	
  3797 ;; *************** function ___awdiv *****************
  3798 ;; Defined at:
  3799 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  divisor         2    0[COMMON] int 
  3802 ;;  dividend        2    2[COMMON] int 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  quotient        2    7[COMMON] int 
  3805 ;;  sign            1    6[COMMON] unsigned char 
  3806 ;;  counter         1    5[COMMON] unsigned char 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  2    0[COMMON] int 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3816 ;;      Params:         4       0       0       0       0       0       0       0
  3817 ;;      Locals:         4       0       0       0       0       0       0       0
  3818 ;;      Temps:          1       0       0       0       0       0       0       0
  3819 ;;      Totals:         9       0       0       0       0       0       0       0
  3820 ;;Total ram usage:        9 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_main
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829  0262                     ___awdiv:	
  3830                           ;psect for function ___awdiv
  3831                           
  3832  0262                     l1541:	
  3833                           ;incstack = 0
  3834                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3835                           
  3836  0262  01F6               	clrf	___awdiv@sign
  3837  0263                     l1543:
  3838  0263  1FF1               	btfss	___awdiv@divisor+1,7
  3839  0264  2A66               	goto	u1571
  3840  0265  2A67               	goto	u1570
  3841  0266                     u1571:
  3842  0266  2A6E               	goto	l1549
  3843  0267                     u1570:
  3844  0267                     l1545:
  3845  0267  09F0               	comf	___awdiv@divisor,f
  3846  0268  09F1               	comf	___awdiv@divisor+1,f
  3847  0269  0AF0               	incf	___awdiv@divisor,f
  3848  026A  1903               	skipnz
  3849  026B  0AF1               	incf	___awdiv@divisor+1,f
  3850  026C                     l1547:
  3851  026C  01F6               	clrf	___awdiv@sign
  3852  026D  0AF6               	incf	___awdiv@sign,f
  3853  026E                     l1549:
  3854  026E  1FF3               	btfss	___awdiv@dividend+1,7
  3855  026F  2A71               	goto	u1581
  3856  0270  2A72               	goto	u1580
  3857  0271                     u1581:
  3858  0271  2A7B               	goto	l1555
  3859  0272                     u1580:
  3860  0272                     l1551:
  3861  0272  09F2               	comf	___awdiv@dividend,f
  3862  0273  09F3               	comf	___awdiv@dividend+1,f
  3863  0274  0AF2               	incf	___awdiv@dividend,f
  3864  0275  1903               	skipnz
  3865  0276  0AF3               	incf	___awdiv@dividend+1,f
  3866  0277                     l1553:
  3867  0277  3001               	movlw	1
  3868  0278  00F4               	movwf	??___awdiv
  3869  0279  0874               	movf	??___awdiv,w
  3870  027A  06F6               	xorwf	___awdiv@sign,f
  3871  027B                     l1555:
  3872  027B  01F7               	clrf	___awdiv@quotient
  3873  027C  01F8               	clrf	___awdiv@quotient+1
  3874  027D                     l1557:
  3875  027D  0870               	movf	___awdiv@divisor,w
  3876  027E  0471               	iorwf	___awdiv@divisor+1,w
  3877  027F  1903               	btfsc	3,2
  3878  0280  2A82               	goto	u1591
  3879  0281  2A83               	goto	u1590
  3880  0282                     u1591:
  3881  0282  2AB2               	goto	l1577
  3882  0283                     u1590:
  3883  0283                     l1559:
  3884  0283  01F5               	clrf	___awdiv@counter
  3885  0284  0AF5               	incf	___awdiv@counter,f
  3886  0285  2A8F               	goto	l1565
  3887  0286                     l1561:
  3888  0286  3001               	movlw	1
  3889  0287                     u1605:
  3890  0287  35F0               	lslf	___awdiv@divisor,f
  3891  0288  0DF1               	rlf	___awdiv@divisor+1,f
  3892  0289  0B89               	decfsz	9,f
  3893  028A  2A87               	goto	u1605
  3894  028B                     l1563:
  3895  028B  3001               	movlw	1
  3896  028C  00F4               	movwf	??___awdiv
  3897  028D  0874               	movf	??___awdiv,w
  3898  028E  07F5               	addwf	___awdiv@counter,f
  3899  028F                     l1565:
  3900  028F  1FF1               	btfss	___awdiv@divisor+1,7
  3901  0290  2A92               	goto	u1611
  3902  0291  2A93               	goto	u1610
  3903  0292                     u1611:
  3904  0292  2A86               	goto	l1561
  3905  0293                     u1610:
  3906  0293                     l1567:
  3907  0293  3001               	movlw	1
  3908  0294                     u1625:
  3909  0294  35F7               	lslf	___awdiv@quotient,f
  3910  0295  0DF8               	rlf	___awdiv@quotient+1,f
  3911  0296  0B89               	decfsz	9,f
  3912  0297  2A94               	goto	u1625
  3913  0298  0871               	movf	___awdiv@divisor+1,w
  3914  0299  0273               	subwf	___awdiv@dividend+1,w
  3915  029A  1D03               	skipz
  3916  029B  2A9E               	goto	u1635
  3917  029C  0870               	movf	___awdiv@divisor,w
  3918  029D  0272               	subwf	___awdiv@dividend,w
  3919  029E                     u1635:
  3920  029E  1C03               	skipc
  3921  029F  2AA1               	goto	u1631
  3922  02A0  2AA2               	goto	u1630
  3923  02A1                     u1631:
  3924  02A1  2AA7               	goto	l1573
  3925  02A2                     u1630:
  3926  02A2                     l1569:
  3927  02A2  0870               	movf	___awdiv@divisor,w
  3928  02A3  02F2               	subwf	___awdiv@dividend,f
  3929  02A4  0871               	movf	___awdiv@divisor+1,w
  3930  02A5  3BF3               	subwfb	___awdiv@dividend+1,f
  3931  02A6                     l1571:
  3932  02A6  1477               	bsf	___awdiv@quotient,0
  3933  02A7                     l1573:
  3934  02A7  3001               	movlw	1
  3935  02A8                     u1645:
  3936  02A8  36F1               	lsrf	___awdiv@divisor+1,f
  3937  02A9  0CF0               	rrf	___awdiv@divisor,f
  3938  02AA  0B89               	decfsz	9,f
  3939  02AB  2AA8               	goto	u1645
  3940  02AC                     l1575:
  3941  02AC  3001               	movlw	1
  3942  02AD  02F5               	subwf	___awdiv@counter,f
  3943  02AE  1D03               	btfss	3,2
  3944  02AF  2AB1               	goto	u1651
  3945  02B0  2AB2               	goto	u1650
  3946  02B1                     u1651:
  3947  02B1  2A93               	goto	l1567
  3948  02B2                     u1650:
  3949  02B2                     l1577:
  3950  02B2  0876               	movf	___awdiv@sign,w
  3951  02B3  1903               	btfsc	3,2
  3952  02B4  2AB6               	goto	u1661
  3953  02B5  2AB7               	goto	u1660
  3954  02B6                     u1661:
  3955  02B6  2ABC               	goto	l1581
  3956  02B7                     u1660:
  3957  02B7                     l1579:
  3958  02B7  09F7               	comf	___awdiv@quotient,f
  3959  02B8  09F8               	comf	___awdiv@quotient+1,f
  3960  02B9  0AF7               	incf	___awdiv@quotient,f
  3961  02BA  1903               	skipnz
  3962  02BB  0AF8               	incf	___awdiv@quotient+1,f
  3963  02BC                     l1581:
  3964  02BC  0878               	movf	___awdiv@quotient+1,w
  3965  02BD  00F1               	movwf	?___awdiv+1
  3966  02BE  0877               	movf	___awdiv@quotient,w
  3967  02BF  00F0               	movwf	?___awdiv
  3968  02C0                     l301:
  3969  02C0  0008               	return
  3970  02C1                     __end_of___awdiv:
  3971                           
  3972                           	psect	text15
  3973  0032                     __ptext15:	
  3974 ;; *************** function _LCD_Initialize *****************
  3975 ;; Defined at:
  3976 ;;		line 46 in file "lcd.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0, pclath, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3990 ;;      Params:         0       0       0       0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0
  3992 ;;      Temps:          1       0       0       0       0       0       0       0
  3993 ;;      Totals:         1       0       0       0       0       0       0       0
  3994 ;;Total ram usage:        1 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; Hardware stack levels required when called: 2
  3997 ;; This function calls:
  3998 ;;		_LCDPutCmd
  3999 ;; This function is called by:
  4000 ;;		_main
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004  0032                     _LCD_Initialize:	
  4005                           ;psect for function _LCD_Initialize
  4006                           
  4007  0032                     l1493:	
  4008                           ;incstack = 0
  4009                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4010                           
  4011                           
  4012                           ;lcd.c: 49:     LATC = 0x00;
  4013  0032  0022               	movlb	2	; select bank2
  4014  0033  018E               	clrf	14	;volatile
  4015                           
  4016                           ;lcd.c: 50:     LATB = 0x00;
  4017  0034  018D               	clrf	13	;volatile
  4018                           
  4019                           ;lcd.c: 52:     TRISB = 0x00;
  4020  0035  0021               	movlb	1	; select bank1
  4021  0036  018D               	clrf	13	;volatile
  4022                           
  4023                           ;lcd.c: 53:     TRISC = 0x00;
  4024  0037  018E               	clrf	14	;volatile
  4025                           
  4026                           ;lcd.c: 54:     ANSELC = 0x00;
  4027  0038  0023               	movlb	3	; select bank3
  4028  0039  018E               	clrf	14	;volatile
  4029                           
  4030                           ;lcd.c: 55:     ANSELB = 0x00;
  4031  003A  018D               	clrf	13	;volatile
  4032  003B                     l1495:
  4033                           
  4034                           ;lcd.c: 61:     _delay((unsigned long)((15)*(1000000/4000.0)));
  4035  003B  3005               	movlw	5
  4036  003C  00F6               	movwf	??_LCD_Initialize
  4037  003D  30DE               	movlw	222
  4038  003E                     u1807:
  4039  003E  0B89               	decfsz	9,f
  4040  003F  283E               	goto	u1807
  4041  0040  0BF6               	decfsz	??_LCD_Initialize,f
  4042  0041  283E               	goto	u1807
  4043  0042                     l1497:
  4044                           
  4045                           ;lcd.c: 64:     LCDPutCmd(0x32);
  4046  0042  3032               	movlw	50
  4047  0043  3180  2013  3180   	fcall	_LCDPutCmd
  4048  0046                     l1499:
  4049                           
  4050                           ;lcd.c: 67:     LCDPutCmd(0x28);
  4051  0046  3028               	movlw	40
  4052  0047  3180  2013  3180   	fcall	_LCDPutCmd
  4053  004A                     l1501:
  4054                           
  4055                           ;lcd.c: 70:     LCDPutCmd(0x0C);
  4056  004A  300C               	movlw	12
  4057  004B  3180  2013  3180   	fcall	_LCDPutCmd
  4058  004E                     l1503:
  4059                           
  4060                           ;lcd.c: 72:     LCDPutCmd(0x01);
  4061  004E  3001               	movlw	1
  4062  004F  3180  2013  3180   	fcall	_LCDPutCmd
  4063  0052                     l1505:
  4064                           
  4065                           ;lcd.c: 75:     LCDPutCmd(0x06);
  4066  0052  3006               	movlw	6
  4067  0053  3180  2013  3180   	fcall	_LCDPutCmd
  4068  0056                     l23:
  4069  0056  0008               	return
  4070  0057                     __end_of_LCD_Initialize:
  4071                           
  4072                           	psect	text16
  4073  0057                     __ptext16:	
  4074 ;; *************** function _LCDPutStr *****************
  4075 ;; Defined at:
  4076 ;;		line 165 in file "lcd.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  str             2    6[COMMON] PTR const unsigned char 
  4079 ;;		 -> main@time_string(9), STR_2(9), STR_1(16), 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  i               1   11[COMMON] unsigned char 
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4091 ;;      Params:         2       0       0       0       0       0       0       0
  4092 ;;      Locals:         1       0       0       0       0       0       0       0
  4093 ;;      Temps:          3       0       0       0       0       0       0       0
  4094 ;;      Totals:         6       0       0       0       0       0       0       0
  4095 ;;Total ram usage:        6 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; Hardware stack levels required when called: 2
  4098 ;; This function calls:
  4099 ;;		_LCDPutChar
  4100 ;; This function is called by:
  4101 ;;		_main
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105  0057                     _LCDPutStr:	
  4106                           ;psect for function _LCDPutStr
  4107                           
  4108  0057                     l1507:	
  4109                           ;incstack = 0
  4110                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4111                           
  4112                           
  4113                           ;lcd.c: 165: void LCDPutStr(const char *str);lcd.c: 166: {;lcd.c: 167:     uint8_t i=0;
  4114  0057  01FB               	clrf	LCDPutStr@i
  4115                           
  4116                           ;lcd.c: 170:     while (str[i])
  4117  0058  286C               	goto	l1513
  4118  0059                     l1509:
  4119                           
  4120                           ;lcd.c: 171:     {;lcd.c: 173:         LCDPutChar(str[i++]);
  4121  0059  0877               	movf	LCDPutStr@str+1,w
  4122  005A  00F9               	movwf	??_LCDPutStr+1
  4123  005B  0876               	movf	LCDPutStr@str,w
  4124  005C  00F8               	movwf	??_LCDPutStr
  4125  005D  087B               	movf	LCDPutStr@i,w
  4126  005E  0778               	addwf	??_LCDPutStr,w
  4127  005F  0084               	movwf	4
  4128  0060  0879               	movf	??_LCDPutStr+1,w
  4129  0061  1803               	skipnc
  4130  0062  0A79               	incf	??_LCDPutStr+1,w
  4131  0063  0085               	movwf	5
  4132  0064  0800               	movf	0,w	;code access
  4133  0065  318F  27E3  3180   	fcall	_LCDPutChar
  4134  0068                     l1511:
  4135  0068  3001               	movlw	1
  4136  0069  00F8               	movwf	??_LCDPutStr
  4137  006A  0878               	movf	??_LCDPutStr,w
  4138  006B  07FB               	addwf	LCDPutStr@i,f
  4139  006C                     l1513:
  4140                           
  4141                           ;lcd.c: 170:     while (str[i])
  4142  006C  0877               	movf	LCDPutStr@str+1,w
  4143  006D  00F9               	movwf	??_LCDPutStr+1
  4144  006E  0876               	movf	LCDPutStr@str,w
  4145  006F  00F8               	movwf	??_LCDPutStr
  4146  0070  087B               	movf	LCDPutStr@i,w
  4147  0071  0778               	addwf	??_LCDPutStr,w
  4148  0072  0084               	movwf	4
  4149  0073  0879               	movf	??_LCDPutStr+1,w
  4150  0074  1803               	skipnc
  4151  0075  0A79               	incf	??_LCDPutStr+1,w
  4152  0076  0085               	movwf	5
  4153  0077  0012               	moviw fsr0++
  4154  0078  1D03               	btfss	3,2
  4155  0079  287B               	goto	u1531
  4156  007A  287C               	goto	u1530
  4157  007B                     u1531:
  4158  007B  2859               	goto	l1509
  4159  007C                     u1530:
  4160  007C                     l46:
  4161  007C  0008               	return
  4162  007D                     __end_of_LCDPutStr:
  4163                           
  4164                           	psect	text17
  4165  0FE3                     __ptext17:	
  4166 ;; *************** function _LCDPutChar *****************
  4167 ;; Defined at:
  4168 ;;		line 133 in file "lcd.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  ch              1    wreg     unsigned char 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  ch              1    5[COMMON] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4182 ;;      Params:         0       0       0       0       0       0       0       0
  4183 ;;      Locals:         1       0       0       0       0       0       0       0
  4184 ;;      Temps:          2       0       0       0       0       0       0       0
  4185 ;;      Totals:         3       0       0       0       0       0       0       0
  4186 ;;Total ram usage:        3 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 1
  4189 ;; This function calls:
  4190 ;;		_LCDWriteNibble
  4191 ;; This function is called by:
  4192 ;;		_LCDPutStr
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196  0FE3                     _LCDPutChar:	
  4197                           ;psect for function _LCDPutChar
  4198                           
  4199                           
  4200                           ;incstack = 0
  4201                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  4202                           ;LCDPutChar@ch stored from wreg
  4203  0FE3  00F5               	movwf	LCDPutChar@ch
  4204  0FE4                     l1473:
  4205                           
  4206                           ;lcd.c: 133: void LCDPutChar(uint8_t ch);lcd.c: 134: {;lcd.c: 135:     _delay((unsigned 
      +                          long)((5)*(1000000/4000.0)));
  4207  0FE4  30FA               	movlw	250
  4208  0FE5                     u1817:
  4209  0FE5  3200               	nop2
  4210  0FE6  0B89               	decfsz	9,f
  4211  0FE7  2FE5               	goto	u1817
  4212  0FE8                     l1475:
  4213                           
  4214                           ;lcd.c: 138:     LCDWriteNibble(ch,1);
  4215  0FE8  01F0               	clrf	LCDWriteNibble@rs
  4216  0FE9  0AF0               	incf	LCDWriteNibble@rs,f
  4217  0FEA  0875               	movf	LCDPutChar@ch,w
  4218  0FEB  3181  211B  318F   	fcall	_LCDWriteNibble
  4219  0FEE                     l1477:
  4220                           
  4221                           ;lcd.c: 141:     ch = (ch << 4);
  4222  0FEE  0875               	movf	LCDPutChar@ch,w
  4223  0FEF  00F3               	movwf	??_LCDPutChar
  4224  0FF0  3003               	movlw	3
  4225  0FF1                     u1515:
  4226  0FF1  35F3               	lslf	??_LCDPutChar,f
  4227  0FF2  3EFF               	addlw	-1
  4228  0FF3  1D03               	skipz
  4229  0FF4  2FF1               	goto	u1515
  4230  0FF5  3573               	lslf	??_LCDPutChar,w
  4231  0FF6  00F4               	movwf	??_LCDPutChar+1
  4232  0FF7  0874               	movf	??_LCDPutChar+1,w
  4233  0FF8  00F5               	movwf	LCDPutChar@ch
  4234  0FF9                     l1479:
  4235                           
  4236                           ;lcd.c: 144:     LCDWriteNibble(ch,1);
  4237  0FF9  01F0               	clrf	LCDWriteNibble@rs
  4238  0FFA  0AF0               	incf	LCDWriteNibble@rs,f
  4239  0FFB  0875               	movf	LCDPutChar@ch,w
  4240  0FFC  3181  211B  318F   	fcall	_LCDWriteNibble
  4241  0FFF                     l37:
  4242  0FFF  0008               	return
  4243  1000                     __end_of_LCDPutChar:
  4244                           
  4245                           	psect	text18
  4246  00A3                     __ptext18:	
  4247 ;; *************** function _LCDGoto *****************
  4248 ;; Defined at:
  4249 ;;		line 178 in file "lcd.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  pos             1    wreg     unsigned char 
  4252 ;;  ln              1    6[COMMON] unsigned char 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  pos             1    9[COMMON] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4264 ;;      Params:         1       0       0       0       0       0       0       0
  4265 ;;      Locals:         3       0       0       0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0       0       0       0
  4267 ;;      Totals:         4       0       0       0       0       0       0       0
  4268 ;;Total ram usage:        4 bytes
  4269 ;; Hardware stack levels used: 1
  4270 ;; Hardware stack levels required when called: 2
  4271 ;; This function calls:
  4272 ;;		_LCDPutCmd
  4273 ;; This function is called by:
  4274 ;;		_main
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278  00A3                     _LCDGoto:	
  4279                           ;psect for function _LCDGoto
  4280                           
  4281                           
  4282                           ;incstack = 0
  4283                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  4284                           ;LCDGoto@pos stored from wreg
  4285  00A3  00F9               	movwf	LCDGoto@pos
  4286  00A4                     l1515:
  4287                           
  4288                           ;lcd.c: 178: void LCDGoto(uint8_t pos,uint8_t ln);lcd.c: 179: {;lcd.c: 181:     if ((ln 
      +                          > (2 -1)) || (pos > (16 -1)))
  4289  00A4  3002               	movlw	2
  4290  00A5  0276               	subwf	LCDGoto@ln,w
  4291  00A6  1803               	skipnc
  4292  00A7  28A9               	goto	u1541
  4293  00A8  28AA               	goto	u1540
  4294  00A9                     u1541:
  4295  00A9  28C9               	goto	l52
  4296  00AA                     u1540:
  4297  00AA                     l1517:
  4298  00AA  3010               	movlw	16
  4299  00AB  0279               	subwf	LCDGoto@pos,w
  4300  00AC  1C03               	skipc
  4301  00AD  28AF               	goto	u1551
  4302  00AE  28B0               	goto	u1550
  4303  00AF                     u1551:
  4304  00AF  28B1               	goto	l1519
  4305  00B0                     u1550:
  4306  00B0  28C9               	goto	l52
  4307  00B1                     l1519:
  4308                           
  4309                           ;lcd.c: 188:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  4310  00B1  0376               	decf	LCDGoto@ln,w
  4311  00B2  1903               	btfsc	3,2
  4312  00B3  28B5               	goto	u1561
  4313  00B4  28B6               	goto	u1560
  4314  00B5                     u1561:
  4315  00B5  28BC               	goto	l1523
  4316  00B6                     u1560:
  4317  00B6                     l1521:
  4318  00B6  3080               	movlw	128
  4319  00B7  0479               	iorwf	LCDGoto@pos,w
  4320  00B8  00F7               	movwf	_LCDGoto$104
  4321  00B9  3000               	movlw	0
  4322  00BA  00F8               	movwf	_LCDGoto$104+1
  4323  00BB  28C1               	goto	l1525
  4324  00BC                     l1523:
  4325  00BC  30C0               	movlw	192
  4326  00BD  0479               	iorwf	LCDGoto@pos,w
  4327  00BE  00F7               	movwf	_LCDGoto$104
  4328  00BF  3000               	movlw	0
  4329  00C0  00F8               	movwf	_LCDGoto$104+1
  4330  00C1                     l1525:
  4331  00C1  0877               	movf	_LCDGoto$104,w
  4332  00C2  3180  2013  3180   	fcall	_LCDPutCmd
  4333  00C5                     l1527:
  4334                           
  4335                           ;lcd.c: 191:     _delay((unsigned long)((5)*(1000000/4000.0)));
  4336  00C5  30FA               	movlw	250
  4337  00C6                     u1827:
  4338  00C6  3200               	nop2
  4339  00C7  0B89               	decfsz	9,f
  4340  00C8  28C6               	goto	u1827
  4341  00C9                     l52:
  4342  00C9  0008               	return
  4343  00CA                     __end_of_LCDGoto:
  4344                           
  4345                           	psect	text19
  4346  0013                     __ptext19:	
  4347 ;; *************** function _LCDPutCmd *****************
  4348 ;; Defined at:
  4349 ;;		line 148 in file "lcd.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  ch              1    wreg     unsigned char 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  ch              1    5[COMMON] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0, pclath, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4363 ;;      Params:         0       0       0       0       0       0       0       0
  4364 ;;      Locals:         1       0       0       0       0       0       0       0
  4365 ;;      Temps:          2       0       0       0       0       0       0       0
  4366 ;;      Totals:         3       0       0       0       0       0       0       0
  4367 ;;Total ram usage:        3 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 1
  4370 ;; This function calls:
  4371 ;;		_LCDWriteNibble
  4372 ;; This function is called by:
  4373 ;;		_LCD_Initialize
  4374 ;;		_LCDGoto
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378  0013                     _LCDPutCmd:	
  4379                           ;psect for function _LCDPutCmd
  4380                           
  4381                           
  4382                           ;incstack = 0
  4383                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  4384                           ;LCDPutCmd@ch stored from wreg
  4385  0013  00F5               	movwf	LCDPutCmd@ch
  4386  0014                     l1463:
  4387                           
  4388                           ;lcd.c: 148: void LCDPutCmd(uint8_t ch);lcd.c: 149: {;lcd.c: 150:     _delay((unsigned l
      +                          ong)((5)*(1000000/4000.0)));
  4389  0014  30FA               	movlw	250
  4390  0015                     u1837:
  4391  0015  3200               	nop2
  4392  0016  0B89               	decfsz	9,f
  4393  0017  2815               	goto	u1837
  4394  0018                     l1465:
  4395                           
  4396                           ;lcd.c: 153:     LCDWriteNibble(ch,0);
  4397  0018  01F0               	clrf	LCDWriteNibble@rs
  4398  0019  0875               	movf	LCDPutCmd@ch,w
  4399  001A  3181  211B  3180   	fcall	_LCDWriteNibble
  4400  001D                     l1467:
  4401                           
  4402                           ;lcd.c: 156:     ch = (ch << 4);
  4403  001D  0875               	movf	LCDPutCmd@ch,w
  4404  001E  00F3               	movwf	??_LCDPutCmd
  4405  001F  3003               	movlw	3
  4406  0020                     u1505:
  4407  0020  35F3               	lslf	??_LCDPutCmd,f
  4408  0021  3EFF               	addlw	-1
  4409  0022  1D03               	skipz
  4410  0023  2820               	goto	u1505
  4411  0024  3573               	lslf	??_LCDPutCmd,w
  4412  0025  00F4               	movwf	??_LCDPutCmd+1
  4413  0026  0874               	movf	??_LCDPutCmd+1,w
  4414  0027  00F5               	movwf	LCDPutCmd@ch
  4415  0028                     l1469:
  4416                           
  4417                           ;lcd.c: 158:     _delay((unsigned long)((1)*(1000000/4000.0)));
  4418  0028  3053               	movlw	83
  4419  0029                     u1847:
  4420  0029  0B89               	decfsz	9,f
  4421  002A  2829               	goto	u1847
  4422  002B  0000               	nop
  4423  002C                     l1471:
  4424                           
  4425                           ;lcd.c: 161:     LCDWriteNibble(ch,0);
  4426  002C  01F0               	clrf	LCDWriteNibble@rs
  4427  002D  0875               	movf	LCDPutCmd@ch,w
  4428  002E  3181  211B  3180   	fcall	_LCDWriteNibble
  4429  0031                     l40:
  4430  0031  0008               	return
  4431  0032                     __end_of_LCDPutCmd:
  4432                           
  4433                           	psect	text20
  4434  011B                     __ptext20:	
  4435 ;; *************** function _LCDWriteNibble *****************
  4436 ;; Defined at:
  4437 ;;		line 80 in file "lcd.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  ch              1    wreg     unsigned char 
  4440 ;;  rs              1    0[COMMON] unsigned char 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  ch              1    2[COMMON] unsigned char 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4452 ;;      Params:         1       0       0       0       0       0       0       0
  4453 ;;      Locals:         1       0       0       0       0       0       0       0
  4454 ;;      Temps:          1       0       0       0       0       0       0       0
  4455 ;;      Totals:         3       0       0       0       0       0       0       0
  4456 ;;Total ram usage:        3 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_LCDPutChar
  4462 ;;		_LCDPutCmd
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466  011B                     _LCDWriteNibble:	
  4467                           ;psect for function _LCDWriteNibble
  4468                           
  4469                           
  4470                           ;incstack = 0
  4471                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  4472                           ;LCDWriteNibble@ch stored from wreg
  4473  011B  00F2               	movwf	LCDWriteNibble@ch
  4474  011C                     l1385:
  4475                           
  4476                           ;lcd.c: 80: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 81: {;lcd.c: 83:     ch = 
      +                          (ch & 0xF0);
  4477  011C  0872               	movf	LCDWriteNibble@ch,w
  4478  011D  39F0               	andlw	240
  4479  011E  00F1               	movwf	??_LCDWriteNibble
  4480  011F  0871               	movf	??_LCDWriteNibble,w
  4481  0120  00F2               	movwf	LCDWriteNibble@ch
  4482                           
  4483                           ;lcd.c: 86:     LATC = (LATC & 0x0F);
  4484  0121  0022               	movlb	2	; select bank2
  4485  0122  080E               	movf	14,w	;volatile
  4486  0123  390F               	andlw	15
  4487  0124  008E               	movwf	14	;volatile
  4488  0125                     l1387:
  4489                           
  4490                           ;lcd.c: 87:     LATBbits.LATB4 = 0;
  4491  0125  120D               	bcf	13,4	;volatile
  4492  0126                     l1389:
  4493                           
  4494                           ;lcd.c: 88:     LATBbits.LATB5 = 0;
  4495  0126  128D               	bcf	13,5	;volatile
  4496  0127                     l1391:
  4497                           
  4498                           ;lcd.c: 89:     LATBbits.LATB6 = 0;
  4499  0127  130D               	bcf	13,6	;volatile
  4500  0128                     l1393:
  4501                           
  4502                           ;lcd.c: 90:     LATBbits.LATB7 = 0;
  4503  0128  138D               	bcf	13,7	;volatile
  4504  0129                     l1395:
  4505                           
  4506                           ;lcd.c: 94:     if(((ch & 0x80)>>7)==1){
  4507  0129  0872               	movf	LCDWriteNibble@ch,w
  4508  012A  00F1               	movwf	??_LCDWriteNibble
  4509  012B  3007               	movlw	7
  4510  012C                     u1385:
  4511  012C  36F1               	lsrf	??_LCDWriteNibble,f
  4512  012D  0B89               	decfsz	9,f
  4513  012E  292C               	goto	u1385
  4514  012F  1C71               	btfss	??_LCDWriteNibble,0
  4515  0130  2932               	goto	u1391
  4516  0131  2933               	goto	u1390
  4517  0132                     u1391:
  4518  0132  2935               	goto	l26
  4519  0133                     u1390:
  4520  0133                     l1397:
  4521                           
  4522                           ;lcd.c: 95:         LATBbits.LATB7 = 1;
  4523  0133  178D               	bsf	13,7	;volatile
  4524                           
  4525                           ;lcd.c: 96:     } else{
  4526  0134  2936               	goto	l1399
  4527  0135                     l26:
  4528                           
  4529                           ;lcd.c: 97:         LATBbits.LATB7 = 0;
  4530  0135  138D               	bcf	13,7	;volatile
  4531  0136                     l1399:
  4532                           
  4533                           ;lcd.c: 100:     if(((ch & 0x40)>>6)==1){
  4534  0136  0872               	movf	LCDWriteNibble@ch,w
  4535  0137  00F1               	movwf	??_LCDWriteNibble
  4536  0138  3006               	movlw	6
  4537  0139                     u1405:
  4538  0139  36F1               	lsrf	??_LCDWriteNibble,f
  4539  013A  0B89               	decfsz	9,f
  4540  013B  2939               	goto	u1405
  4541  013C  1C71               	btfss	??_LCDWriteNibble,0
  4542  013D  293F               	goto	u1411
  4543  013E  2940               	goto	u1410
  4544  013F                     u1411:
  4545  013F  2942               	goto	l28
  4546  0140                     u1410:
  4547  0140                     l1401:
  4548                           
  4549                           ;lcd.c: 101:         LATBbits.LATB6 = 1;
  4550  0140  170D               	bsf	13,6	;volatile
  4551                           
  4552                           ;lcd.c: 102:     } else{
  4553  0141  2943               	goto	l1403
  4554  0142                     l28:
  4555                           
  4556                           ;lcd.c: 103:         LATBbits.LATB6 = 0;
  4557  0142  130D               	bcf	13,6	;volatile
  4558  0143                     l1403:
  4559                           
  4560                           ;lcd.c: 106:     if(((ch & 0x20)>>5)==1){
  4561  0143  0872               	movf	LCDWriteNibble@ch,w
  4562  0144  00F1               	movwf	??_LCDWriteNibble
  4563  0145  3005               	movlw	5
  4564  0146                     u1425:
  4565  0146  36F1               	lsrf	??_LCDWriteNibble,f
  4566  0147  0B89               	decfsz	9,f
  4567  0148  2946               	goto	u1425
  4568  0149  1C71               	btfss	??_LCDWriteNibble,0
  4569  014A  294C               	goto	u1431
  4570  014B  294D               	goto	u1430
  4571  014C                     u1431:
  4572  014C  294F               	goto	l30
  4573  014D                     u1430:
  4574  014D                     l1405:
  4575                           
  4576                           ;lcd.c: 107:         LATBbits.LATB5 = 1;
  4577  014D  168D               	bsf	13,5	;volatile
  4578                           
  4579                           ;lcd.c: 108:     } else{
  4580  014E  2950               	goto	l1407
  4581  014F                     l30:
  4582                           
  4583                           ;lcd.c: 109:         LATBbits.LATB5 = 0;
  4584  014F  128D               	bcf	13,5	;volatile
  4585  0150                     l1407:
  4586                           
  4587                           ;lcd.c: 112:     if(((ch & 0x10)>>4)==1){
  4588  0150  0872               	movf	LCDWriteNibble@ch,w
  4589  0151  00F1               	movwf	??_LCDWriteNibble
  4590  0152  3004               	movlw	4
  4591  0153                     u1445:
  4592  0153  36F1               	lsrf	??_LCDWriteNibble,f
  4593  0154  0B89               	decfsz	9,f
  4594  0155  2953               	goto	u1445
  4595  0156  1C71               	btfss	??_LCDWriteNibble,0
  4596  0157  2959               	goto	u1451
  4597  0158  295A               	goto	u1450
  4598  0159                     u1451:
  4599  0159  295C               	goto	l32
  4600  015A                     u1450:
  4601  015A                     l1409:
  4602                           
  4603                           ;lcd.c: 113:         LATBbits.LATB4 = 1;
  4604  015A  160D               	bsf	13,4	;volatile
  4605                           
  4606                           ;lcd.c: 114:     } else{
  4607  015B  295D               	goto	l1411
  4608  015C                     l32:
  4609                           
  4610                           ;lcd.c: 115:         LATBbits.LATB4 = 0;
  4611  015C  120D               	bcf	13,4	;volatile
  4612  015D                     l1411:
  4613                           
  4614                           ;lcd.c: 121:     PORTCbits.RC0 = rs;
  4615  015D  0C70               	rrf	LCDWriteNibble@rs,w
  4616  015E  0020               	movlb	0	; select bank0
  4617  015F  1C03               	skipc
  4618  0160  100E               	bcf	14,0	;volatile
  4619  0161  1803               	skipnc
  4620  0162  140E               	bsf	14,0	;volatile
  4621  0163                     l1413:
  4622                           
  4623                           ;lcd.c: 124:     PORTCbits.RC1 = 0;
  4624  0163  108E               	bcf	14,1	;volatile
  4625  0164                     l1415:
  4626                           
  4627                           ;lcd.c: 127:     PORTCbits.RC2 = 1;
  4628  0164  150E               	bsf	14,2	;volatile
  4629  0165                     l1417:
  4630                           
  4631                           ;lcd.c: 130:     PORTCbits.RC2 = 0;
  4632  0165  110E               	bcf	14,2	;volatile
  4633  0166                     l34:
  4634  0166  0008               	return
  4635  0167                     __end_of_LCDWriteNibble:
  4636  007E                     btemp	set	126	;btemp
  4637  007E                     wtemp0	set	126
  4638                           
  4639                           	psect	idloc
  4640                           
  4641                           ;Config register IDLOC0 @ 0x8000
  4642                           ;	unspecified, using default values
  4643  8000                     	org	32768
  4644  8000  3FFF               	dw	16383
  4645                           
  4646                           ;Config register IDLOC1 @ 0x8001
  4647                           ;	unspecified, using default values
  4648  8001                     	org	32769
  4649  8001  3FFF               	dw	16383
  4650                           
  4651                           ;Config register IDLOC2 @ 0x8002
  4652                           ;	unspecified, using default values
  4653  8002                     	org	32770
  4654  8002  3FFF               	dw	16383
  4655                           
  4656                           ;Config register IDLOC3 @ 0x8003
  4657                           ;	unspecified, using default values
  4658  8003                     	org	32771
  4659  8003  3FFF               	dw	16383
  4660                           
  4661                           	psect	config
  4662                           
  4663                           ;Config register CONFIG1 @ 0x8007
  4664                           ;	Oscillator Selection Bits
  4665                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4666                           ;	Watchdog Timer Enable
  4667                           ;	WDTE = OFF, WDT disabled
  4668                           ;	Power-up Timer Enable
  4669                           ;	PWRTE = OFF, PWRT disabled
  4670                           ;	MCLR Pin Function Select
  4671                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4672                           ;	Flash Program Memory Code Protection
  4673                           ;	CP = OFF, Program memory code protection is disabled
  4674                           ;	Brown-out Reset Enable
  4675                           ;	BOREN = OFF, Brown-out Reset disabled
  4676                           ;	Clock Out Enable
  4677                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4678                           ;	Internal/External Switchover Mode
  4679                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  4680                           ;	Fail-Safe Clock Monitor Enable
  4681                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4682  8007                     	org	32775
  4683  8007  09A4               	dw	2468
  4684                           
  4685                           ;Config register CONFIG2 @ 0x8008
  4686                           ;	Flash Memory Self-Write Protection
  4687                           ;	WRT = OFF, Write protection off
  4688                           ;	Stack Overflow/Underflow Reset Enable
  4689                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  4690                           ;	Brown-out Reset Voltage Selection
  4691                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4692                           ;	Low-Power Brown Out Reset
  4693                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4694                           ;	Low-Voltage Programming Enable
  4695                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4696  8008                     	org	32776
  4697  8008  1DFF               	dw	7679

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         40
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      78
    BANK1            80     56      56
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 9
		 -> main@time_string(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S449$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S449$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 16
		 -> main@time_string(BANK1[9]), STR_2(CODE[9]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   10282
                                             26 BANK1     30    30      0
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                            ___awdiv
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    6112
                                             13 COMMON     1     1      0
                                              0 BANK1     26    12     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     504
                                              6 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            6     4      2     822
                                              6 COMMON     6     4      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     504
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              4     3      1     866
                                              6 COMMON     4     3      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     504
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       3     2      1     437
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
   ___awdiv
   ___awmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B4       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     46      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     38      38       8       70.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      B4      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 05 23:04:18 2022

         _LCD_Initialize 0032                       l30 014F                       l23 0056  
                     l32 015C                       l40 0031                       l34 0166  
                     l26 0135              ?_LCDPutChar 0070                       l28 0142  
                     l52 00C9                       l37 0FFF                       l46 007C  
           ___awdiv@sign 0076                      l301 02C0                      l314 020B  
                    l261 0472                      l262 0483                      l248 0573  
                    l249 0584                      l611 00A2                      l702 01B8  
                    l710 011A                      l713 000C                      l641 0248  
                    l643 0261                      l651 06F6                      l652 0708  
                    l638 0226                      l646 06D5                      l719 0FE2  
                    l655 0778                      l647 06DE                      l690 0FC8  
                    l683 00F1                      l676 0399                      l669 07EC  
                    l687 0FC8                      u900 016C                      u901 016B  
                    u910 0171                      u911 0170                      u920 0180  
                    u921 017F                      u930 019E                      u931 019D  
                    u940 011A                      u941 0119                      u950 0FDC  
                    u935 019A                      u951 0FDB                      u960 048F  
                    u961 048E                      u980 04BA                      u981 04B9  
                    _abs 0FAF                      _pad 020C             ___awmod@sign 0076  
                    wreg 0009          __end_of_LCDGoto 00CA                     l1201 016C  
                   l1211 01AF                     l1203 0171                     ?_abs 0073  
                   l1205 0176                     l1221 010A                     l1301 020E  
                   l1207 0180                     l1215 00F4                     l1223 0FCA  
                   l1311 0229                     l1303 0212                     l1401 0140  
                   l1241 04BA                     l1233 0484                     l1209 019E  
                   l1217 00F7                     l1225 0FCF                     l1313 0235  
                   l1305 021A                     l1411 015D                     l1403 0143  
                   l1251 04F7                     l1243 04D9                     l1235 0485  
                   l1323 0FAF                     l1219 0105                     l1227 0FD3  
                   l1315 023A                     l1307 021F                     l1331 06B1  
                   l1413 0163                     l1405 014D                     l1501 004A  
                   l1261 0531                     l1253 04FF                     l1245 04DD  
                   l1237 048F                     l1325 0FBC                     l1229 0FDC  
                   l1317 024D                     l1309 0224                     l1341 06FA  
                   l1333 06B7                     l1421 02D4                     l1415 0164  
                   l1407 0150                     l1511 0068                     l1503 004E  
                   l1263 0541                     l1255 0503                     l1247 04E7  
                   l1239 04B0                     l1271 039A                     l1319 0255  
                   l1351 0714                     l1343 0700                     l1335 06DA  
                   l1327 068E                     l1431 0306                     l1423 02DC  
                   l1417 0165                     l1409 015A                     l1521 00B6  
                   l1513 006C                     l1505 0052                     l1601 01D7  
                   l1265 0542                     l1257 0507                     l1249 04F4  
                   l1281 03EF                     l1273 039B                     l1361 0793  
                   l1353 0743                     l1345 0704                     l1337 06EB  
                   l1329 069E                     l1441 0352                     l1433 030E  
                   l1425 02E0                     l1523 00BC                     l1515 00A4  
                   l1507 0057                     l1611 01F2                     l1603 01DC  
                   l1259 050F                     l1267 0550                     l1291 040F  
                   l1283 03FC                     l1275 03A5                     l1371 07BE  
                   l1363 07A0                     l1355 0747                     l1347 070C  
                   l1339 06F1                     l1451 0373                     l1443 035A  
                   l1435 0327                     l1427 02E4                     l1419 02C3  
                   l1531 0087                     l1525 00C1                     l1517 00AA  
                   l1509 0059                     l1541 0262                     l1613 01F7  
                   l1605 01E0                     l1269 0555                     l1293 0431  
                   l1285 03FF                     l1277 03C6                     l1373 07C2  
                   l1381 07DA                     l1365 07AE                     l1357 074B  
                   l1349 070F                     l1445 0365                     l1429 02F5  
                   l1533 0089                     l1391 0127                     l1471 002C  
                   l1463 0014                     l1527 00C5                     l1519 00B1  
                   l1551 0272                     l1543 0263                     l1607 01E4  
                   l1615 01FD                     l1295 0441                     l1287 0407  
                   l1279 03D0                     l1199 0167                     l1375 07C8  
                   l1359 0786                     l1367 07B3                     l1439 0341  
                   l1455 0376                     l1535 008B                     l1631 059D  
                   l1623 0585                     l1393 0128                     l1385 011C  
                   l1465 0018                     l1473 0FE4                     l1561 0286  
                   l1553 0277                     l1545 0267                     l1617 0202  
                   l1609 01EE                     l1289 040B                     l1297 044F  
                   l1377 07CD                     l1369 07BA                     l1457 038F  
                   l1449 036B                     l1481 00CC                     l1537 009A  
                   l1529 007F                     l1641 05AC                     l1633 05A3  
                   l1625 058E                     l1395 0129                     l1387 0125  
                   l1467 001D                     l1475 0FE8                     l1571 02A6  
                   l1563 028B                     l1555 027B                     l1547 026C  
                   l1619 0207                     l1299 0454                     l1379 07D1  
                   l1483 00D0                     l1635 05AA                     l1627 0591  
                   l1397 0133                     l1389 0126                     l1469 0028  
                   l1477 0FEE                     l1493 0032                     l1581 02BC  
                   l1573 02A7                     l1565 028F                     l1557 027D  
                   l1549 026E                     l1485 00D3                     l1661 065F  
                   l1653 05AE                     l1629 0596                     l1399 0136  
                   l1479 0FF9                     l1495 003B                     l1575 02AC  
                   l1567 0293                     l1559 0283                     l1591 01C3  
                   l1487 00E4                     l1671 067D                     l1663 0668  
                   l1655 0620                     l1647 05AD                     l1497 0042  
                   l1569 02A2                     l1577 02B2                     l1593 01C5  
                   l1585 01B9                     l1489 00ED                     l1673 0681  
                   l1665 066D                     l1657 0652                     l1499 0046  
                   l1579 02B7                     l1595 01C9                     l1587 01BA  
                   l1675 0687                     l1667 0673                     l1659 0658  
                   l1597 01CE                     l1589 01BE                     l1669 0677  
                   l1599 01D4                     ?_pad 0024                     STR_1 1000  
                   STR_2 101F                     STR_3 1010                     u1000 04E4  
                   u1010 04F4                     u1011 04F3                     u1020 0507  
                   u1021 0506                     u1030 0531                     u1110 03FC  
                   u1031 0530                     u1111 03FB                     u1040 0550  
                   u1120 040F                     u1200 024D                     u1041 054F  
                   u1121 040E                     u1201 024C                     u1050 0555  
                   u1130 0431                     u1210 0FBC                     u1051 0554  
                   u1035 052D                     u1131 0430                     u1211 0FBB  
                   u1140 044F                     u1300 0786                     u1220 06A9  
                   u1141 044E                     u1301 0785                     u1221 06A7  
                   u1150 0454                     u1070 03A5                     u1310 0793  
                   u1230 06AA                     u1151 0453                     u1135 042D  
                   u1071 03A4                     u1215 0FB8                     u1311 0792  
                   u1320 07A0                     u1240 06B7                     u1321 079F  
                   u1305 0782                     u1241 06B6                     u1410 0140  
                   u1090 03D0                     u1170 0212                     u1330 07AE  
                   u1411 013F                     u1091 03CF                     u1171 0211  
                   u1331 07AD                     u1180 021F                     u1340 07B3  
                   u1260 06DA                     u1405 0139                     u1181 021E  
                   u1341 07B2                     u1325 079C                     u1261 06D9  
                   u1430 014D                     u1190 0248                     u1350 07BA  
                   u1270 06EB                     _LATB 010D                     u1431 014C  
                   u1191 0247                     u1351 07B9                     u1335 07AA  
                   u1271 06EA                     _LATC 010E                     u1360 07BE  
                   u1280 0700                     u1520 00ED                     u1425 0146  
                   u1505 0020                     u1361 07BD                     u1281 06FF  
                   u1521 00EC                     u1450 015A                     u1530 007C  
                   u1610 0293                     u1370 07C8                     u1290 0704  
                   u1451 0159                     u1515 0FF1                     u1531 007B  
                   u1611 0292                     u1195 0244                     u1371 07C7  
                   u1291 0703                     u1275 06E7                     u1540 00AA  
                   u1460 02D4                     u1445 0153                     u1541 00A9  
                   u1605 0287                     u1461 02D3                     u1390 0133  
                   u1550 00B0                     u1630 02A2                     u1710 01E4  
                   u1470 02F5                     u1391 0132                     u1551 00AF  
                   u1631 02A1                     u1711 01E3                     u1471 02F4  
                   u1560 00B6                     u1720 01EE                     u1480 0306  
                   u1385 012C                     u1561 00B5                     u1625 0294  
                   u1721 01ED                     u1705 01D8                     u1481 0305  
                   u1650 02B2                     u1570 0267                     u1490 0352  
                   u1651 02B1                     u1635 029E                     u1571 0266  
                   u1491 0351                     u1660 02B7                     u1580 0272  
                   u1740 01FD                     u1661 02B6                     u1645 02A8  
                   u1581 0271                     u1741 01FC                     u1725 01EA  
                   u1590 0283                     u1750 0202                     u1670 01BE  
                   u1807 003E                     u1591 0282                     u1751 0201  
                   u1735 01F3                     u1671 01BD                     u1680 01C9  
                   u1760 0673                     u1817 0FE5                     u1681 01C8  
                   u1761 0672                     u1690 01D4                     u1770 067D  
                   u1827 00C6                     u1691 01D3                     u1771 067C  
                   u1780 0687                     u1837 0015                     u1781 0686  
                   u1847 0029                     u1797 0663                     abs@a 0073  
                   _dbuf 0120                     _main 0585                     _dtoa 068C  
                   _prec 006A                     _nout 0066                     pad@i 0027  
                   pad@p 0025                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     pad@w 0029                     btemp 007E  
                   start 0002   __end_of_LCD_Initialize 0057                    ??_abs 0075  
                  ??_pad 007C              LCDPutCmd@ch 0075          __end_of___aodiv 0585  
                  ?_main 0070                    ?_dtoa 0030          __end_of___aomod 0484  
        __end_of___awdiv 02C1          __end_of___awmod 020C          ___awdiv@divisor 0070  
        ___awdiv@counter 0075             vfpfcnvrt@fmt 004E                    _TRISB 008D  
                  _TRISC 008E                    u97lld 04AE                    u99lld 04D9  
                  _flags 006C                    _fputc 0167                    _fputs 00F2  
                  pad@fp 002B                    _width 0068                    _putch 000C  
                  dtoa@d 0030                    dtoa@i 004C                    dtoa@n 0044  
                  dtoa@p 003E                    dtoa@s 0042                    dtoa@w 0040  
                  status 0003                    wtemp0 007E          __end_of_sprintf 00A3  
        ?_LCD_Initialize 0070          __initialization 07ED             __end_of_main 068C  
           __end_of_dtoa 07ED                   ??_main 00BA                   ??_dtoa 0038  
              ??_LCDGoto 0077        __end_of_LCDPutCmd 0032             LCDPutChar@ch 0075  
      __end_of_LCDPutStr 007D                   ?_fputc 0070                   ?_fputs 0078  
       ___awdiv@dividend 0072                   ?_putch 0070                   _ANSELB 018D  
                 _ANSELC 018E                   u110lld 03EF                   u106lld 0573  
                 u116lld 0472                   u108lld 03C4                   u125lld 06D5  
           LCDPutStr@str 0076           _LCDWriteNibble 011B             vfprintf@cfmt 0064  
              ??___aodiv 0070                ??___aomod 0070                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075                   pad@buf 0024                   dtoa@fp 003D  
                 _strlen 0FC9                   fputc@c 0070                   fputs@c 0020  
                 fputs@i 0021                   fputs@s 0023                   putch@c 0070  
       __end_of_vfprintf 00F2                ??_sprintf 007D   __end_of_LCDWriteNibble 0167  
__end_of__initialization 07FD                LCDGoto@ln 0076           __pcstackCOMMON 0070  
          __end_of_fputc 01B9             ??_LCDPutChar 0073            __end_of_fputs 011B  
          __end_of_putch 000D        main@minute_digit1 00D1        main@minute_digit2 00D2  
      main@second_digit1 00D3        main@second_digit2 00D4                  ??_fputc 0073  
                ??_fputs 0079                  ??_putch 0070               __pbssBANK0 0066  
             __pbssBANK2 0120          ?_LCDWriteNibble 0070       __end_of_LCDPutChar 1000  
             __pmaintext 0585                  ?_strlen 0070                  _LCDGoto 00A3  
       ??_LCD_Initialize 0076                  ___aodiv 0484                  ___aomod 039A  
                ___awdiv 0262                  ___awmod 01B9                ?_vfprintf 005E  
                __ptext1 007D                  __ptext2 00CA                  __ptext3 02C1  
                __ptext4 068C                  __ptext5 020C                  __ptext6 0FC9  
                __ptext7 00F2                  __ptext8 0167                  __ptext9 000C  
       ___awmod@dividend 0072                _LCDPutCmd 0013                  _sprintf 007D  
                clrloop0 000E                _LCDPutStr 0057     end_of_initialization 07FD  
                fputc@fp 0072                  fputs@fp 0078        __end_of_vfpfcnvrt 039A  
             ??_vfprintf 0061                  strlen@a 0073                  strlen@s 0074  
              _PORTCbits 000E               ?_LCDPutCmd 0070               ?_LCDPutStr 0076  
             LCDGoto@pos 0079              vfpfcnvrt@ap 004F              vfpfcnvrt@fp 005D  
             LCDPutStr@i 007B              vfpfcnvrt@ll 0055           __end_of_strlen 0FE3  
    start_initialization 07ED         ??_LCDWriteNibble 0071              __end_of_abs 0FC9  
            __end_of_pad 0262         main@hour_counter 00D5       main@minute_counter 00D6  
            vfprintf@fmt 005E       main@second_counter 00D7                 ??_strlen 0072  
               ?_LCDGoto 0076                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0         ___aodiv@dividend 0028              ??_LCDPutCmd 0073  
            ??_LCDPutStr 0078                 ?___aodiv 0020                 ?___aomod 0020  
               ?___awdiv 0070         ___aodiv@quotient 0073                 ?___awmod 0070  
       LCDWriteNibble@ch 0072         LCDWriteNibble@rs 0070                 ?_sprintf 00A0  
               _LATBbits 010D                clear_ram0 000D              _LCDGoto$104 0077  
              _vfpfcnvrt 02C1          main@hour_digit1 00CF          main@hour_digit2 00D0  
             vfprintf@ap 0060               vfprintf@fp 0063               ?_vfpfcnvrt 004E  
        ___aodiv@divisor 0020          ___aodiv@counter 0071               sprintf@fmt 00A0  
               _dtoa$531 003B                 __ptext10 0FAF                 __ptext11 039A  
               __ptext20 011B                 __ptext12 0484                 __ptext13 01B9  
               __ptext14 0262                 __ptext15 0032                 __ptext16 0057  
               __ptext17 0FE3                 __ptext18 00A3                 __ptext19 0013  
               _vfprintf 00CA               _LCDPutChar 0FE3         ___aomod@dividend 0028  
        main@time_string 00C6                sprintf@ap 00AE          ___aomod@divisor 0020  
            ??_vfpfcnvrt 0050          ___aomod@counter 0071            __pstringtext1 1000  
          __pstringtext2 1010            __pstringtext3 101F            __pstringtext4 0000  
               sprintf@f 00B0                 sprintf@s 00AF             ___aodiv@sign 0072  
           ___aomod@sign 0072  
