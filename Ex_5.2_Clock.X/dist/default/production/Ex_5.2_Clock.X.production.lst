

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 31 21:27:40 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1509 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011D                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  018E                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0194                     	;# 
   126  0195                     	;# 
   127  0196                     	;# 
   128  0197                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019C                     	;# 
   134  019D                     	;# 
   135  019E                     	;# 
   136  019F                     	;# 
   137  020C                     	;# 
   138  020D                     	;# 
   139  0211                     	;# 
   140  0211                     	;# 
   141  0212                     	;# 
   142  0212                     	;# 
   143  0213                     	;# 
   144  0213                     	;# 
   145  0214                     	;# 
   146  0214                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0216                     	;# 
   151  0216                     	;# 
   152  0217                     	;# 
   153  0217                     	;# 
   154  0391                     	;# 
   155  0392                     	;# 
   156  0393                     	;# 
   157  0394                     	;# 
   158  0395                     	;# 
   159  0396                     	;# 
   160  0498                     	;# 
   161  0498                     	;# 
   162  0499                     	;# 
   163  049A                     	;# 
   164  049B                     	;# 
   165  049B                     	;# 
   166  049C                     	;# 
   167  049D                     	;# 
   168  049E                     	;# 
   169  049F                     	;# 
   170  0611                     	;# 
   171  0612                     	;# 
   172  0613                     	;# 
   173  0613                     	;# 
   174  0614                     	;# 
   175  0615                     	;# 
   176  0616                     	;# 
   177  0616                     	;# 
   178  0617                     	;# 
   179  0618                     	;# 
   180  0619                     	;# 
   181  0619                     	;# 
   182  061A                     	;# 
   183  061B                     	;# 
   184  061C                     	;# 
   185  061C                     	;# 
   186  0691                     	;# 
   187  0692                     	;# 
   188  0693                     	;# 
   189  0694                     	;# 
   190  0695                     	;# 
   191  0F0F                     	;# 
   192  0F10                     	;# 
   193  0F11                     	;# 
   194  0F12                     	;# 
   195  0F13                     	;# 
   196  0F14                     	;# 
   197  0F15                     	;# 
   198  0F16                     	;# 
   199  0F17                     	;# 
   200  0F18                     	;# 
   201  0F19                     	;# 
   202  0F1A                     	;# 
   203  0F1B                     	;# 
   204  0F1C                     	;# 
   205  0F1D                     	;# 
   206  0F1E                     	;# 
   207  0F1F                     	;# 
   208  0F20                     	;# 
   209  0F21                     	;# 
   210  0F22                     	;# 
   211  0F23                     	;# 
   212  0F24                     	;# 
   213  0F25                     	;# 
   214  0F26                     	;# 
   215  0F27                     	;# 
   216  0F28                     	;# 
   217  0F29                     	;# 
   218  0F2A                     	;# 
   219  0F2B                     	;# 
   220  0F2C                     	;# 
   221  0F2D                     	;# 
   222  0F2E                     	;# 
   223  0F2F                     	;# 
   224  0F8C                     	;# 
   225  0F8D                     	;# 
   226  0F91                     	;# 
   227  0F95                     	;# 
   228  0F96                     	;# 
   229  0F97                     	;# 
   230  0F9C                     	;# 
   231  0F9D                     	;# 
   232  0F9E                     	;# 
   233  0FE3                     	;# 
   234  0FE4                     	;# 
   235  0FE5                     	;# 
   236  0FE6                     	;# 
   237  0FE7                     	;# 
   238  0FE8                     	;# 
   239  0FE9                     	;# 
   240  0FEA                     	;# 
   241  0FEB                     	;# 
   242  0FED                     	;# 
   243  0FEE                     	;# 
   244  0FEF                     	;# 
   245                           
   246                           	psect	idataBANK0
   247  0542                     __pidataBANK0:
   248                           
   249                           ;initializer for _ComA_state
   250  0542  3440               	retlw	64
   251  0543  3479               	retlw	121
   252  0544  3424               	retlw	36
   253  0545  3430               	retlw	48
   254  0546  3419               	retlw	25
   255  0547  3412               	retlw	18
   256  0548  3402               	retlw	2
   257  0549  3478               	retlw	120
   258  054A  3400               	retlw	0
   259  054B  3410               	retlw	16
   260  000D                     _PORTBbits	set	13
   261  008D                     _TRISBbits	set	141
   262  008E                     _TRISCbits	set	142
   263  010E                     _LATC	set	270
   264  010E                     _LATCbits	set	270
   265  018D                     _ANSELB	set	397
   266  018E                     _ANSELC	set	398
   267                           
   268                           	psect	cinit
   269  07F1                     start_initialization:	
   270                           ; #config settings
   271                           
   272  07F1                     __initialization:
   273                           
   274                           ; Initialize objects allocated to BANK0
   275  07F1  3042               	movlw	low __pidataBANK0
   276  07F2  0084               	movwf	4
   277  07F3  3085               	movlw	(high __pidataBANK0)| (0+128)
   278  07F4  0085               	movwf	5
   279  07F5  302D               	movlw	low __pdataBANK0
   280  07F6  0086               	movwf	6
   281  07F7  3000               	movlw	high __pdataBANK0
   282  07F8  0087               	movwf	7
   283  07F9  300A               	movlw	10
   284  07FA  3185  253C  3187   	fcall	init_ram
   285  07FD                     end_of_initialization:	
   286                           ;End of C runtime variable initialization code
   287                           
   288  07FD                     __end_of__initialization:
   289  07FD  0020               	movlb	0
   290  07FE  3187  2F32         	ljmp	_main	;jump to C main() function
   291                           
   292                           	psect	dataBANK0
   293  002D                     __pdataBANK0:
   294  002D                     _ComA_state:
   295  002D                     	ds	10
   296                           
   297                           	psect	inittext
   298  053C                     init_ram:
   299  053C  00FE               	movwf	btemp
   300  053D                     initloop:
   301  053D  0012               	moviw fsr0++
   302  053E  001E               	movwi fsr1++
   303  053F  0BFE               	decfsz	btemp,f
   304  0540  2D3D               	goto	initloop
   305  0541  3400               	retlw	0
   306                           
   307                           	psect	cstackCOMMON
   308  0070                     __pcstackCOMMON:
   309  0070                     ?_clk0_pulse:
   310  0070                     ??_clk0_pulse:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_lat0_pulse:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ??_lat0_pulse:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_clk1_pulse:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ??_clk1_pulse:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_lat1_pulse:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ??_lat1_pulse:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_data_0:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_data_1:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_main:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?___awdiv:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?___awmod:	
   344                           ; 2 bytes @ 0x0
   345                           
   346  0070                     data_0@index_0:	
   347                           ; 2 bytes @ 0x0
   348                           
   349  0070                     data_1@index_1:	
   350                           ; 2 bytes @ 0x0
   351                           
   352  0070                     ___awdiv@divisor:	
   353                           ; 2 bytes @ 0x0
   354                           
   355  0070                     ___awmod@divisor:	
   356                           ; 2 bytes @ 0x0
   357                           
   358                           
   359                           ; 2 bytes @ 0x0
   360  0070                     	ds	2
   361  0072                     ??_data_0:
   362  0072                     ??_data_1:	
   363                           ; 1 bytes @ 0x2
   364                           
   365  0072                     ___awdiv@dividend:	
   366                           ; 1 bytes @ 0x2
   367                           
   368  0072                     ___awmod@dividend:	
   369                           ; 2 bytes @ 0x2
   370                           
   371                           
   372                           ; 2 bytes @ 0x2
   373  0072                     	ds	2
   374  0074                     ??___awdiv:
   375  0074                     ??___awmod:	
   376                           ; 1 bytes @ 0x4
   377                           
   378                           
   379                           ; 1 bytes @ 0x4
   380  0074                     	ds	1
   381  0075                     ___awdiv@counter:
   382  0075                     ___awmod@counter:	
   383                           ; 1 bytes @ 0x5
   384                           
   385  0075                     data_0@i:	
   386                           ; 1 bytes @ 0x5
   387                           
   388  0075                     data_1@i:	
   389                           ; 2 bytes @ 0x5
   390                           
   391                           
   392                           ; 2 bytes @ 0x5
   393  0075                     	ds	1
   394  0076                     ___awdiv@sign:
   395  0076                     ___awmod@sign:	
   396                           ; 1 bytes @ 0x6
   397                           
   398                           
   399                           ; 1 bytes @ 0x6
   400  0076                     	ds	1
   401  0077                     ___awdiv@quotient:
   402                           
   403                           ; 2 bytes @ 0x7
   404  0077                     	ds	2
   405  0079                     ?_set_clock:
   406  0079                     ?_process_n_display:	
   407                           ; 1 bytes @ 0x9
   408                           
   409  0079                     set_clock@min_set:	
   410                           ; 1 bytes @ 0x9
   411                           
   412  0079                     process_n_display@min_input:	
   413                           ; 2 bytes @ 0x9
   414                           
   415                           
   416                           ; 2 bytes @ 0x9
   417  0079                     	ds	2
   418  007B                     ??_set_clock:
   419  007B                     ??_process_n_display:	
   420                           ; 1 bytes @ 0xB
   421                           
   422                           
   423                           ; 1 bytes @ 0xB
   424  007B                     	ds	2
   425  007D                     ??_main:
   426                           
   427                           ; 1 bytes @ 0xD
   428  007D                     	ds	1
   429                           
   430                           	psect	cstackBANK0
   431  0020                     __pcstackBANK0:
   432  0020                     set_clock@min_dis1:
   433  0020                     process_n_display@min_digit1:	
   434                           ; 1 bytes @ 0x0
   435                           
   436                           
   437                           ; 2 bytes @ 0x0
   438  0020                     	ds	1
   439  0021                     set_clock@min_dis2:
   440                           
   441                           ; 1 bytes @ 0x1
   442  0021                     	ds	1
   443  0022                     process_n_display@min_digit2:
   444                           
   445                           ; 2 bytes @ 0x2
   446  0022                     	ds	2
   447  0024                     process_n_display@sec_digit1:
   448                           
   449                           ; 2 bytes @ 0x4
   450  0024                     	ds	2
   451  0026                     process_n_display@sec_digit2:
   452                           
   453                           ; 2 bytes @ 0x6
   454  0026                     	ds	2
   455  0028                     process_n_display@sec_counter:
   456                           
   457                           ; 2 bytes @ 0x8
   458  0028                     	ds	2
   459  002A                     main@start_state:
   460                           
   461                           ; 1 bytes @ 0xA
   462  002A                     	ds	1
   463  002B                     main@min_counter:
   464                           
   465                           ; 2 bytes @ 0xB
   466  002B                     	ds	2
   467                           
   468                           	psect	maintext
   469  0732                     __pmaintext:	
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 147 in file "ex_5-2.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  min_counter     2   11[BANK0 ] int 
   480 ;;  i               2    0        int 
   481 ;;  start_state     1   10[BANK0 ] unsigned char 
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : B1F/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   491 ;;      Params:         0       0       0       0       0       0       0       0
   492 ;;      Locals:         0       3       0       0       0       0       0       0
   493 ;;      Temps:          1       0       0       0       0       0       0       0
   494 ;;      Totals:         1       3       0       0       0       0       0       0
   495 ;;Total ram usage:        4 bytes
   496 ;; Hardware stack levels required when called: 3
   497 ;; This function calls:
   498 ;;		_clk1_pulse
   499 ;;		_data_1
   500 ;;		_lat1_pulse
   501 ;;		_process_n_display
   502 ;;		_set_clock
   503 ;; This function is called by:
   504 ;;		Startup code after reset
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508  0732                     _main:	
   509                           ;psect for function _main
   510                           
   511  0732                     l1012:	
   512                           ;incstack = 0
   513                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   514                           
   515                           
   516                           ;ex_5-2.c: 149:     TRISCbits.TRISC0=0;
   517  0732  0021               	movlb	1	; select bank1
   518  0733  100E               	bcf	14,0	;volatile
   519                           
   520                           ;ex_5-2.c: 150:     TRISCbits.TRISC1=0;
   521  0734  108E               	bcf	14,1	;volatile
   522                           
   523                           ;ex_5-2.c: 151:     TRISCbits.TRISC2=0;
   524  0735  110E               	bcf	14,2	;volatile
   525                           
   526                           ;ex_5-2.c: 152:     TRISCbits.TRISC5=0;
   527  0736  128E               	bcf	14,5	;volatile
   528                           
   529                           ;ex_5-2.c: 153:     TRISCbits.TRISC6=0;
   530  0737  130E               	bcf	14,6	;volatile
   531                           
   532                           ;ex_5-2.c: 154:     TRISCbits.TRISC7=0;
   533  0738  138E               	bcf	14,7	;volatile
   534                           
   535                           ;ex_5-2.c: 155:     TRISBbits.TRISB4=1;
   536  0739  160D               	bsf	13,4	;volatile
   537                           
   538                           ;ex_5-2.c: 156:     TRISBbits.TRISB5=1;
   539  073A  168D               	bsf	13,5	;volatile
   540                           
   541                           ;ex_5-2.c: 157:     TRISBbits.TRISB6=1;
   542  073B  170D               	bsf	13,6	;volatile
   543  073C                     l1014:
   544                           
   545                           ;ex_5-2.c: 158:     LATC=0;
   546  073C  0022               	movlb	2	; select bank2
   547  073D  018E               	clrf	14	;volatile
   548                           
   549                           ;ex_5-2.c: 159:     ANSELC=0;
   550  073E  0023               	movlb	3	; select bank3
   551  073F  018E               	clrf	14	;volatile
   552                           
   553                           ;ex_5-2.c: 160:     ANSELB=0;
   554  0740  018D               	clrf	13	;volatile
   555                           
   556                           ;ex_5-2.c: 161:     int min_counter=0;
   557  0741  0020               	movlb	0	; select bank0
   558  0742  01AB               	clrf	main@min_counter
   559  0743  01AC               	clrf	main@min_counter+1
   560                           
   561                           ;ex_5-2.c: 163:     unsigned char start_state=0;
   562  0744  01AA               	clrf	main@start_state
   563  0745                     l1016:
   564                           
   565                           ;ex_5-2.c: 166:     set_clock(min_counter);
   566  0745  3000               	movlw	0
   567  0746  00F9               	movwf	set_clock@min_set
   568  0747  00FA               	movwf	set_clock@min_set+1
   569  0748  3185  25B4  3187   	fcall	_set_clock
   570  074B                     l1018:
   571                           
   572                           ;ex_5-2.c: 169:     data_1(0);
   573  074B  3000               	movlw	0
   574  074C  00F0               	movwf	data_1@index_1
   575  074D  00F1               	movwf	data_1@index_1+1
   576  074E  3185  2580  3187   	fcall	_data_1
   577  0751                     l1020:
   578                           
   579                           ;ex_5-2.c: 170:     clk1_pulse();
   580  0751  3185  2530  3187   	fcall	_clk1_pulse
   581  0754                     l1022:
   582                           
   583                           ;ex_5-2.c: 172:     data_1(0);
   584  0754  3000               	movlw	0
   585  0755  00F0               	movwf	data_1@index_1
   586  0756  00F1               	movwf	data_1@index_1+1
   587  0757  3185  2580  3187   	fcall	_data_1
   588  075A                     l1024:
   589                           
   590                           ;ex_5-2.c: 173:     lat1_pulse();
   591  075A  3185  2538  3187   	fcall	_lat1_pulse
   592  075D                     l1026:
   593                           
   594                           ;ex_5-2.c: 179:         if(PORTBbits.RB5==1){
   595  075D  0020               	movlb	0	; select bank0
   596  075E  1E8D               	btfss	13,5	;volatile
   597  075F  2F61               	goto	u681
   598  0760  2F62               	goto	u680
   599  0761                     u681:
   600  0761  2F8B               	goto	l1038
   601  0762                     u680:
   602  0762                     l1028:
   603                           
   604                           ;ex_5-2.c: 180:             _delay((unsigned long)((100)*(1000000/4000.0)));
   605  0762  3021               	movlw	33
   606  0763  00FD               	movwf	??_main
   607  0764  3076               	movlw	118
   608  0765                     u817:
   609  0765  0B89               	decfsz	9,f
   610  0766  2F65               	goto	u817
   611  0767  0BFD               	decfsz	??_main,f
   612  0768  2F65               	goto	u817
   613  0769  3200               	nop2
   614  076A                     l1030:
   615                           
   616                           ;ex_5-2.c: 181:             if(PORTBbits.RB5==1){
   617  076A  0020               	movlb	0	; select bank0
   618  076B  1E8D               	btfss	13,5	;volatile
   619  076C  2F6E               	goto	u691
   620  076D  2F6F               	goto	u690
   621  076E                     u691:
   622  076E  2F8B               	goto	l1038
   623  076F                     u690:
   624  076F                     l1032:
   625                           
   626                           ;ex_5-2.c: 182:                 min_counter+=1;
   627  076F  3001               	movlw	1
   628  0770  07AB               	addwf	main@min_counter,f
   629  0771  3000               	movlw	0
   630  0772  3DAC               	addwfc	main@min_counter+1,f
   631                           
   632                           ;ex_5-2.c: 183:                 if(min_counter>99){
   633  0773  082C               	movf	main@min_counter+1,w
   634  0774  3A80               	xorlw	128
   635  0775  00FD               	movwf	??_main
   636  0776  3080               	movlw	128
   637  0777  027D               	subwf	??_main,w
   638  0778  1D03               	skipz
   639  0779  2F7C               	goto	u705
   640  077A  3064               	movlw	100
   641  077B  022B               	subwf	main@min_counter,w
   642  077C                     u705:
   643  077C  1C03               	skipc
   644  077D  2F7F               	goto	u701
   645  077E  2F80               	goto	u700
   646  077F                     u701:
   647  077F  2F83               	goto	l1036
   648  0780                     u700:
   649  0780                     l1034:
   650                           
   651                           ;ex_5-2.c: 184:                     min_counter=0;
   652  0780  0020               	movlb	0	; select bank0
   653  0781  01AB               	clrf	main@min_counter
   654  0782  01AC               	clrf	main@min_counter+1
   655  0783                     l1036:
   656                           
   657                           ;ex_5-2.c: 186:                 set_clock(min_counter);
   658  0783  0020               	movlb	0	; select bank0
   659  0784  082C               	movf	main@min_counter+1,w
   660  0785  00FA               	movwf	set_clock@min_set+1
   661  0786  082B               	movf	main@min_counter,w
   662  0787  00F9               	movwf	set_clock@min_set
   663  0788  3185  25B4  3187   	fcall	_set_clock
   664  078B                     l1038:
   665                           
   666                           ;ex_5-2.c: 191:         if(PORTBbits.RB6==1){
   667  078B  0020               	movlb	0	; select bank0
   668  078C  1F0D               	btfss	13,6	;volatile
   669  078D  2F8F               	goto	u711
   670  078E  2F90               	goto	u710
   671  078F                     u711:
   672  078F  2FAE               	goto	l1052
   673  0790                     u710:
   674  0790                     l1040:
   675                           
   676                           ;ex_5-2.c: 192:             _delay((unsigned long)((100)*(1000000/4000.0)));
   677  0790  3021               	movlw	33
   678  0791  00FD               	movwf	??_main
   679  0792  3076               	movlw	118
   680  0793                     u827:
   681  0793  0B89               	decfsz	9,f
   682  0794  2F93               	goto	u827
   683  0795  0BFD               	decfsz	??_main,f
   684  0796  2F93               	goto	u827
   685  0797  3200               	nop2
   686  0798                     l1042:
   687                           
   688                           ;ex_5-2.c: 193:             if(PORTBbits.RB6==1){
   689  0798  0020               	movlb	0	; select bank0
   690  0799  1F0D               	btfss	13,6	;volatile
   691  079A  2F9C               	goto	u721
   692  079B  2F9D               	goto	u720
   693  079C                     u721:
   694  079C  2FAE               	goto	l1052
   695  079D                     u720:
   696  079D                     l1044:
   697                           
   698                           ;ex_5-2.c: 194:                 min_counter-=1;
   699  079D  30FF               	movlw	255
   700  079E  07AB               	addwf	main@min_counter,f
   701  079F  30FF               	movlw	255
   702  07A0  3DAC               	addwfc	main@min_counter+1,f
   703  07A1                     l1046:
   704                           
   705                           ;ex_5-2.c: 195:                 if(min_counter<0){
   706  07A1  1FAC               	btfss	main@min_counter+1,7
   707  07A2  2FA4               	goto	u731
   708  07A3  2FA5               	goto	u730
   709  07A4                     u731:
   710  07A4  2FA7               	goto	l1050
   711  07A5                     u730:
   712  07A5                     l1048:
   713                           
   714                           ;ex_5-2.c: 196:                     min_counter=0;
   715  07A5  01AB               	clrf	main@min_counter
   716  07A6  01AC               	clrf	main@min_counter+1
   717  07A7                     l1050:
   718                           
   719                           ;ex_5-2.c: 198:                 set_clock(min_counter);
   720  07A7  082C               	movf	main@min_counter+1,w
   721  07A8  00FA               	movwf	set_clock@min_set+1
   722  07A9  082B               	movf	main@min_counter,w
   723  07AA  00F9               	movwf	set_clock@min_set
   724  07AB  3185  25B4  3187   	fcall	_set_clock
   725  07AE                     l1052:
   726                           
   727                           ;ex_5-2.c: 202:         if(PORTBbits.RB4==1&&start_state==0){
   728  07AE  0020               	movlb	0	; select bank0
   729  07AF  1E0D               	btfss	13,4	;volatile
   730  07B0  2FB2               	goto	u741
   731  07B1  2FB3               	goto	u740
   732  07B2                     u741:
   733  07B2  2FCC               	goto	l1064
   734  07B3                     u740:
   735  07B3                     l1054:
   736  07B3  082A               	movf	main@start_state,w
   737  07B4  1D03               	btfss	3,2
   738  07B5  2FB7               	goto	u751
   739  07B6  2FB8               	goto	u750
   740  07B7                     u751:
   741  07B7  2FCC               	goto	l1064
   742  07B8                     u750:
   743  07B8                     l1056:
   744                           
   745                           ;ex_5-2.c: 203:             _delay((unsigned long)((50)*(1000000/4000.0)));
   746  07B8  3011               	movlw	17
   747  07B9  00FD               	movwf	??_main
   748  07BA  303A               	movlw	58
   749  07BB                     u837:
   750  07BB  0B89               	decfsz	9,f
   751  07BC  2FBB               	goto	u837
   752  07BD  0BFD               	decfsz	??_main,f
   753  07BE  2FBB               	goto	u837
   754  07BF  3200               	nop2
   755  07C0                     l1058:
   756                           
   757                           ;ex_5-2.c: 204:             if(PORTBbits.RB4==1&&start_state==0){
   758  07C0  0020               	movlb	0	; select bank0
   759  07C1  1E0D               	btfss	13,4	;volatile
   760  07C2  2FC4               	goto	u761
   761  07C3  2FC5               	goto	u760
   762  07C4                     u761:
   763  07C4  2FCC               	goto	l1064
   764  07C5                     u760:
   765  07C5                     l1060:
   766  07C5  082A               	movf	main@start_state,w
   767  07C6  1D03               	btfss	3,2
   768  07C7  2FC9               	goto	u771
   769  07C8  2FCA               	goto	u770
   770  07C9                     u771:
   771  07C9  2FCC               	goto	l1064
   772  07CA                     u770:
   773  07CA                     l1062:
   774                           
   775                           ;ex_5-2.c: 205:                 start_state=1;
   776  07CA  01AA               	clrf	main@start_state
   777  07CB  0AAA               	incf	main@start_state,f
   778  07CC                     l1064:
   779                           
   780                           ;ex_5-2.c: 208:         if(start_state==1&&PORTBbits.RB4==0){
   781  07CC  032A               	decf	main@start_state,w
   782  07CD  1D03               	btfss	3,2
   783  07CE  2FD0               	goto	u781
   784  07CF  2FD1               	goto	u780
   785  07D0                     u781:
   786  07D0  2FD9               	goto	l1070
   787  07D1                     u780:
   788  07D1                     l1066:
   789  07D1  1A0D               	btfsc	13,4	;volatile
   790  07D2  2FD4               	goto	u791
   791  07D3  2FD5               	goto	u790
   792  07D4                     u791:
   793  07D4  2FD9               	goto	l1070
   794  07D5                     u790:
   795  07D5                     l1068:
   796                           
   797                           ;ex_5-2.c: 209:                 start_state=2;
   798  07D5  3002               	movlw	2
   799  07D6  00FD               	movwf	??_main
   800  07D7  087D               	movf	??_main,w
   801  07D8  00AA               	movwf	main@start_state
   802  07D9                     l1070:
   803                           
   804                           ;ex_5-2.c: 212:         if(start_state==2){
   805  07D9  3002               	movlw	2
   806  07DA  062A               	xorwf	main@start_state,w
   807  07DB  1D03               	btfss	3,2
   808  07DC  2FDE               	goto	u801
   809  07DD  2FDF               	goto	u800
   810  07DE                     u801:
   811  07DE  2F5D               	goto	l1026
   812  07DF                     u800:
   813  07DF                     l1072:
   814                           
   815                           ;ex_5-2.c: 213:             min_counter-=1;
   816  07DF  30FF               	movlw	255
   817  07E0  07AB               	addwf	main@min_counter,f
   818  07E1  30FF               	movlw	255
   819  07E2  3DAC               	addwfc	main@min_counter+1,f
   820  07E3                     l1074:
   821                           
   822                           ;ex_5-2.c: 214:             process_n_display(min_counter);
   823  07E3  082C               	movf	main@min_counter+1,w
   824  07E4  00FA               	movwf	process_n_display@min_input+1
   825  07E5  082B               	movf	main@min_counter,w
   826  07E6  00F9               	movwf	process_n_display@min_input
   827  07E7  3186  26A2  3187   	fcall	_process_n_display
   828  07EA                     l1076:
   829                           
   830                           ;ex_5-2.c: 215:             min_counter=0;
   831  07EA  0020               	movlb	0	; select bank0
   832  07EB  01AB               	clrf	main@min_counter
   833  07EC  01AC               	clrf	main@min_counter+1
   834  07ED                     l1078:
   835                           
   836                           ;ex_5-2.c: 216:             start_state=0;
   837  07ED  01AA               	clrf	main@start_state
   838  07EE  2F5D               	goto	l1026
   839  07EF  3180  2802         	ljmp	start
   840  07F1                     __end_of_main:
   841                           
   842                           	psect	text1
   843  05B4                     __ptext1:	
   844 ;; *************** function _set_clock *****************
   845 ;; Defined at:
   846 ;;		line 97 in file "ex_5-2.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  min_set         2    9[COMMON] int 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  i               2    0        int 
   851 ;;  min_dis2        1    1[BANK0 ] unsigned char 
   852 ;;  min_dis1        1    0[BANK0 ] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   862 ;;      Params:         2       0       0       0       0       0       0       0
   863 ;;      Locals:         0       2       0       0       0       0       0       0
   864 ;;      Temps:          2       0       0       0       0       0       0       0
   865 ;;      Totals:         4       2       0       0       0       0       0       0
   866 ;;Total ram usage:        6 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; Hardware stack levels required when called: 2
   869 ;; This function calls:
   870 ;;		___awdiv
   871 ;;		___awmod
   872 ;;		_clk0_pulse
   873 ;;		_data_0
   874 ;;		_lat0_pulse
   875 ;; This function is called by:
   876 ;;		_main
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880  05B4                     _set_clock:	
   881                           ;psect for function _set_clock
   882                           
   883  05B4                     l962:	
   884                           ;incstack = 0
   885                           ; Regs used in _set_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   886                           
   887  05B4                     l964:
   888                           
   889                           ;ex_5-2.c: 100:     min_dis1 = min_set/10;
   890  05B4  300A               	movlw	10
   891  05B5  00F0               	movwf	___awdiv@divisor
   892  05B6  3000               	movlw	0
   893  05B7  00F1               	movwf	___awdiv@divisor+1
   894  05B8  087A               	movf	set_clock@min_set+1,w
   895  05B9  00F3               	movwf	___awdiv@dividend+1
   896  05BA  0879               	movf	set_clock@min_set,w
   897  05BB  00F2               	movwf	___awdiv@dividend
   898  05BC  3186  2643  3185   	fcall	___awdiv
   899  05BF  0870               	movf	?___awdiv,w
   900  05C0  00FB               	movwf	??_set_clock
   901  05C1  087B               	movf	??_set_clock,w
   902  05C2  0020               	movlb	0	; select bank0
   903  05C3  00A0               	movwf	set_clock@min_dis1
   904  05C4                     l966:
   905                           
   906                           ;ex_5-2.c: 101:     min_dis2 = min_set%10;
   907  05C4  300A               	movlw	10
   908  05C5  00F0               	movwf	___awmod@divisor
   909  05C6  3000               	movlw	0
   910  05C7  00F1               	movwf	___awmod@divisor+1
   911  05C8  087A               	movf	set_clock@min_set+1,w
   912  05C9  00F3               	movwf	___awmod@dividend+1
   913  05CA  0879               	movf	set_clock@min_set,w
   914  05CB  00F2               	movwf	___awmod@dividend
   915  05CC  3185  25F0  3185   	fcall	___awmod
   916  05CF  0870               	movf	?___awmod,w
   917  05D0  00FB               	movwf	??_set_clock
   918  05D1  087B               	movf	??_set_clock,w
   919  05D2  0020               	movlb	0	; select bank0
   920  05D3  00A1               	movwf	set_clock@min_dis2
   921  05D4                     l968:
   922                           
   923                           ;ex_5-2.c: 104:     data_0(min_dis2);
   924  05D4  0821               	movf	set_clock@min_dis2,w
   925  05D5  00FB               	movwf	??_set_clock
   926  05D6  01FC               	clrf	??_set_clock+1
   927  05D7  087B               	movf	??_set_clock,w
   928  05D8  00F0               	movwf	data_0@index_0
   929  05D9  087C               	movf	??_set_clock+1,w
   930  05DA  00F1               	movwf	data_0@index_0+1
   931  05DB  3185  254C  3185   	fcall	_data_0
   932  05DE                     l970:
   933                           
   934                           ;ex_5-2.c: 105:     clk0_pulse();
   935  05DE  3185  252C  3185   	fcall	_clk0_pulse
   936  05E1                     l972:
   937                           
   938                           ;ex_5-2.c: 107:     data_0(min_dis1);
   939  05E1  0020               	movlb	0	; select bank0
   940  05E2  0820               	movf	set_clock@min_dis1,w
   941  05E3  00FB               	movwf	??_set_clock
   942  05E4  01FC               	clrf	??_set_clock+1
   943  05E5  087B               	movf	??_set_clock,w
   944  05E6  00F0               	movwf	data_0@index_0
   945  05E7  087C               	movf	??_set_clock+1,w
   946  05E8  00F1               	movwf	data_0@index_0+1
   947  05E9  3185  254C  3185   	fcall	_data_0
   948  05EC                     l974:
   949                           
   950                           ;ex_5-2.c: 108:     lat0_pulse();
   951  05EC  3185  2534  3185   	fcall	_lat0_pulse
   952  05EF                     l47:
   953  05EF  0008               	return
   954  05F0                     __end_of_set_clock:
   955                           
   956                           	psect	text2
   957  06A2                     __ptext2:	
   958 ;; *************** function _process_n_display *****************
   959 ;; Defined at:
   960 ;;		line 111 in file "ex_5-2.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  min_input       2    9[COMMON] int 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  sec_counter     2    8[BANK0 ] int 
   965 ;;  sec_digit2      2    6[BANK0 ] int 
   966 ;;  sec_digit1      2    4[BANK0 ] int 
   967 ;;  min_digit2      2    2[BANK0 ] int 
   968 ;;  min_digit1      2    0[BANK0 ] int 
   969 ;;  i               1    0        unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   979 ;;      Params:         2       0       0       0       0       0       0       0
   980 ;;      Locals:         0      10       0       0       0       0       0       0
   981 ;;      Temps:          1       0       0       0       0       0       0       0
   982 ;;      Totals:         3      10       0       0       0       0       0       0
   983 ;;Total ram usage:       13 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 2
   986 ;; This function calls:
   987 ;;		___awdiv
   988 ;;		___awmod
   989 ;;		_clk0_pulse
   990 ;;		_clk1_pulse
   991 ;;		_data_0
   992 ;;		_data_1
   993 ;;		_lat0_pulse
   994 ;;		_lat1_pulse
   995 ;; This function is called by:
   996 ;;		_main
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000  06A2                     _process_n_display:	
  1001                           ;psect for function _process_n_display
  1002                           
  1003  06A2                     l978:	
  1004                           ;incstack = 0
  1005                           ; Regs used in _process_n_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1006                           
  1007                           
  1008                           ;ex_5-2.c: 112:     int sec_counter=59;
  1009  06A2  303B               	movlw	59
  1010  06A3  0020               	movlb	0	; select bank0
  1011  06A4  00A8               	movwf	process_n_display@sec_counter
  1012  06A5  3000               	movlw	0
  1013  06A6  00A9               	movwf	process_n_display@sec_counter+1
  1014  06A7                     l980:
  1015                           
  1016                           ;ex_5-2.c: 114:     int min_digit1, min_digit2, sec_digit1, sec_digit2;;ex_5-2.c: 116:  
      +                             while(min_input>=0){
  1017  06A7  2F2D               	goto	l1010
  1018  06A8                     l982:
  1019                           
  1020                           ;ex_5-2.c: 118:         min_digit1 = min_input/10;
  1021  06A8  300A               	movlw	10
  1022  06A9  00F0               	movwf	___awdiv@divisor
  1023  06AA  3000               	movlw	0
  1024  06AB  00F1               	movwf	___awdiv@divisor+1
  1025  06AC  087A               	movf	process_n_display@min_input+1,w
  1026  06AD  00F3               	movwf	___awdiv@dividend+1
  1027  06AE  0879               	movf	process_n_display@min_input,w
  1028  06AF  00F2               	movwf	___awdiv@dividend
  1029  06B0  3186  2643  3186   	fcall	___awdiv
  1030  06B3  0871               	movf	?___awdiv+1,w
  1031  06B4  0020               	movlb	0	; select bank0
  1032  06B5  00A1               	movwf	process_n_display@min_digit1+1
  1033  06B6  0870               	movf	?___awdiv,w
  1034  06B7  00A0               	movwf	process_n_display@min_digit1
  1035                           
  1036                           ;ex_5-2.c: 119:         min_digit2 = min_input%10;
  1037  06B8  300A               	movlw	10
  1038  06B9  00F0               	movwf	___awmod@divisor
  1039  06BA  3000               	movlw	0
  1040  06BB  00F1               	movwf	___awmod@divisor+1
  1041  06BC  087A               	movf	process_n_display@min_input+1,w
  1042  06BD  00F3               	movwf	___awmod@dividend+1
  1043  06BE  0879               	movf	process_n_display@min_input,w
  1044  06BF  00F2               	movwf	___awmod@dividend
  1045  06C0  3185  25F0  3186   	fcall	___awmod
  1046  06C3  0871               	movf	?___awmod+1,w
  1047  06C4  0020               	movlb	0	; select bank0
  1048  06C5  00A3               	movwf	process_n_display@min_digit2+1
  1049  06C6  0870               	movf	?___awmod,w
  1050  06C7  00A2               	movwf	process_n_display@min_digit2
  1051  06C8                     l984:
  1052                           
  1053                           ;ex_5-2.c: 121:         data_0(min_digit2);
  1054  06C8  0823               	movf	process_n_display@min_digit2+1,w
  1055  06C9  00F1               	movwf	data_0@index_0+1
  1056  06CA  0822               	movf	process_n_display@min_digit2,w
  1057  06CB  00F0               	movwf	data_0@index_0
  1058  06CC  3185  254C  3186   	fcall	_data_0
  1059  06CF                     l986:
  1060                           
  1061                           ;ex_5-2.c: 122:         clk0_pulse();
  1062  06CF  3185  252C  3186   	fcall	_clk0_pulse
  1063  06D2                     l988:
  1064                           
  1065                           ;ex_5-2.c: 124:         data_0(min_digit1);
  1066  06D2  0020               	movlb	0	; select bank0
  1067  06D3  0821               	movf	process_n_display@min_digit1+1,w
  1068  06D4  00F1               	movwf	data_0@index_0+1
  1069  06D5  0820               	movf	process_n_display@min_digit1,w
  1070  06D6  00F0               	movwf	data_0@index_0
  1071  06D7  3185  254C  3186   	fcall	_data_0
  1072  06DA                     l990:
  1073                           
  1074                           ;ex_5-2.c: 125:         lat0_pulse();
  1075  06DA  3185  2534  3186   	fcall	_lat0_pulse
  1076                           
  1077                           ;ex_5-2.c: 128:         while(sec_counter>=0){
  1078  06DD  2F20               	goto	l1006
  1079  06DE                     l992:
  1080                           
  1081                           ;ex_5-2.c: 130:             sec_digit1 = sec_counter/10;
  1082  06DE  300A               	movlw	10
  1083  06DF  00F0               	movwf	___awdiv@divisor
  1084  06E0  3000               	movlw	0
  1085  06E1  00F1               	movwf	___awdiv@divisor+1
  1086  06E2  0829               	movf	process_n_display@sec_counter+1,w
  1087  06E3  00F3               	movwf	___awdiv@dividend+1
  1088  06E4  0828               	movf	process_n_display@sec_counter,w
  1089  06E5  00F2               	movwf	___awdiv@dividend
  1090  06E6  3186  2643  3186   	fcall	___awdiv
  1091  06E9  0871               	movf	?___awdiv+1,w
  1092  06EA  0020               	movlb	0	; select bank0
  1093  06EB  00A5               	movwf	process_n_display@sec_digit1+1
  1094  06EC  0870               	movf	?___awdiv,w
  1095  06ED  00A4               	movwf	process_n_display@sec_digit1
  1096                           
  1097                           ;ex_5-2.c: 131:             sec_digit2 = sec_counter%10;
  1098  06EE  300A               	movlw	10
  1099  06EF  00F0               	movwf	___awmod@divisor
  1100  06F0  3000               	movlw	0
  1101  06F1  00F1               	movwf	___awmod@divisor+1
  1102  06F2  0829               	movf	process_n_display@sec_counter+1,w
  1103  06F3  00F3               	movwf	___awmod@dividend+1
  1104  06F4  0828               	movf	process_n_display@sec_counter,w
  1105  06F5  00F2               	movwf	___awmod@dividend
  1106  06F6  3185  25F0  3186   	fcall	___awmod
  1107  06F9  0871               	movf	?___awmod+1,w
  1108  06FA  0020               	movlb	0	; select bank0
  1109  06FB  00A7               	movwf	process_n_display@sec_digit2+1
  1110  06FC  0870               	movf	?___awmod,w
  1111  06FD  00A6               	movwf	process_n_display@sec_digit2
  1112  06FE                     l994:
  1113                           
  1114                           ;ex_5-2.c: 133:             data_1(sec_digit2);
  1115  06FE  0827               	movf	process_n_display@sec_digit2+1,w
  1116  06FF  00F1               	movwf	data_1@index_1+1
  1117  0700  0826               	movf	process_n_display@sec_digit2,w
  1118  0701  00F0               	movwf	data_1@index_1
  1119  0702  3185  2580  3186   	fcall	_data_1
  1120  0705                     l996:
  1121                           
  1122                           ;ex_5-2.c: 134:             clk1_pulse();
  1123  0705  3185  2530  3186   	fcall	_clk1_pulse
  1124  0708                     l998:
  1125                           
  1126                           ;ex_5-2.c: 136:             data_1(sec_digit1);
  1127  0708  0020               	movlb	0	; select bank0
  1128  0709  0825               	movf	process_n_display@sec_digit1+1,w
  1129  070A  00F1               	movwf	data_1@index_1+1
  1130  070B  0824               	movf	process_n_display@sec_digit1,w
  1131  070C  00F0               	movwf	data_1@index_1
  1132  070D  3185  2580  3186   	fcall	_data_1
  1133  0710                     l1000:
  1134                           
  1135                           ;ex_5-2.c: 137:             lat1_pulse();
  1136  0710  3185  2538  3186   	fcall	_lat1_pulse
  1137  0713                     l1002:
  1138                           
  1139                           ;ex_5-2.c: 138:             _delay((unsigned long)((150)*(1000000/4000.0)));
  1140  0713  3031               	movlw	49
  1141  0714  00FB               	movwf	??_process_n_display
  1142  0715  30B2               	movlw	178
  1143  0716                     u847:
  1144  0716  0B89               	decfsz	9,f
  1145  0717  2F16               	goto	u847
  1146  0718  0BFB               	decfsz	??_process_n_display,f
  1147  0719  2F16               	goto	u847
  1148  071A  3200               	nop2
  1149  071B                     l1004:
  1150                           
  1151                           ;ex_5-2.c: 139:             sec_counter-=1;
  1152  071B  30FF               	movlw	255
  1153  071C  0020               	movlb	0	; select bank0
  1154  071D  07A8               	addwf	process_n_display@sec_counter,f
  1155  071E  30FF               	movlw	255
  1156  071F  3DA9               	addwfc	process_n_display@sec_counter+1,f
  1157  0720                     l1006:
  1158                           
  1159                           ;ex_5-2.c: 128:         while(sec_counter>=0){
  1160  0720  0020               	movlb	0	; select bank0
  1161  0721  1FA9               	btfss	process_n_display@sec_counter+1,7
  1162  0722  2F24               	goto	u661
  1163  0723  2F25               	goto	u660
  1164  0724                     u661:
  1165  0724  2EDE               	goto	l992
  1166  0725                     u660:
  1167  0725                     l1008:
  1168                           
  1169                           ;ex_5-2.c: 142:         min_input-=1;
  1170  0725  30FF               	movlw	255
  1171  0726  07F9               	addwf	process_n_display@min_input,f
  1172  0727  30FF               	movlw	255
  1173  0728  3DFA               	addwfc	process_n_display@min_input+1,f
  1174                           
  1175                           ;ex_5-2.c: 143:         sec_counter=59;
  1176  0729  303B               	movlw	59
  1177  072A  00A8               	movwf	process_n_display@sec_counter
  1178  072B  3000               	movlw	0
  1179  072C  00A9               	movwf	process_n_display@sec_counter+1
  1180  072D                     l1010:
  1181                           
  1182                           ;ex_5-2.c: 116:     while(min_input>=0){
  1183  072D  1FFA               	btfss	process_n_display@min_input+1,7
  1184  072E  2F30               	goto	u671
  1185  072F  2F31               	goto	u670
  1186  0730                     u671:
  1187  0730  2EA8               	goto	l982
  1188  0731                     u670:
  1189  0731                     l56:
  1190  0731  0008               	return
  1191  0732                     __end_of_process_n_display:
  1192                           
  1193                           	psect	text3
  1194  0538                     __ptext3:	
  1195 ;; *************** function _lat1_pulse *****************
  1196 ;; Defined at:
  1197 ;;		line 62 in file "ex_5-2.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		None
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1211 ;;      Params:         0       0       0       0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0
  1214 ;;      Totals:         0       0       0       0       0       0       0       0
  1215 ;;Total ram usage:        0 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_process_n_display
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225  0538                     _lat1_pulse:	
  1226                           ;psect for function _lat1_pulse
  1227                           
  1228  0538                     l846:	
  1229                           ;incstack = 0
  1230                           ; Regs used in _lat1_pulse: []
  1231                           
  1232                           
  1233                           ;ex_5-2.c: 63:     LATCbits.LATC7 = 1;
  1234  0538  0022               	movlb	2	; select bank2
  1235  0539  178E               	bsf	14,7	;volatile
  1236                           
  1237                           ;ex_5-2.c: 64:     LATCbits.LATC7 = 0;
  1238  053A  138E               	bcf	14,7	;volatile
  1239  053B                     l28:	
  1240                           ;ex_5-2.c: 65:     return;
  1241                           
  1242  053B  0008               	return
  1243  053C                     __end_of_lat1_pulse:
  1244                           
  1245                           	psect	text4
  1246  0534                     __ptext4:	
  1247 ;; *************** function _lat0_pulse *****************
  1248 ;; Defined at:
  1249 ;;		line 50 in file "ex_5-2.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		None
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1263 ;;      Params:         0       0       0       0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0
  1266 ;;      Totals:         0       0       0       0       0       0       0       0
  1267 ;;Total ram usage:        0 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; This function calls:
  1270 ;;		Nothing
  1271 ;; This function is called by:
  1272 ;;		_set_clock
  1273 ;;		_process_n_display
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277  0534                     _lat0_pulse:	
  1278                           ;psect for function _lat0_pulse
  1279                           
  1280  0534                     l844:	
  1281                           ;incstack = 0
  1282                           ; Regs used in _lat0_pulse: []
  1283                           
  1284                           
  1285                           ;ex_5-2.c: 51:     LATCbits.LATC2 = 1;
  1286  0534  0022               	movlb	2	; select bank2
  1287  0535  150E               	bsf	14,2	;volatile
  1288                           
  1289                           ;ex_5-2.c: 52:     LATCbits.LATC2 = 0;
  1290  0536  110E               	bcf	14,2	;volatile
  1291  0537                     l22:	
  1292                           ;ex_5-2.c: 53:     return;
  1293                           
  1294  0537  0008               	return
  1295  0538                     __end_of_lat0_pulse:
  1296                           
  1297                           	psect	text5
  1298  0580                     __ptext5:	
  1299 ;; *************** function _data_1 *****************
  1300 ;; Defined at:
  1301 ;;		line 84 in file "ex_5-2.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  index_1         2    0[COMMON] int 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  i               2    5[COMMON] int 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1315 ;;      Params:         2       0       0       0       0       0       0       0
  1316 ;;      Locals:         2       0       0       0       0       0       0       0
  1317 ;;      Temps:          3       0       0       0       0       0       0       0
  1318 ;;      Totals:         7       0       0       0       0       0       0       0
  1319 ;;Total ram usage:        7 bytes
  1320 ;; Hardware stack levels used: 1
  1321 ;; Hardware stack levels required when called: 1
  1322 ;; This function calls:
  1323 ;;		_clk1_pulse
  1324 ;; This function is called by:
  1325 ;;		_process_n_display
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330  0580                     _data_1:	
  1331                           ;psect for function _data_1
  1332                           
  1333  0580                     l864:	
  1334                           ;incstack = 0
  1335                           ; Regs used in _data_1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1336                           
  1337                           
  1338                           ;ex_5-2.c: 85:     int i=0;
  1339  0580  01F5               	clrf	data_1@i
  1340  0581  01F6               	clrf	data_1@i+1
  1341                           
  1342                           ;ex_5-2.c: 86:     for(i=0;i<=6;i++){
  1343  0582  01F5               	clrf	data_1@i
  1344  0583  01F6               	clrf	data_1@i+1
  1345  0584                     l870:
  1346                           
  1347                           ;ex_5-2.c: 87:         if((ComA_state[index_1]&(0b1000000>>i))==0){
  1348  0584  0870               	movf	data_1@index_1,w
  1349  0585  3E2D               	addlw	(low (_ComA_state| 0))& (0+255)
  1350  0586  0086               	movwf	6
  1351  0587  0187               	clrf	7
  1352  0588  0A75               	incf	data_1@i,w
  1353  0589  00F2               	movwf	??_data_1
  1354  058A  3040               	movlw	64
  1355  058B  00F3               	movwf	??_data_1+1
  1356  058C  3000               	movlw	0
  1357  058D  00F4               	movwf	??_data_1+2
  1358  058E  2D92               	goto	u444
  1359  058F                     u445:
  1360  058F  0D74               	rlf	??_data_1+2,w
  1361  0590  0CF4               	rrf	??_data_1+2,f
  1362  0591  0CF3               	rrf	??_data_1+1,f
  1363  0592                     u444:
  1364  0592  0BF2               	decfsz	??_data_1,f
  1365  0593  2D8F               	goto	u445
  1366  0594  0873               	movf	??_data_1+1,w
  1367  0595  0501               	andwf	1,w
  1368  0596  1D03               	btfss	3,2
  1369  0597  2D99               	goto	u451
  1370  0598  2D9A               	goto	u450
  1371  0599                     u451:
  1372  0599  2D9D               	goto	l42
  1373  059A                     u450:
  1374  059A                     l872:
  1375                           
  1376                           ;ex_5-2.c: 88:                 LATCbits.LATC6=0;
  1377  059A  0022               	movlb	2	; select bank2
  1378  059B  130E               	bcf	14,6	;volatile
  1379                           
  1380                           ;ex_5-2.c: 89:             } else{
  1381  059C  2D9F               	goto	l874
  1382  059D                     l42:
  1383                           
  1384                           ;ex_5-2.c: 90:                 LATCbits.LATC6=1;
  1385  059D  0022               	movlb	2	; select bank2
  1386  059E  170E               	bsf	14,6	;volatile
  1387  059F                     l874:
  1388                           
  1389                           ;ex_5-2.c: 92:             clk1_pulse();
  1390  059F  3185  2530  3185   	fcall	_clk1_pulse
  1391  05A2                     l876:
  1392                           
  1393                           ;ex_5-2.c: 93:     }
  1394  05A2  3001               	movlw	1
  1395  05A3  07F5               	addwf	data_1@i,f
  1396  05A4  3000               	movlw	0
  1397  05A5  3DF6               	addwfc	data_1@i+1,f
  1398  05A6                     l878:
  1399  05A6  0876               	movf	data_1@i+1,w
  1400  05A7  3A80               	xorlw	128
  1401  05A8  00F2               	movwf	??_data_1
  1402  05A9  3080               	movlw	128
  1403  05AA  0272               	subwf	??_data_1,w
  1404  05AB  1D03               	skipz
  1405  05AC  2DAF               	goto	u465
  1406  05AD  3007               	movlw	7
  1407  05AE  0275               	subwf	data_1@i,w
  1408  05AF                     u465:
  1409  05AF  1C03               	skipc
  1410  05B0  2DB2               	goto	u461
  1411  05B1  2DB3               	goto	u460
  1412  05B2                     u461:
  1413  05B2  2D84               	goto	l870
  1414  05B3                     u460:
  1415  05B3                     l44:
  1416  05B3  0008               	return
  1417  05B4                     __end_of_data_1:
  1418                           
  1419                           	psect	text6
  1420  0530                     __ptext6:	
  1421 ;; *************** function _clk1_pulse *****************
  1422 ;; Defined at:
  1423 ;;		line 56 in file "ex_5-2.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		None
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1437 ;;      Params:         0       0       0       0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0
  1440 ;;      Totals:         0       0       0       0       0       0       0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_data_1
  1447 ;;		_process_n_display
  1448 ;;		_main
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452  0530                     _clk1_pulse:	
  1453                           ;psect for function _clk1_pulse
  1454                           
  1455  0530                     l842:	
  1456                           ;incstack = 0
  1457                           ; Regs used in _clk1_pulse: []
  1458                           
  1459                           
  1460                           ;ex_5-2.c: 57:     LATCbits.LATC5 = 0;
  1461  0530  0022               	movlb	2	; select bank2
  1462  0531  128E               	bcf	14,5	;volatile
  1463                           
  1464                           ;ex_5-2.c: 58:     LATCbits.LATC5 = 1;
  1465  0532  168E               	bsf	14,5	;volatile
  1466  0533                     l25:	
  1467                           ;ex_5-2.c: 59:     return;
  1468                           
  1469  0533  0008               	return
  1470  0534                     __end_of_clk1_pulse:
  1471                           
  1472                           	psect	text7
  1473  054C                     __ptext7:	
  1474 ;; *************** function _data_0 *****************
  1475 ;; Defined at:
  1476 ;;		line 71 in file "ex_5-2.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  index_0         2    0[COMMON] int 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  i               2    5[COMMON] int 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1490 ;;      Params:         2       0       0       0       0       0       0       0
  1491 ;;      Locals:         2       0       0       0       0       0       0       0
  1492 ;;      Temps:          3       0       0       0       0       0       0       0
  1493 ;;      Totals:         7       0       0       0       0       0       0       0
  1494 ;;Total ram usage:        7 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 1
  1497 ;; This function calls:
  1498 ;;		_clk0_pulse
  1499 ;; This function is called by:
  1500 ;;		_set_clock
  1501 ;;		_process_n_display
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505  054C                     _data_0:	
  1506                           ;psect for function _data_0
  1507                           
  1508  054C                     l848:	
  1509                           ;incstack = 0
  1510                           ; Regs used in _data_0: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1511                           
  1512                           
  1513                           ;ex_5-2.c: 72:     int i=0;
  1514  054C  01F5               	clrf	data_0@i
  1515  054D  01F6               	clrf	data_0@i+1
  1516                           
  1517                           ;ex_5-2.c: 73:     for(i=0;i<=6;i++){
  1518  054E  01F5               	clrf	data_0@i
  1519  054F  01F6               	clrf	data_0@i+1
  1520  0550                     l854:
  1521                           
  1522                           ;ex_5-2.c: 74:         if((ComA_state[index_0]&(0b1000000>>i))==0){
  1523  0550  0870               	movf	data_0@index_0,w
  1524  0551  3E2D               	addlw	(low (_ComA_state| 0))& (0+255)
  1525  0552  0086               	movwf	6
  1526  0553  0187               	clrf	7
  1527  0554  0A75               	incf	data_0@i,w
  1528  0555  00F2               	movwf	??_data_0
  1529  0556  3040               	movlw	64
  1530  0557  00F3               	movwf	??_data_0+1
  1531  0558  3000               	movlw	0
  1532  0559  00F4               	movwf	??_data_0+2
  1533  055A  2D5E               	goto	u414
  1534  055B                     u415:
  1535  055B  0D74               	rlf	??_data_0+2,w
  1536  055C  0CF4               	rrf	??_data_0+2,f
  1537  055D  0CF3               	rrf	??_data_0+1,f
  1538  055E                     u414:
  1539  055E  0BF2               	decfsz	??_data_0,f
  1540  055F  2D5B               	goto	u415
  1541  0560  0873               	movf	??_data_0+1,w
  1542  0561  0501               	andwf	1,w
  1543  0562  1D03               	btfss	3,2
  1544  0563  2D65               	goto	u421
  1545  0564  2D66               	goto	u420
  1546  0565                     u421:
  1547  0565  2D69               	goto	l35
  1548  0566                     u420:
  1549  0566                     l856:
  1550                           
  1551                           ;ex_5-2.c: 75:                 LATCbits.LATC1=0;
  1552  0566  0022               	movlb	2	; select bank2
  1553  0567  108E               	bcf	14,1	;volatile
  1554                           
  1555                           ;ex_5-2.c: 76:             } else{
  1556  0568  2D6B               	goto	l858
  1557  0569                     l35:
  1558                           
  1559                           ;ex_5-2.c: 77:                 LATCbits.LATC1=1;
  1560  0569  0022               	movlb	2	; select bank2
  1561  056A  148E               	bsf	14,1	;volatile
  1562  056B                     l858:
  1563                           
  1564                           ;ex_5-2.c: 79:             clk0_pulse();
  1565  056B  3185  252C  3185   	fcall	_clk0_pulse
  1566  056E                     l860:
  1567                           
  1568                           ;ex_5-2.c: 80:     }
  1569  056E  3001               	movlw	1
  1570  056F  07F5               	addwf	data_0@i,f
  1571  0570  3000               	movlw	0
  1572  0571  3DF6               	addwfc	data_0@i+1,f
  1573  0572                     l862:
  1574  0572  0876               	movf	data_0@i+1,w
  1575  0573  3A80               	xorlw	128
  1576  0574  00F2               	movwf	??_data_0
  1577  0575  3080               	movlw	128
  1578  0576  0272               	subwf	??_data_0,w
  1579  0577  1D03               	skipz
  1580  0578  2D7B               	goto	u435
  1581  0579  3007               	movlw	7
  1582  057A  0275               	subwf	data_0@i,w
  1583  057B                     u435:
  1584  057B  1C03               	skipc
  1585  057C  2D7E               	goto	u431
  1586  057D  2D7F               	goto	u430
  1587  057E                     u431:
  1588  057E  2D50               	goto	l854
  1589  057F                     u430:
  1590  057F                     l37:
  1591  057F  0008               	return
  1592  0580                     __end_of_data_0:
  1593                           
  1594                           	psect	text8
  1595  052C                     __ptext8:	
  1596 ;; *************** function _clk0_pulse *****************
  1597 ;; Defined at:
  1598 ;;		line 44 in file "ex_5-2.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		None
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1612 ;;      Params:         0       0       0       0       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0
  1615 ;;      Totals:         0       0       0       0       0       0       0       0
  1616 ;;Total ram usage:        0 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_data_0
  1622 ;;		_set_clock
  1623 ;;		_process_n_display
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627  052C                     _clk0_pulse:	
  1628                           ;psect for function _clk0_pulse
  1629                           
  1630  052C                     l840:	
  1631                           ;incstack = 0
  1632                           ; Regs used in _clk0_pulse: []
  1633                           
  1634                           
  1635                           ;ex_5-2.c: 45:     LATCbits.LATC0 = 0;
  1636  052C  0022               	movlb	2	; select bank2
  1637  052D  100E               	bcf	14,0	;volatile
  1638                           
  1639                           ;ex_5-2.c: 46:     LATCbits.LATC0 = 1;
  1640  052E  140E               	bsf	14,0	;volatile
  1641  052F                     l19:	
  1642                           ;ex_5-2.c: 47:     return;
  1643                           
  1644  052F  0008               	return
  1645  0530                     __end_of_clk0_pulse:
  1646                           
  1647                           	psect	text9
  1648  05F0                     __ptext9:	
  1649 ;; *************** function ___awmod *****************
  1650 ;; Defined at:
  1651 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  divisor         2    0[COMMON] int 
  1654 ;;  dividend        2    2[COMMON] int 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  sign            1    6[COMMON] unsigned char 
  1657 ;;  counter         1    5[COMMON] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  2    0[COMMON] int 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1667 ;;      Params:         4       0       0       0       0       0       0       0
  1668 ;;      Locals:         2       0       0       0       0       0       0       0
  1669 ;;      Temps:          1       0       0       0       0       0       0       0
  1670 ;;      Totals:         7       0       0       0       0       0       0       0
  1671 ;;Total ram usage:        7 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_set_clock
  1677 ;;		_process_n_display
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681  05F0                     ___awmod:	
  1682                           ;psect for function ___awmod
  1683                           
  1684  05F0                     l924:	
  1685                           ;incstack = 0
  1686                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1687                           
  1688  05F0  01F6               	clrf	___awmod@sign
  1689  05F1                     l926:
  1690  05F1  1FF3               	btfss	___awmod@dividend+1,7
  1691  05F2  2DF4               	goto	u571
  1692  05F3  2DF5               	goto	u570
  1693  05F4                     u571:
  1694  05F4  2DFC               	goto	l932
  1695  05F5                     u570:
  1696  05F5                     l928:
  1697  05F5  09F2               	comf	___awmod@dividend,f
  1698  05F6  09F3               	comf	___awmod@dividend+1,f
  1699  05F7  0AF2               	incf	___awmod@dividend,f
  1700  05F8  1903               	skipnz
  1701  05F9  0AF3               	incf	___awmod@dividend+1,f
  1702  05FA                     l930:
  1703  05FA  01F6               	clrf	___awmod@sign
  1704  05FB  0AF6               	incf	___awmod@sign,f
  1705  05FC                     l932:
  1706  05FC  1FF1               	btfss	___awmod@divisor+1,7
  1707  05FD  2DFF               	goto	u581
  1708  05FE  2E00               	goto	u580
  1709  05FF                     u581:
  1710  05FF  2E05               	goto	l936
  1711  0600                     u580:
  1712  0600                     l934:
  1713  0600  09F0               	comf	___awmod@divisor,f
  1714  0601  09F1               	comf	___awmod@divisor+1,f
  1715  0602  0AF0               	incf	___awmod@divisor,f
  1716  0603  1903               	skipnz
  1717  0604  0AF1               	incf	___awmod@divisor+1,f
  1718  0605                     l936:
  1719  0605  0870               	movf	___awmod@divisor,w
  1720  0606  0471               	iorwf	___awmod@divisor+1,w
  1721  0607  1903               	btfsc	3,2
  1722  0608  2E0A               	goto	u591
  1723  0609  2E0B               	goto	u590
  1724  060A                     u591:
  1725  060A  2E34               	goto	l954
  1726  060B                     u590:
  1727  060B                     l938:
  1728  060B  01F5               	clrf	___awmod@counter
  1729  060C  0AF5               	incf	___awmod@counter,f
  1730  060D  2E17               	goto	l944
  1731  060E                     l940:
  1732  060E  3001               	movlw	1
  1733  060F                     u605:
  1734  060F  35F0               	lslf	___awmod@divisor,f
  1735  0610  0DF1               	rlf	___awmod@divisor+1,f
  1736  0611  0B89               	decfsz	9,f
  1737  0612  2E0F               	goto	u605
  1738  0613                     l942:
  1739  0613  3001               	movlw	1
  1740  0614  00F4               	movwf	??___awmod
  1741  0615  0874               	movf	??___awmod,w
  1742  0616  07F5               	addwf	___awmod@counter,f
  1743  0617                     l944:
  1744  0617  1FF1               	btfss	___awmod@divisor+1,7
  1745  0618  2E1A               	goto	u611
  1746  0619  2E1B               	goto	u610
  1747  061A                     u611:
  1748  061A  2E0E               	goto	l940
  1749  061B                     u610:
  1750  061B                     l946:
  1751  061B  0871               	movf	___awmod@divisor+1,w
  1752  061C  0273               	subwf	___awmod@dividend+1,w
  1753  061D  1D03               	skipz
  1754  061E  2E21               	goto	u625
  1755  061F  0870               	movf	___awmod@divisor,w
  1756  0620  0272               	subwf	___awmod@dividend,w
  1757  0621                     u625:
  1758  0621  1C03               	skipc
  1759  0622  2E24               	goto	u621
  1760  0623  2E25               	goto	u620
  1761  0624                     u621:
  1762  0624  2E29               	goto	l950
  1763  0625                     u620:
  1764  0625                     l948:
  1765  0625  0870               	movf	___awmod@divisor,w
  1766  0626  02F2               	subwf	___awmod@dividend,f
  1767  0627  0871               	movf	___awmod@divisor+1,w
  1768  0628  3BF3               	subwfb	___awmod@dividend+1,f
  1769  0629                     l950:
  1770  0629  3001               	movlw	1
  1771  062A                     u635:
  1772  062A  36F1               	lsrf	___awmod@divisor+1,f
  1773  062B  0CF0               	rrf	___awmod@divisor,f
  1774  062C  0B89               	decfsz	9,f
  1775  062D  2E2A               	goto	u635
  1776  062E                     l952:
  1777  062E  3001               	movlw	1
  1778  062F  02F5               	subwf	___awmod@counter,f
  1779  0630  1D03               	btfss	3,2
  1780  0631  2E33               	goto	u641
  1781  0632  2E34               	goto	u640
  1782  0633                     u641:
  1783  0633  2E1B               	goto	l946
  1784  0634                     u640:
  1785  0634                     l954:
  1786  0634  0876               	movf	___awmod@sign,w
  1787  0635  1903               	btfsc	3,2
  1788  0636  2E38               	goto	u651
  1789  0637  2E39               	goto	u650
  1790  0638                     u651:
  1791  0638  2E3E               	goto	l958
  1792  0639                     u650:
  1793  0639                     l956:
  1794  0639  09F2               	comf	___awmod@dividend,f
  1795  063A  09F3               	comf	___awmod@dividend+1,f
  1796  063B  0AF2               	incf	___awmod@dividend,f
  1797  063C  1903               	skipnz
  1798  063D  0AF3               	incf	___awmod@dividend+1,f
  1799  063E                     l958:
  1800  063E  0873               	movf	___awmod@dividend+1,w
  1801  063F  00F1               	movwf	?___awmod+1
  1802  0640  0872               	movf	___awmod@dividend,w
  1803  0641  00F0               	movwf	?___awmod
  1804  0642                     l308:
  1805  0642  0008               	return
  1806  0643                     __end_of___awmod:
  1807                           
  1808                           	psect	text10
  1809  0643                     __ptext10:	
  1810 ;; *************** function ___awdiv *****************
  1811 ;; Defined at:
  1812 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  divisor         2    0[COMMON] int 
  1815 ;;  dividend        2    2[COMMON] int 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  quotient        2    7[COMMON] int 
  1818 ;;  sign            1    6[COMMON] unsigned char 
  1819 ;;  counter         1    5[COMMON] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  2    0[COMMON] int 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1829 ;;      Params:         4       0       0       0       0       0       0       0
  1830 ;;      Locals:         4       0       0       0       0       0       0       0
  1831 ;;      Temps:          1       0       0       0       0       0       0       0
  1832 ;;      Totals:         9       0       0       0       0       0       0       0
  1833 ;;Total ram usage:        9 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		_set_clock
  1839 ;;		_process_n_display
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843  0643                     ___awdiv:	
  1844                           ;psect for function ___awdiv
  1845                           
  1846  0643                     l880:	
  1847                           ;incstack = 0
  1848                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1849                           
  1850  0643  01F6               	clrf	___awdiv@sign
  1851  0644                     l882:
  1852  0644  1FF1               	btfss	___awdiv@divisor+1,7
  1853  0645  2E47               	goto	u471
  1854  0646  2E48               	goto	u470
  1855  0647                     u471:
  1856  0647  2E4F               	goto	l888
  1857  0648                     u470:
  1858  0648                     l884:
  1859  0648  09F0               	comf	___awdiv@divisor,f
  1860  0649  09F1               	comf	___awdiv@divisor+1,f
  1861  064A  0AF0               	incf	___awdiv@divisor,f
  1862  064B  1903               	skipnz
  1863  064C  0AF1               	incf	___awdiv@divisor+1,f
  1864  064D                     l886:
  1865  064D  01F6               	clrf	___awdiv@sign
  1866  064E  0AF6               	incf	___awdiv@sign,f
  1867  064F                     l888:
  1868  064F  1FF3               	btfss	___awdiv@dividend+1,7
  1869  0650  2E52               	goto	u481
  1870  0651  2E53               	goto	u480
  1871  0652                     u481:
  1872  0652  2E5C               	goto	l894
  1873  0653                     u480:
  1874  0653                     l890:
  1875  0653  09F2               	comf	___awdiv@dividend,f
  1876  0654  09F3               	comf	___awdiv@dividend+1,f
  1877  0655  0AF2               	incf	___awdiv@dividend,f
  1878  0656  1903               	skipnz
  1879  0657  0AF3               	incf	___awdiv@dividend+1,f
  1880  0658                     l892:
  1881  0658  3001               	movlw	1
  1882  0659  00F4               	movwf	??___awdiv
  1883  065A  0874               	movf	??___awdiv,w
  1884  065B  06F6               	xorwf	___awdiv@sign,f
  1885  065C                     l894:
  1886  065C  01F7               	clrf	___awdiv@quotient
  1887  065D  01F8               	clrf	___awdiv@quotient+1
  1888  065E                     l896:
  1889  065E  0870               	movf	___awdiv@divisor,w
  1890  065F  0471               	iorwf	___awdiv@divisor+1,w
  1891  0660  1903               	btfsc	3,2
  1892  0661  2E63               	goto	u491
  1893  0662  2E64               	goto	u490
  1894  0663                     u491:
  1895  0663  2E93               	goto	l916
  1896  0664                     u490:
  1897  0664                     l898:
  1898  0664  01F5               	clrf	___awdiv@counter
  1899  0665  0AF5               	incf	___awdiv@counter,f
  1900  0666  2E70               	goto	l904
  1901  0667                     l900:
  1902  0667  3001               	movlw	1
  1903  0668                     u505:
  1904  0668  35F0               	lslf	___awdiv@divisor,f
  1905  0669  0DF1               	rlf	___awdiv@divisor+1,f
  1906  066A  0B89               	decfsz	9,f
  1907  066B  2E68               	goto	u505
  1908  066C                     l902:
  1909  066C  3001               	movlw	1
  1910  066D  00F4               	movwf	??___awdiv
  1911  066E  0874               	movf	??___awdiv,w
  1912  066F  07F5               	addwf	___awdiv@counter,f
  1913  0670                     l904:
  1914  0670  1FF1               	btfss	___awdiv@divisor+1,7
  1915  0671  2E73               	goto	u511
  1916  0672  2E74               	goto	u510
  1917  0673                     u511:
  1918  0673  2E67               	goto	l900
  1919  0674                     u510:
  1920  0674                     l906:
  1921  0674  3001               	movlw	1
  1922  0675                     u525:
  1923  0675  35F7               	lslf	___awdiv@quotient,f
  1924  0676  0DF8               	rlf	___awdiv@quotient+1,f
  1925  0677  0B89               	decfsz	9,f
  1926  0678  2E75               	goto	u525
  1927  0679  0871               	movf	___awdiv@divisor+1,w
  1928  067A  0273               	subwf	___awdiv@dividend+1,w
  1929  067B  1D03               	skipz
  1930  067C  2E7F               	goto	u535
  1931  067D  0870               	movf	___awdiv@divisor,w
  1932  067E  0272               	subwf	___awdiv@dividend,w
  1933  067F                     u535:
  1934  067F  1C03               	skipc
  1935  0680  2E82               	goto	u531
  1936  0681  2E83               	goto	u530
  1937  0682                     u531:
  1938  0682  2E88               	goto	l912
  1939  0683                     u530:
  1940  0683                     l908:
  1941  0683  0870               	movf	___awdiv@divisor,w
  1942  0684  02F2               	subwf	___awdiv@dividend,f
  1943  0685  0871               	movf	___awdiv@divisor+1,w
  1944  0686  3BF3               	subwfb	___awdiv@dividend+1,f
  1945  0687                     l910:
  1946  0687  1477               	bsf	___awdiv@quotient,0
  1947  0688                     l912:
  1948  0688  3001               	movlw	1
  1949  0689                     u545:
  1950  0689  36F1               	lsrf	___awdiv@divisor+1,f
  1951  068A  0CF0               	rrf	___awdiv@divisor,f
  1952  068B  0B89               	decfsz	9,f
  1953  068C  2E89               	goto	u545
  1954  068D                     l914:
  1955  068D  3001               	movlw	1
  1956  068E  02F5               	subwf	___awdiv@counter,f
  1957  068F  1D03               	btfss	3,2
  1958  0690  2E92               	goto	u551
  1959  0691  2E93               	goto	u550
  1960  0692                     u551:
  1961  0692  2E74               	goto	l906
  1962  0693                     u550:
  1963  0693                     l916:
  1964  0693  0876               	movf	___awdiv@sign,w
  1965  0694  1903               	btfsc	3,2
  1966  0695  2E97               	goto	u561
  1967  0696  2E98               	goto	u560
  1968  0697                     u561:
  1969  0697  2E9D               	goto	l920
  1970  0698                     u560:
  1971  0698                     l918:
  1972  0698  09F7               	comf	___awdiv@quotient,f
  1973  0699  09F8               	comf	___awdiv@quotient+1,f
  1974  069A  0AF7               	incf	___awdiv@quotient,f
  1975  069B  1903               	skipnz
  1976  069C  0AF8               	incf	___awdiv@quotient+1,f
  1977  069D                     l920:
  1978  069D  0878               	movf	___awdiv@quotient+1,w
  1979  069E  00F1               	movwf	?___awdiv+1
  1980  069F  0877               	movf	___awdiv@quotient,w
  1981  06A0  00F0               	movwf	?___awdiv
  1982  06A1                     l295:
  1983  06A1  0008               	return
  1984  06A2                     __end_of___awdiv:
  1985  007E                     btemp	set	126	;btemp
  1986  007E                     wtemp0	set	126
  1987                           
  1988                           	psect	idloc
  1989                           
  1990                           ;Config register IDLOC0 @ 0x8000
  1991                           ;	unspecified, using default values
  1992  8000                     	org	32768
  1993  8000  3FFF               	dw	16383
  1994                           
  1995                           ;Config register IDLOC1 @ 0x8001
  1996                           ;	unspecified, using default values
  1997  8001                     	org	32769
  1998  8001  3FFF               	dw	16383
  1999                           
  2000                           ;Config register IDLOC2 @ 0x8002
  2001                           ;	unspecified, using default values
  2002  8002                     	org	32770
  2003  8002  3FFF               	dw	16383
  2004                           
  2005                           ;Config register IDLOC3 @ 0x8003
  2006                           ;	unspecified, using default values
  2007  8003                     	org	32771
  2008  8003  3FFF               	dw	16383
  2009                           
  2010                           	psect	config
  2011                           
  2012                           ;Config register CONFIG1 @ 0x8007
  2013                           ;	Oscillator Selection Bits
  2014                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2015                           ;	Watchdog Timer Enable
  2016                           ;	WDTE = OFF, WDT disabled
  2017                           ;	Power-up Timer Enable
  2018                           ;	PWRTE = OFF, PWRT disabled
  2019                           ;	MCLR Pin Function Select
  2020                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  2021                           ;	Flash Program Memory Code Protection
  2022                           ;	CP = OFF, Program memory code protection is disabled
  2023                           ;	Brown-out Reset Enable
  2024                           ;	BOREN = OFF, Brown-out Reset disabled
  2025                           ;	Clock Out Enable
  2026                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2027                           ;	Internal/External Switchover Mode
  2028                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  2029                           ;	Fail-Safe Clock Monitor Enable
  2030                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2031  8007                     	org	32775
  2032  8007  09A4               	dw	2468
  2033                           
  2034                           ;Config register CONFIG2 @ 0x8008
  2035                           ;	Flash Memory Self-Write Protection
  2036                           ;	WRT = OFF, Write protection off
  2037                           ;	Stack Overflow/Underflow Reset Enable
  2038                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  2039                           ;	Brown-out Reset Voltage Selection
  2040                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2041                           ;	Low-Power Brown Out Reset
  2042                           ;	LPBOR = OFF, Low-Power BOR is disabled
  2043                           ;	Low-Voltage Programming Enable
  2044                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2045  8008                     	org	32776
  2046  8008  1DFF               	dw	7679

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      23
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_set_clock
    _set_clock->___awdiv
    _process_n_display->___awdiv

Critical Paths under _main in BANK0

    _main->_process_n_display

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    5452
                                             13 COMMON     1     1      0
                                             10 BANK0      3     3      0
                         _clk1_pulse
                             _data_1
                         _lat1_pulse
                  _process_n_display
                          _set_clock
 ---------------------------------------------------------------------------------
 (1) _set_clock                                            8     6      2    2222
                                              9 COMMON     4     2      2
                                              0 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                         _clk0_pulse
                             _data_0
                         _lat0_pulse
 ---------------------------------------------------------------------------------
 (1) _process_n_display                                   14    12      2    2603
                                              9 COMMON     3     1      2
                                              0 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                         _clk0_pulse
                         _clk1_pulse
                             _data_0
                             _data_1
                         _lat0_pulse
                         _lat1_pulse
 ---------------------------------------------------------------------------------
 (2) _lat1_pulse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lat0_pulse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _data_1                                               7     5      2     395
                                              0 COMMON     7     5      2
                         _clk1_pulse
 ---------------------------------------------------------------------------------
 (3) _clk1_pulse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _data_0                                               7     5      2     395
                                              0 COMMON     7     5      2
                         _clk0_pulse
 ---------------------------------------------------------------------------------
 (3) _clk0_pulse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clk1_pulse
   _data_1
     _clk1_pulse
   _lat1_pulse
   _process_n_display
     ___awdiv
     ___awmod
     _clk0_pulse
     _clk1_pulse
     _data_0
       _clk0_pulse
     _data_1
     _lat0_pulse
     _lat1_pulse
   _set_clock
     ___awdiv
     ___awmod
     _clk0_pulse
     _data_0
     _lat0_pulse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      25       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      D      17       6       28.7%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      25      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 31 21:27:40 2022

                          l22 0537                            l25 0533                            l42 059D  
                          l19 052F                            l35 0569                            l44 05B3  
                          l28 053B                            l37 057F                            l47 05EF  
                          l56 0731                  ___awdiv@sign 0076                           l308 0642  
                         l295 06A1                           l900 0667                           l910 0687  
                         l902 066C                           l920 069D                           l912 0688  
                         l904 0670                           l840 052C                           l914 068D  
                         l906 0674                           l930 05FA                           l842 0530  
                         l908 0683                           l916 0693                           l940 060E  
                         l932 05FC                           l924 05F0                           l860 056E  
                         l844 0534                           l918 0698                           l950 0629  
                         l942 0613                           l934 0600                           l926 05F1  
                         l862 0572                           l854 0550                           l870 0584  
                         l846 0538                           l880 0643                           l952 062E  
                         l944 0617                           l936 0605                           l928 05F5  
                         l856 0566                           l848 054C                           l872 059A  
                         l864 0580                           l890 0653                           l882 0644  
                         l946 061B                           l938 060B                           l954 0634  
                         l858 056B                           l874 059F                           l970 05DE  
                         l962 05B4                           l892 0658                           l884 0648  
                         l956 0639                           l948 0625                           l876 05A2  
                         l980 06A7                           l972 05E1                           l964 05B4  
                         l894 065C                           l886 064D                           l958 063E  
                         l878 05A6                           l990 06DA                           l982 06A8  
                         l974 05EC                           l966 05C4                           l896 065E  
                         l888 064F                           l992 06DE                           l984 06C8  
                         l968 05D4                           l898 0664                           l994 06FE  
                         l986 06CF                           l978 06A2                           l996 0705  
                         l988 06D2                           l998 0708                           u420 0566  
                         u421 0565                           u510 0674                           u430 057F  
                         u414 055E                           u511 0673                           u431 057E  
                         u415 055B                           u505 0668                           u530 0683  
                         u610 061B                           u450 059A                           u531 0682  
                         u611 061A                           u435 057B                           u451 0599  
                         u620 0625                           u460 05B3                           u444 0592  
                         u700 0780                           u525 0675                           u621 0624  
                         u605 060F                           u461 05B2                           u445 058F  
                         u701 077F                           u550 0693                           u470 0648  
                         u710 0790                           u551 0692                           u535 067F  
                         u471 0647                           u711 078F                           u560 0698  
                         u480 0653                           u640 0634                           u800 07DF  
                         u720 079D                           u561 0697                           u545 0689  
                         u481 0652                           u641 0633                           u625 0621  
                         u465 05AF                           u801 07DE                           u721 079C  
                         u705 077C                           u490 0664                           u650 0639  
                         u570 05F5                           u730 07A5                           u491 0663  
                         u651 0638                           u635 062A                           u571 05F4  
                         u731 07A4                           u580 0600                           u660 0725  
                         u740 07B3                           u581 05FF                           u661 0724  
                         u741 07B2                           u590 060B                           u670 0731  
                         u750 07B8                           u591 060A                           u671 0730  
                         u751 07B7                           u760 07C5                           u680 0762  
                         u761 07C4                           u817 0765                           u681 0761  
                         u770 07CA                           u690 076F                           u771 07C9  
                         u827 0793                           u691 076E                           u780 07D1  
                         u781 07D0                           u837 07BB                           u790 07D5  
                         u847 0716                           u791 07D4                  ___awmod@sign 0076  
                         wreg 0009                          l1000 0710                          l1002 0713  
                        l1010 072D                          l1004 071B                          l1020 0751  
                        l1012 0732                          l1006 0720                          l1030 076A  
                        l1022 0754                          l1014 073C                          l1008 0725  
                        l1040 0790                          l1032 076F                          l1024 075A  
                        l1016 0745                          l1050 07A7                          l1042 0798  
                        l1034 0780                          l1026 075D                          l1018 074B  
                        l1060 07C5                          l1044 079D                          l1052 07AE  
                        l1036 0783                          l1028 0762                          l1070 07D9  
                        l1062 07CA                          l1054 07B3                          l1046 07A1  
                        l1038 078B                          l1072 07DF                          l1056 07B8  
                        l1064 07CC                          l1048 07A5                          l1074 07E3  
                        l1066 07D1                          l1058 07C0                          l1076 07EA  
                        l1068 07D5                          l1078 07ED                 data_0@index_0 0070  
                        _LATC 010E                 data_1@index_1 0070                          _main 0732  
                  _ComA_state 002D                          fsr0h 0005                          fsr1h 0007  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                          start 0002                         ?_main 0070  
             __end_of___awdiv 06A2               __end_of___awmod 0643               ___awdiv@divisor 0070  
             ___awdiv@counter 0075                         status 0003                         wtemp0 007E  
             __initialization 07F1                  __end_of_main 07F1                        ??_main 007D  
            ___awdiv@dividend 0072                        _ANSELB 018D                        _ANSELC 018E  
                      _data_0 054C                        _data_1 0580                     ??___awdiv 0074  
                   ??___awmod 0074              ___awdiv@quotient 0077               ___awmod@divisor 0070  
             ___awmod@counter 0075       __end_of__initialization 07FD                __pcstackCOMMON 0070  
                __pidataBANK0 0542                    _clk0_pulse 052C                    _clk1_pulse 0530  
                  __pmaintext 0732                    _lat0_pulse 0534                    _lat1_pulse 0538  
                     ?_data_0 0070                       ?_data_1 0070  process_n_display@sec_counter 0028  
                     ___awdiv 0643                       ___awmod 05F0                       __ptext1 05B4  
                     __ptext2 06A2                       __ptext3 0538                       __ptext4 0534  
                     __ptext5 0580                       __ptext6 0530                       __ptext7 054C  
                     __ptext8 052C                       __ptext9 05F0                       data_0@i 0075  
                     data_1@i 0075                   ?_clk0_pulse 0070                   ?_clk1_pulse 0070  
            ___awmod@dividend 0072    process_n_display@min_input 0079          end_of_initialization 07FD  
                     init_ram 053C             __end_of_set_clock 05F0                       initloop 053D  
            set_clock@min_set 0079                   ?_lat0_pulse 0070                   ?_lat1_pulse 0070  
                   _PORTBbits 000D                     _TRISBbits 008D                     _TRISCbits 008E  
              __end_of_data_0 0580                __end_of_data_1 05B4           start_initialization 07F1  
                    ??_data_0 0072                      ??_data_1 0072                   __pdataBANK0 002D  
                   ___latbits 0002                 __pcstackBANK0 0020                      ?___awdiv 0070  
                    ?___awmod 0070                  ??_clk0_pulse 0070                  ??_clk1_pulse 0070  
                    _LATCbits 010E            __end_of_clk0_pulse 0530                     _set_clock 05B4  
          __end_of_clk1_pulse 0534                  ??_lat0_pulse 0070                  ??_lat1_pulse 0070  
           _process_n_display 06A2               main@min_counter 002B            ?_process_n_display 0079  
          __end_of_lat0_pulse 0538            __end_of_lat1_pulse 053C           ??_process_n_display 007B  
                  ?_set_clock 0079     __end_of_process_n_display 0732                      __ptext10 0643  
 process_n_display@min_digit1 0020   process_n_display@min_digit2 0022   process_n_display@sec_digit1 0024  
 process_n_display@sec_digit2 0026                   ??_set_clock 007B             set_clock@min_dis1 0020  
           set_clock@min_dis2 0021               main@start_state 002A  
