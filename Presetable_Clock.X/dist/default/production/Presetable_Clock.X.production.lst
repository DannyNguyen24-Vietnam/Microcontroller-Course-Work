

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 10 10:57:56 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F1509 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0113                     	;# 
   107  0114                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0117                     	;# 
   111  0118                     	;# 
   112  0119                     	;# 
   113  011D                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  018E                     	;# 
   117  0191                     	;# 
   118  0191                     	;# 
   119  0192                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  0197                     	;# 
   126  0199                     	;# 
   127  019A                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  020C                     	;# 
   135  020D                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0391                     	;# 
   152  0392                     	;# 
   153  0393                     	;# 
   154  0394                     	;# 
   155  0395                     	;# 
   156  0396                     	;# 
   157  0498                     	;# 
   158  0498                     	;# 
   159  0499                     	;# 
   160  049A                     	;# 
   161  049B                     	;# 
   162  049B                     	;# 
   163  049C                     	;# 
   164  049D                     	;# 
   165  049E                     	;# 
   166  049F                     	;# 
   167  0611                     	;# 
   168  0612                     	;# 
   169  0613                     	;# 
   170  0613                     	;# 
   171  0614                     	;# 
   172  0615                     	;# 
   173  0616                     	;# 
   174  0616                     	;# 
   175  0617                     	;# 
   176  0618                     	;# 
   177  0619                     	;# 
   178  0619                     	;# 
   179  061A                     	;# 
   180  061B                     	;# 
   181  061C                     	;# 
   182  061C                     	;# 
   183  0691                     	;# 
   184  0692                     	;# 
   185  0693                     	;# 
   186  0694                     	;# 
   187  0695                     	;# 
   188  0F0F                     	;# 
   189  0F10                     	;# 
   190  0F11                     	;# 
   191  0F12                     	;# 
   192  0F13                     	;# 
   193  0F14                     	;# 
   194  0F15                     	;# 
   195  0F16                     	;# 
   196  0F17                     	;# 
   197  0F18                     	;# 
   198  0F19                     	;# 
   199  0F1A                     	;# 
   200  0F1B                     	;# 
   201  0F1C                     	;# 
   202  0F1D                     	;# 
   203  0F1E                     	;# 
   204  0F1F                     	;# 
   205  0F20                     	;# 
   206  0F21                     	;# 
   207  0F22                     	;# 
   208  0F23                     	;# 
   209  0F24                     	;# 
   210  0F25                     	;# 
   211  0F26                     	;# 
   212  0F27                     	;# 
   213  0F28                     	;# 
   214  0F29                     	;# 
   215  0F2A                     	;# 
   216  0F2B                     	;# 
   217  0F2C                     	;# 
   218  0F2D                     	;# 
   219  0F2E                     	;# 
   220  0F2F                     	;# 
   221  0F8C                     	;# 
   222  0F8D                     	;# 
   223  0F91                     	;# 
   224  0F95                     	;# 
   225  0F96                     	;# 
   226  0F97                     	;# 
   227  0F9C                     	;# 
   228  0F9D                     	;# 
   229  0F9E                     	;# 
   230  0FE3                     	;# 
   231  0FE4                     	;# 
   232  0FE5                     	;# 
   233  0FE6                     	;# 
   234  0FE7                     	;# 
   235  0FE8                     	;# 
   236  0FE9                     	;# 
   237  0FEA                     	;# 
   238  0FEB                     	;# 
   239  0FED                     	;# 
   240  0FEE                     	;# 
   241  0FEF                     	;# 
   242  000D                     _PORTBbits	set	13
   243  0095                     _OPTION_REGbits	set	149
   244  008D                     _TRISBbits	set	141
   245  008E                     _TRISC	set	142
   246  010E                     _LATCbits	set	270
   247  018D                     _ANSELB	set	397
   248  018E                     _ANSELC	set	398
   249  020D                     _WPUBbits	set	525
   250                           
   251                           	psect	cinit
   252  07FD                     start_initialization:	
   253                           ; #config settings
   254                           
   255  07FD                     __initialization:
   256  07FD                     end_of_initialization:	
   257                           ;End of C runtime variable initialization code
   258                           
   259  07FD                     __end_of__initialization:
   260  07FD  0020               	movlb	0
   261  07FE  3186  2EA1         	ljmp	_main	;jump to C main() function
   262                           
   263                           	psect	cstackCOMMON
   264  0070                     __pcstackCOMMON:
   265  0070                     ?_pulse_gen_C0:
   266  0070                     ?_latch_gen_C2:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ??_latch_gen_C2:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_pulse_gen_C3:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_latch_gen_C5:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ??_latch_gen_C5:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ?_main:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?___awdiv:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?___awmod:	
   288                           ; 2 bytes @ 0x0
   289                           
   290  0070                     pulse_gen_C0@n:	
   291                           ; 2 bytes @ 0x0
   292                           
   293  0070                     pulse_gen_C3@n_1:	
   294                           ; 2 bytes @ 0x0
   295                           
   296  0070                     ___awdiv@divisor:	
   297                           ; 2 bytes @ 0x0
   298                           
   299  0070                     ___awmod@divisor:	
   300                           ; 2 bytes @ 0x0
   301                           
   302                           
   303                           ; 2 bytes @ 0x0
   304  0070                     	ds	2
   305  0072                     ??_pulse_gen_C0:
   306  0072                     ??_pulse_gen_C3:	
   307                           ; 1 bytes @ 0x2
   308                           
   309  0072                     ___awdiv@dividend:	
   310                           ; 1 bytes @ 0x2
   311                           
   312  0072                     ___awmod@dividend:	
   313                           ; 2 bytes @ 0x2
   314                           
   315                           
   316                           ; 2 bytes @ 0x2
   317  0072                     	ds	2
   318  0074                     ??___awdiv:
   319  0074                     ??___awmod:	
   320                           ; 1 bytes @ 0x4
   321                           
   322                           
   323                           ; 1 bytes @ 0x4
   324  0074                     	ds	1
   325  0075                     ___awdiv@counter:
   326  0075                     ___awmod@counter:	
   327                           ; 1 bytes @ 0x5
   328                           
   329  0075                     pulse_gen_C0@i:	
   330                           ; 1 bytes @ 0x5
   331                           
   332  0075                     pulse_gen_C3@i_1:	
   333                           ; 2 bytes @ 0x5
   334                           
   335                           
   336                           ; 2 bytes @ 0x5
   337  0075                     	ds	1
   338  0076                     ___awdiv@sign:
   339  0076                     ___awmod@sign:	
   340                           ; 1 bytes @ 0x6
   341                           
   342                           
   343                           ; 1 bytes @ 0x6
   344  0076                     	ds	1
   345  0077                     ?_num_state_C1:
   346  0077                     num_state_C1@digit:	
   347                           ; 1 bytes @ 0x7
   348                           
   349  0077                     ___awdiv@quotient:	
   350                           ; 2 bytes @ 0x7
   351                           
   352                           
   353                           ; 2 bytes @ 0x7
   354  0077                     	ds	2
   355  0079                     ??_num_state_C1:
   356  0079                     ?_num_state_C4:	
   357                           ; 1 bytes @ 0x9
   358                           
   359  0079                     num_state_C4@digit_1:	
   360                           ; 1 bytes @ 0x9
   361                           
   362                           
   363                           ; 2 bytes @ 0x9
   364  0079                     	ds	2
   365  007B                     ??_stop_counting:
   366  007B                     ?_sec_countdown:	
   367                           ; 1 bytes @ 0xB
   368                           
   369  007B                     ??_num_state_C4:	
   370                           ; 1 bytes @ 0xB
   371                           
   372  007B                     sec_countdown@min_value:	
   373                           ; 1 bytes @ 0xB
   374                           
   375                           
   376                           ; 2 bytes @ 0xB
   377  007B                     	ds	2
   378  007D                     ??_sec_countdown:
   379                           
   380                           ; 1 bytes @ 0xD
   381  007D                     	ds	1
   382                           
   383                           	psect	cstackBANK0
   384  0020                     __pcstackBANK0:
   385  0020                     ?_stop_counting:
   386  0020                     stop_counting@min_value:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           ; 2 bytes @ 0x0
   391  0020                     	ds	2
   392  0022                     stop_counting@sec_digit1:
   393                           
   394                           ; 2 bytes @ 0x2
   395  0022                     	ds	2
   396  0024                     stop_counting@sec_digit2:
   397                           
   398                           ; 2 bytes @ 0x4
   399  0024                     	ds	2
   400  0026                     sec_countdown@sec_counter1:
   401                           
   402                           ; 2 bytes @ 0x6
   403  0026                     	ds	2
   404  0028                     sec_countdown@sec_counter2:
   405                           
   406                           ; 2 bytes @ 0x8
   407  0028                     	ds	2
   408  002A                     ??_main:
   409                           
   410                           ; 1 bytes @ 0xA
   411  002A                     	ds	1
   412  002B                     main@sec_digit_1:
   413                           
   414                           ; 2 bytes @ 0xB
   415  002B                     	ds	2
   416  002D                     main@sec_digit_2:
   417                           
   418                           ; 2 bytes @ 0xD
   419  002D                     	ds	2
   420  002F                     main@temp_val:
   421                           
   422                           ; 2 bytes @ 0xF
   423  002F                     	ds	2
   424  0031                     main@min_digit_1:
   425                           
   426                           ; 2 bytes @ 0x11
   427  0031                     	ds	2
   428  0033                     main@min_digit_2:
   429                           
   430                           ; 2 bytes @ 0x13
   431  0033                     	ds	2
   432  0035                     main@count:
   433                           
   434                           ; 2 bytes @ 0x15
   435  0035                     	ds	2
   436                           
   437                           	psect	maintext
   438  06A1                     __pmaintext:	
   439 ;;
   440 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   441 ;;
   442 ;; *************** function _main *****************
   443 ;; Defined at:
   444 ;;		line 124 in file "prset_clock.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;  count           2   21[BANK0 ] int 
   449 ;;  min_digit_2     2   19[BANK0 ] int 
   450 ;;  min_digit_1     2   17[BANK0 ] int 
   451 ;;  temp_val        2   15[BANK0 ] int 
   452 ;;  sec_digit_2     2   13[BANK0 ] int 
   453 ;;  sec_digit_1     2   11[BANK0 ] int 
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : B1F/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   463 ;;      Params:         0       0       0       0       0       0       0       0
   464 ;;      Locals:         0      12       0       0       0       0       0       0
   465 ;;      Temps:          0       1       0       0       0       0       0       0
   466 ;;      Totals:         0      13       0       0       0       0       0       0
   467 ;;Total ram usage:       13 bytes
   468 ;; Hardware stack levels required when called: 4
   469 ;; This function calls:
   470 ;;		___awdiv
   471 ;;		___awmod
   472 ;;		_latch_gen_C2
   473 ;;		_latch_gen_C5
   474 ;;		_num_state_C1
   475 ;;		_num_state_C4
   476 ;;		_pulse_gen_C0
   477 ;;		_pulse_gen_C3
   478 ;;		_sec_countdown
   479 ;; This function is called by:
   480 ;;		Startup code after reset
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484  06A1                     _main:	
   485                           ;psect for function _main
   486                           
   487  06A1                     l1342:	
   488                           ;incstack = 0
   489                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   490                           
   491                           
   492                           ;prset_clock.c: 125:     _delay((unsigned long)((80)*(1000000/4000.0)));
   493  06A1  301A               	movlw	26
   494  06A2  0020               	movlb	0	; select bank0
   495  06A3  00AA               	movwf	??_main
   496  06A4  30F8               	movlw	248
   497  06A5                     u697:
   498  06A5  0B89               	decfsz	9,f
   499  06A6  2EA5               	goto	u697
   500  06A7  0BAA               	decfsz	??_main,f
   501  06A8  2EA5               	goto	u697
   502  06A9  0000               	nop
   503  06AA                     l1344:
   504                           
   505                           ;prset_clock.c: 127:     TRISC = 0;
   506  06AA  0021               	movlb	1	; select bank1
   507  06AB  018E               	clrf	14	;volatile
   508  06AC                     l1346:
   509                           
   510                           ;prset_clock.c: 128:     ANSELC = 0;
   511  06AC  0023               	movlb	3	; select bank3
   512  06AD  018E               	clrf	14	;volatile
   513  06AE                     l1348:
   514                           
   515                           ;prset_clock.c: 129:     ANSELB = 0;
   516  06AE  018D               	clrf	13	;volatile
   517  06AF                     l1350:
   518                           
   519                           ;prset_clock.c: 130:     TRISBbits.TRISB4=1;
   520  06AF  0021               	movlb	1	; select bank1
   521  06B0  160D               	bsf	13,4	;volatile
   522  06B1                     l1352:
   523                           
   524                           ;prset_clock.c: 131:     TRISBbits.TRISB5=1;
   525  06B1  168D               	bsf	13,5	;volatile
   526  06B2                     l1354:
   527                           
   528                           ;prset_clock.c: 132:     TRISBbits.TRISB6=1;
   529  06B2  170D               	bsf	13,6	;volatile
   530  06B3                     l1356:
   531                           
   532                           ;prset_clock.c: 133:     OPTION_REGbits.nWPUEN = 0;
   533  06B3  1395               	bcf	21,7	;volatile
   534  06B4                     l1358:
   535                           
   536                           ;prset_clock.c: 134:     WPUBbits.WPUB4=1;
   537  06B4  0024               	movlb	4	; select bank4
   538  06B5  160D               	bsf	13,4	;volatile
   539  06B6                     l1360:
   540                           
   541                           ;prset_clock.c: 135:     WPUBbits.WPUB5=1;
   542  06B6  168D               	bsf	13,5	;volatile
   543  06B7                     l1362:
   544                           
   545                           ;prset_clock.c: 136:     WPUBbits.WPUB6=1;
   546  06B7  170D               	bsf	13,6	;volatile
   547  06B8                     l1364:
   548                           
   549                           ;prset_clock.c: 137:     WPUBbits.WPUB7=1;
   550  06B8  178D               	bsf	13,7	;volatile
   551  06B9                     l1366:
   552                           
   553                           ;prset_clock.c: 138:     int count=0, temp_val=0;
   554  06B9  0020               	movlb	0	; select bank0
   555  06BA  01B5               	clrf	main@count
   556  06BB  01B6               	clrf	main@count+1
   557  06BC                     l1368:
   558  06BC  01AF               	clrf	main@temp_val
   559  06BD  01B0               	clrf	main@temp_val+1
   560  06BE                     l1370:
   561  06BE                     l1372:
   562  06BE                     l1374:
   563  06BE  01AB               	clrf	main@sec_digit_1
   564  06BF  01AC               	clrf	main@sec_digit_1+1
   565  06C0                     l1376:
   566  06C0  01AD               	clrf	main@sec_digit_2
   567  06C1  01AE               	clrf	main@sec_digit_2+1
   568  06C2                     l1378:
   569                           
   570                           ;prset_clock.c: 143:         if(PORTBbits.RB5==0){
   571  06C2  0020               	movlb	0	; select bank0
   572  06C3  1A8D               	btfsc	13,5	;volatile
   573  06C4  2EC6               	goto	u591
   574  06C5  2EC7               	goto	u590
   575  06C6                     u591:
   576  06C6  2EDC               	goto	l1386
   577  06C7                     u590:
   578  06C7                     l1380:
   579                           
   580                           ;prset_clock.c: 144:             _delay((unsigned long)((90)*(1000000/4000.0)));
   581  06C7  301E               	movlw	30
   582  06C8  0020               	movlb	0	; select bank0
   583  06C9  00AA               	movwf	??_main
   584  06CA  3037               	movlw	55
   585  06CB                     u707:
   586  06CB  0B89               	decfsz	9,f
   587  06CC  2ECB               	goto	u707
   588  06CD  0BAA               	decfsz	??_main,f
   589  06CE  2ECB               	goto	u707
   590  06CF                     l1382:
   591                           
   592                           ;prset_clock.c: 145:             if(PORTBbits.RB5==0){
   593  06CF  0020               	movlb	0	; select bank0
   594  06D0  1A8D               	btfsc	13,5	;volatile
   595  06D1  2ED3               	goto	u601
   596  06D2  2ED4               	goto	u600
   597  06D3                     u601:
   598  06D3  2EDC               	goto	l1386
   599  06D4                     u600:
   600  06D4                     l1384:
   601                           
   602                           ;prset_clock.c: 146:                 count++;
   603  06D4  3001               	movlw	1
   604  06D5  07B5               	addwf	main@count,f
   605  06D6  3000               	movlw	0
   606  06D7  3DB6               	addwfc	main@count+1,f
   607                           
   608                           ;prset_clock.c: 147:                 temp_val++;
   609  06D8  3001               	movlw	1
   610  06D9  07AF               	addwf	main@temp_val,f
   611  06DA  3000               	movlw	0
   612  06DB  3DB0               	addwfc	main@temp_val+1,f
   613  06DC                     l1386:
   614                           
   615                           ;prset_clock.c: 151:         if(PORTBbits.RB6==0){
   616  06DC  1B0D               	btfsc	13,6	;volatile
   617  06DD  2EDF               	goto	u611
   618  06DE  2EE0               	goto	u610
   619  06DF                     u611:
   620  06DF  2EF5               	goto	l1394
   621  06E0                     u610:
   622  06E0                     l1388:
   623                           
   624                           ;prset_clock.c: 152:             _delay((unsigned long)((90)*(1000000/4000.0)));
   625  06E0  301E               	movlw	30
   626  06E1  0020               	movlb	0	; select bank0
   627  06E2  00AA               	movwf	??_main
   628  06E3  3037               	movlw	55
   629  06E4                     u717:
   630  06E4  0B89               	decfsz	9,f
   631  06E5  2EE4               	goto	u717
   632  06E6  0BAA               	decfsz	??_main,f
   633  06E7  2EE4               	goto	u717
   634  06E8                     l1390:
   635                           
   636                           ;prset_clock.c: 153:             if(PORTBbits.RB6==0){
   637  06E8  0020               	movlb	0	; select bank0
   638  06E9  1B0D               	btfsc	13,6	;volatile
   639  06EA  2EEC               	goto	u621
   640  06EB  2EED               	goto	u620
   641  06EC                     u621:
   642  06EC  2EF5               	goto	l1394
   643  06ED                     u620:
   644  06ED                     l1392:
   645                           
   646                           ;prset_clock.c: 154:                 count--;
   647  06ED  30FF               	movlw	255
   648  06EE  07B5               	addwf	main@count,f
   649  06EF  30FF               	movlw	255
   650  06F0  3DB6               	addwfc	main@count+1,f
   651                           
   652                           ;prset_clock.c: 155:                 temp_val--;
   653  06F1  30FF               	movlw	255
   654  06F2  07AF               	addwf	main@temp_val,f
   655  06F3  30FF               	movlw	255
   656  06F4  3DB0               	addwfc	main@temp_val+1,f
   657  06F5                     l1394:
   658                           
   659                           ;prset_clock.c: 159:         if(PORTBbits.RB4==0){
   660  06F5  1A0D               	btfsc	13,4	;volatile
   661  06F6  2EF8               	goto	u631
   662  06F7  2EF9               	goto	u630
   663  06F8                     u631:
   664  06F8  2F92               	goto	l1428
   665  06F9                     u630:
   666  06F9                     l1396:
   667                           
   668                           ;prset_clock.c: 160:             if(count!=0){
   669  06F9  0835               	movf	main@count,w
   670  06FA  0436               	iorwf	main@count+1,w
   671  06FB  1903               	btfsc	3,2
   672  06FC  2EFE               	goto	u641
   673  06FD  2EFF               	goto	u640
   674  06FE                     u641:
   675  06FE  2F92               	goto	l1428
   676  06FF                     u640:
   677  06FF  2F89               	goto	l1424
   678  0700                     l1400:
   679                           
   680                           ;prset_clock.c: 163:                     if (count>=temp_val){
   681  0700  0836               	movf	main@count+1,w
   682  0701  3A80               	xorlw	128
   683  0702  00AA               	movwf	??_main
   684  0703  0830               	movf	main@temp_val+1,w
   685  0704  3A80               	xorlw	128
   686  0705  022A               	subwf	??_main,w
   687  0706  1D03               	skipz
   688  0707  2F0A               	goto	u655
   689  0708  082F               	movf	main@temp_val,w
   690  0709  0235               	subwf	main@count,w
   691  070A                     u655:
   692  070A  1C03               	skipc
   693  070B  2F0D               	goto	u651
   694  070C  2F0E               	goto	u650
   695  070D                     u651:
   696  070D  2F13               	goto	l1404
   697  070E                     u650:
   698  070E                     l1402:
   699                           
   700                           ;prset_clock.c: 164:                         count-=1;}
   701  070E  30FF               	movlw	255
   702  070F  0020               	movlb	0	; select bank0
   703  0710  07B5               	addwf	main@count,f
   704  0711  30FF               	movlw	255
   705  0712  3DB6               	addwfc	main@count+1,f
   706  0713                     l1404:
   707                           
   708                           ;prset_clock.c: 165:                     num_state_C4(count/10); pulse_gen_C3(1);
   709  0713  300A               	movlw	10
   710  0714  00F0               	movwf	___awdiv@divisor
   711  0715  3000               	movlw	0
   712  0716  00F1               	movwf	___awdiv@divisor+1
   713  0717  0020               	movlb	0	; select bank0
   714  0718  0836               	movf	main@count+1,w
   715  0719  00F3               	movwf	___awdiv@dividend+1
   716  071A  0835               	movf	main@count,w
   717  071B  00F2               	movwf	___awdiv@dividend
   718  071C  3183  2348  3186   	fcall	___awdiv
   719  071F  0871               	movf	?___awdiv+1,w
   720  0720  00FA               	movwf	num_state_C4@digit_1+1
   721  0721  0870               	movf	?___awdiv,w
   722  0722  00F9               	movwf	num_state_C4@digit_1
   723  0723  3185  255C  3186   	fcall	_num_state_C4
   724  0726                     l1406:
   725  0726  3001               	movlw	1
   726  0727  00F0               	movwf	pulse_gen_C3@n_1
   727  0728  3000               	movlw	0
   728  0729  00F1               	movwf	pulse_gen_C3@n_1+1
   729  072A  3182  2286  3186   	fcall	_pulse_gen_C3
   730  072D                     l1408:
   731                           
   732                           ;prset_clock.c: 166:                     num_state_C4(count%10); latch_gen_C5();
   733  072D  300A               	movlw	10
   734  072E  00F0               	movwf	___awmod@divisor
   735  072F  3000               	movlw	0
   736  0730  00F1               	movwf	___awmod@divisor+1
   737  0731  0020               	movlb	0	; select bank0
   738  0732  0836               	movf	main@count+1,w
   739  0733  00F3               	movwf	___awmod@dividend+1
   740  0734  0835               	movf	main@count,w
   741  0735  00F2               	movwf	___awmod@dividend
   742  0736  3182  22F5  3186   	fcall	___awmod
   743  0739  0871               	movf	?___awmod+1,w
   744  073A  00FA               	movwf	num_state_C4@digit_1+1
   745  073B  0870               	movf	?___awmod,w
   746  073C  00F9               	movwf	num_state_C4@digit_1
   747  073D  3185  255C  3186   	fcall	_num_state_C4
   748  0740  3182  2263  3186   	fcall	_latch_gen_C5
   749  0743                     l1410:
   750                           
   751                           ;prset_clock.c: 167:                     sec_countdown(count);
   752  0743  0020               	movlb	0	; select bank0
   753  0744  0836               	movf	main@count+1,w
   754  0745  00FC               	movwf	sec_countdown@min_value+1
   755  0746  0835               	movf	main@count,w
   756  0747  00FB               	movwf	sec_countdown@min_value
   757  0748  3183  23A7  3186   	fcall	_sec_countdown
   758  074B                     l1412:
   759                           
   760                           ;prset_clock.c: 168:                     count-=1;
   761  074B  30FF               	movlw	255
   762  074C  0020               	movlb	0	; select bank0
   763  074D  07B5               	addwf	main@count,f
   764  074E  30FF               	movlw	255
   765  074F  3DB6               	addwfc	main@count+1,f
   766  0750                     l1414:
   767                           
   768                           ;prset_clock.c: 169:                     min_digit_1 = count/10;
   769  0750  300A               	movlw	10
   770  0751  00F0               	movwf	___awdiv@divisor
   771  0752  3000               	movlw	0
   772  0753  00F1               	movwf	___awdiv@divisor+1
   773  0754  0836               	movf	main@count+1,w
   774  0755  00F3               	movwf	___awdiv@dividend+1
   775  0756  0835               	movf	main@count,w
   776  0757  00F2               	movwf	___awdiv@dividend
   777  0758  3183  2348  3186   	fcall	___awdiv
   778  075B  0871               	movf	?___awdiv+1,w
   779  075C  0020               	movlb	0	; select bank0
   780  075D  00B2               	movwf	main@min_digit_1+1
   781  075E  0870               	movf	?___awdiv,w
   782  075F  00B1               	movwf	main@min_digit_1
   783  0760                     l1416:
   784                           
   785                           ;prset_clock.c: 170:                     min_digit_2 = count%10;
   786  0760  300A               	movlw	10
   787  0761  00F0               	movwf	___awmod@divisor
   788  0762  3000               	movlw	0
   789  0763  00F1               	movwf	___awmod@divisor+1
   790  0764  0836               	movf	main@count+1,w
   791  0765  00F3               	movwf	___awmod@dividend+1
   792  0766  0835               	movf	main@count,w
   793  0767  00F2               	movwf	___awmod@dividend
   794  0768  3182  22F5  3186   	fcall	___awmod
   795  076B  0871               	movf	?___awmod+1,w
   796  076C  0020               	movlb	0	; select bank0
   797  076D  00B4               	movwf	main@min_digit_2+1
   798  076E  0870               	movf	?___awmod,w
   799  076F  00B3               	movwf	main@min_digit_2
   800  0770                     l1418:
   801                           
   802                           ;prset_clock.c: 171:                     num_state_C4(min_digit_1); pulse_gen_C3(1);
   803  0770  0832               	movf	main@min_digit_1+1,w
   804  0771  00FA               	movwf	num_state_C4@digit_1+1
   805  0772  0831               	movf	main@min_digit_1,w
   806  0773  00F9               	movwf	num_state_C4@digit_1
   807  0774  3185  255C  3186   	fcall	_num_state_C4
   808  0777  3001               	movlw	1
   809  0778  00F0               	movwf	pulse_gen_C3@n_1
   810  0779  3000               	movlw	0
   811  077A  00F1               	movwf	pulse_gen_C3@n_1+1
   812  077B  3182  2286  3186   	fcall	_pulse_gen_C3
   813  077E                     l1420:
   814                           
   815                           ;prset_clock.c: 172:                     num_state_C4(min_digit_2); latch_gen_C5();
   816  077E  0020               	movlb	0	; select bank0
   817  077F  0834               	movf	main@min_digit_2+1,w
   818  0780  00FA               	movwf	num_state_C4@digit_1+1
   819  0781  0833               	movf	main@min_digit_2,w
   820  0782  00F9               	movwf	num_state_C4@digit_1
   821  0783  3185  255C  3186   	fcall	_num_state_C4
   822  0786                     l1422:
   823  0786  3182  2263  3186   	fcall	_latch_gen_C5
   824  0789                     l1424:
   825                           
   826                           ;prset_clock.c: 161:                 while(count>=0){
   827  0789  0020               	movlb	0	; select bank0
   828  078A  1FB6               	btfss	main@count+1,7
   829  078B  2F8D               	goto	u661
   830  078C  2F8E               	goto	u660
   831  078D                     u661:
   832  078D  2F00               	goto	l1400
   833  078E                     u660:
   834  078E                     l1426:
   835                           
   836                           ;prset_clock.c: 174:                 count=0;
   837  078E  01B5               	clrf	main@count
   838  078F  01B6               	clrf	main@count+1
   839                           
   840                           ;prset_clock.c: 175:                 temp_val=0;
   841  0790  01AF               	clrf	main@temp_val
   842  0791  01B0               	clrf	main@temp_val+1
   843  0792                     l1428:
   844                           
   845                           ;prset_clock.c: 179:         if(count>60||count<0){
   846  0792  0836               	movf	main@count+1,w
   847  0793  3A80               	xorlw	128
   848  0794  00AA               	movwf	??_main
   849  0795  3080               	movlw	128
   850  0796  022A               	subwf	??_main,w
   851  0797  1D03               	skipz
   852  0798  2F9B               	goto	u675
   853  0799  303D               	movlw	61
   854  079A  0235               	subwf	main@count,w
   855  079B                     u675:
   856  079B  1803               	skipnc
   857  079C  2F9E               	goto	u671
   858  079D  2F9F               	goto	u670
   859  079E                     u671:
   860  079E  2FA4               	goto	l1432
   861  079F                     u670:
   862  079F                     l1430:
   863  079F  0020               	movlb	0	; select bank0
   864  07A0  1FB6               	btfss	main@count+1,7
   865  07A1  2FA3               	goto	u681
   866  07A2  2FA4               	goto	u680
   867  07A3                     u681:
   868  07A3  2FA7               	goto	l1434
   869  07A4                     u680:
   870  07A4                     l1432:
   871                           
   872                           ;prset_clock.c: 180:             count=0;
   873  07A4  0020               	movlb	0	; select bank0
   874  07A5  01B5               	clrf	main@count
   875  07A6  01B6               	clrf	main@count+1
   876  07A7                     l1434:
   877                           
   878                           ;prset_clock.c: 182:         min_digit_1 = count/10;
   879  07A7  300A               	movlw	10
   880  07A8  00F0               	movwf	___awdiv@divisor
   881  07A9  3000               	movlw	0
   882  07AA  00F1               	movwf	___awdiv@divisor+1
   883  07AB  0836               	movf	main@count+1,w
   884  07AC  00F3               	movwf	___awdiv@dividend+1
   885  07AD  0835               	movf	main@count,w
   886  07AE  00F2               	movwf	___awdiv@dividend
   887  07AF  3183  2348  3186   	fcall	___awdiv
   888  07B2  0871               	movf	?___awdiv+1,w
   889  07B3  0020               	movlb	0	; select bank0
   890  07B4  00B2               	movwf	main@min_digit_1+1
   891  07B5  0870               	movf	?___awdiv,w
   892  07B6  00B1               	movwf	main@min_digit_1
   893  07B7                     l1436:
   894                           
   895                           ;prset_clock.c: 183:         min_digit_2 = count%10;
   896  07B7  300A               	movlw	10
   897  07B8  00F0               	movwf	___awmod@divisor
   898  07B9  3000               	movlw	0
   899  07BA  00F1               	movwf	___awmod@divisor+1
   900  07BB  0836               	movf	main@count+1,w
   901  07BC  00F3               	movwf	___awmod@dividend+1
   902  07BD  0835               	movf	main@count,w
   903  07BE  00F2               	movwf	___awmod@dividend
   904  07BF  3182  22F5  3186   	fcall	___awmod
   905  07C2  0871               	movf	?___awmod+1,w
   906  07C3  0020               	movlb	0	; select bank0
   907  07C4  00B4               	movwf	main@min_digit_2+1
   908  07C5  0870               	movf	?___awmod,w
   909  07C6  00B3               	movwf	main@min_digit_2
   910  07C7                     l1438:
   911                           
   912                           ;prset_clock.c: 186:         num_state_C1(sec_digit_1); pulse_gen_C0(1);
   913  07C7  082C               	movf	main@sec_digit_1+1,w
   914  07C8  00F8               	movwf	num_state_C1@digit+1
   915  07C9  082B               	movf	main@sec_digit_1,w
   916  07CA  00F7               	movwf	num_state_C1@digit
   917  07CB  3184  2417  3186   	fcall	_num_state_C1
   918  07CE                     l1440:
   919  07CE  3001               	movlw	1
   920  07CF  00F0               	movwf	pulse_gen_C0@n
   921  07D0  3000               	movlw	0
   922  07D1  00F1               	movwf	pulse_gen_C0@n+1
   923  07D2  3182  2267  3186   	fcall	_pulse_gen_C0
   924  07D5                     l1442:
   925                           
   926                           ;prset_clock.c: 187:         num_state_C1(sec_digit_2); latch_gen_C2();
   927  07D5  0020               	movlb	0	; select bank0
   928  07D6  082E               	movf	main@sec_digit_2+1,w
   929  07D7  00F8               	movwf	num_state_C1@digit+1
   930  07D8  082D               	movf	main@sec_digit_2,w
   931  07D9  00F7               	movwf	num_state_C1@digit
   932  07DA  3184  2417  3186   	fcall	_num_state_C1
   933  07DD                     l1444:
   934  07DD  3182  225F  3186   	fcall	_latch_gen_C2
   935  07E0                     l1446:
   936                           
   937                           ;prset_clock.c: 189:         num_state_C4(min_digit_1); pulse_gen_C3(1);
   938  07E0  0020               	movlb	0	; select bank0
   939  07E1  0832               	movf	main@min_digit_1+1,w
   940  07E2  00FA               	movwf	num_state_C4@digit_1+1
   941  07E3  0831               	movf	main@min_digit_1,w
   942  07E4  00F9               	movwf	num_state_C4@digit_1
   943  07E5  3185  255C  3186   	fcall	_num_state_C4
   944  07E8                     l1448:
   945  07E8  3001               	movlw	1
   946  07E9  00F0               	movwf	pulse_gen_C3@n_1
   947  07EA  3000               	movlw	0
   948  07EB  00F1               	movwf	pulse_gen_C3@n_1+1
   949  07EC  3182  2286  3186   	fcall	_pulse_gen_C3
   950  07EF                     l1450:
   951                           
   952                           ;prset_clock.c: 190:         num_state_C4(min_digit_2); latch_gen_C5();
   953  07EF  0020               	movlb	0	; select bank0
   954  07F0  0834               	movf	main@min_digit_2+1,w
   955  07F1  00FA               	movwf	num_state_C4@digit_1+1
   956  07F2  0833               	movf	main@min_digit_2,w
   957  07F3  00F9               	movwf	num_state_C4@digit_1
   958  07F4  3185  255C  3186   	fcall	_num_state_C4
   959  07F7                     l1452:
   960  07F7  3182  2263  3186   	fcall	_latch_gen_C5
   961  07FA  2EC2               	goto	l1378
   962  07FB  3180  2802         	ljmp	start
   963  07FD                     __end_of_main:
   964                           
   965                           	psect	text1
   966  03A7                     __ptext1:	
   967 ;; *************** function _sec_countdown *****************
   968 ;; Defined at:
   969 ;;		line 62 in file "prset_clock.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  min_value       2   11[COMMON] int 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  sec_counter2    2    8[BANK0 ] int 
   974 ;;  sec_counter1    2    6[BANK0 ] int 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   984 ;;      Params:         2       0       0       0       0       0       0       0
   985 ;;      Locals:         0       4       0       0       0       0       0       0
   986 ;;      Temps:          1       0       0       0       0       0       0       0
   987 ;;      Totals:         3       4       0       0       0       0       0       0
   988 ;;Total ram usage:        7 bytes
   989 ;; Hardware stack levels used: 1
   990 ;; Hardware stack levels required when called: 3
   991 ;; This function calls:
   992 ;;		_latch_gen_C2
   993 ;;		_num_state_C1
   994 ;;		_pulse_gen_C0
   995 ;;		_stop_counting
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001  03A7                     _sec_countdown:	
  1002                           ;psect for function _sec_countdown
  1003                           
  1004  03A7                     l1318:	
  1005                           ;incstack = 0
  1006                           ; Regs used in _sec_countdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1007                           
  1008                           
  1009                           ;prset_clock.c: 63:     int sec_counter1=5, sec_counter2=9;
  1010  03A7  3005               	movlw	5
  1011  03A8  0020               	movlb	0	; select bank0
  1012  03A9  00A6               	movwf	sec_countdown@sec_counter1
  1013  03AA  3000               	movlw	0
  1014  03AB  00A7               	movwf	sec_countdown@sec_counter1+1
  1015  03AC  3009               	movlw	9
  1016  03AD  00A8               	movwf	sec_countdown@sec_counter2
  1017  03AE  3000               	movlw	0
  1018  03AF  00A9               	movwf	sec_countdown@sec_counter2+1
  1019                           
  1020                           ;prset_clock.c: 64:     while(sec_counter1>=0){
  1021  03B0  2C12               	goto	l1340
  1022  03B1                     l1320:
  1023                           
  1024                           ;prset_clock.c: 66:             num_state_C1(sec_counter1); pulse_gen_C0(1);
  1025  03B1  0827               	movf	sec_countdown@sec_counter1+1,w
  1026  03B2  00F8               	movwf	num_state_C1@digit+1
  1027  03B3  0826               	movf	sec_countdown@sec_counter1,w
  1028  03B4  00F7               	movwf	num_state_C1@digit
  1029  03B5  3184  2417  3183   	fcall	_num_state_C1
  1030  03B8                     l1322:
  1031  03B8  3001               	movlw	1
  1032  03B9  00F0               	movwf	pulse_gen_C0@n
  1033  03BA  3000               	movlw	0
  1034  03BB  00F1               	movwf	pulse_gen_C0@n+1
  1035  03BC  3182  2267  3183   	fcall	_pulse_gen_C0
  1036  03BF                     l1324:
  1037                           
  1038                           ;prset_clock.c: 67:             num_state_C1(sec_counter2); latch_gen_C2();
  1039  03BF  0020               	movlb	0	; select bank0
  1040  03C0  0829               	movf	sec_countdown@sec_counter2+1,w
  1041  03C1  00F8               	movwf	num_state_C1@digit+1
  1042  03C2  0828               	movf	sec_countdown@sec_counter2,w
  1043  03C3  00F7               	movwf	num_state_C1@digit
  1044  03C4  3184  2417  3183   	fcall	_num_state_C1
  1045  03C7                     l1326:
  1046  03C7  3182  225F  3183   	fcall	_latch_gen_C2
  1047  03CA                     l1328:
  1048                           
  1049                           ;prset_clock.c: 68:             stop_counting(min_value, sec_counter1, sec_counter2); _d
      +                          elay((unsigned long)((20)*(1000000/4000.0)));
  1050  03CA  087C               	movf	sec_countdown@min_value+1,w
  1051  03CB  0020               	movlb	0	; select bank0
  1052  03CC  00A1               	movwf	stop_counting@min_value+1
  1053  03CD  087B               	movf	sec_countdown@min_value,w
  1054  03CE  00A0               	movwf	stop_counting@min_value
  1055  03CF  0827               	movf	sec_countdown@sec_counter1+1,w
  1056  03D0  00A3               	movwf	stop_counting@sec_digit1+1
  1057  03D1  0826               	movf	sec_countdown@sec_counter1,w
  1058  03D2  00A2               	movwf	stop_counting@sec_digit1
  1059  03D3  0829               	movf	sec_countdown@sec_counter2+1,w
  1060  03D4  00A5               	movwf	stop_counting@sec_digit2+1
  1061  03D5  0828               	movf	sec_countdown@sec_counter2,w
  1062  03D6  00A4               	movwf	stop_counting@sec_digit2
  1063  03D7  3182  22A5  3183   	fcall	_stop_counting
  1064  03DA                     l1330:
  1065  03DA  3007               	movlw	7
  1066  03DB  00FD               	movwf	??_sec_countdown
  1067  03DC  307D               	movlw	125
  1068  03DD                     u727:
  1069  03DD  0B89               	decfsz	9,f
  1070  03DE  2BDD               	goto	u727
  1071  03DF  0BFD               	decfsz	??_sec_countdown,f
  1072  03E0  2BDD               	goto	u727
  1073  03E1  0000               	nop
  1074  03E2                     l1332:
  1075                           
  1076                           ;prset_clock.c: 69:             _delay((unsigned long)((250)*(1000000/4000.0)));
  1077  03E2  3052               	movlw	82
  1078  03E3  00FD               	movwf	??_sec_countdown
  1079  03E4  302A               	movlw	42
  1080  03E5                     u737:
  1081  03E5  0B89               	decfsz	9,f
  1082  03E6  2BE5               	goto	u737
  1083  03E7  0BFD               	decfsz	??_sec_countdown,f
  1084  03E8  2BE5               	goto	u737
  1085  03E9                     l1334:
  1086                           
  1087                           ;prset_clock.c: 70:             stop_counting(min_value, sec_counter1, sec_counter2); _d
      +                          elay((unsigned long)((20)*(1000000/4000.0)));
  1088  03E9  087C               	movf	sec_countdown@min_value+1,w
  1089  03EA  0020               	movlb	0	; select bank0
  1090  03EB  00A1               	movwf	stop_counting@min_value+1
  1091  03EC  087B               	movf	sec_countdown@min_value,w
  1092  03ED  00A0               	movwf	stop_counting@min_value
  1093  03EE  0827               	movf	sec_countdown@sec_counter1+1,w
  1094  03EF  00A3               	movwf	stop_counting@sec_digit1+1
  1095  03F0  0826               	movf	sec_countdown@sec_counter1,w
  1096  03F1  00A2               	movwf	stop_counting@sec_digit1
  1097  03F2  0829               	movf	sec_countdown@sec_counter2+1,w
  1098  03F3  00A5               	movwf	stop_counting@sec_digit2+1
  1099  03F4  0828               	movf	sec_countdown@sec_counter2,w
  1100  03F5  00A4               	movwf	stop_counting@sec_digit2
  1101  03F6  3182  22A5  3183   	fcall	_stop_counting
  1102  03F9  3007               	movlw	7
  1103  03FA  00FD               	movwf	??_sec_countdown
  1104  03FB  307D               	movlw	125
  1105  03FC                     u747:
  1106  03FC  0B89               	decfsz	9,f
  1107  03FD  2BFC               	goto	u747
  1108  03FE  0BFD               	decfsz	??_sec_countdown,f
  1109  03FF  2BFC               	goto	u747
  1110  0400  0000               	nop
  1111                           
  1112                           ;prset_clock.c: 71:             sec_counter2--;
  1113  0401  30FF               	movlw	255
  1114  0402  0020               	movlb	0	; select bank0
  1115  0403  07A8               	addwf	sec_countdown@sec_counter2,f
  1116  0404  30FF               	movlw	255
  1117  0405  3DA9               	addwfc	sec_countdown@sec_counter2+1,f
  1118  0406                     l1336:
  1119                           
  1120                           ;prset_clock.c: 65:         while(sec_counter2>=0){
  1121  0406  1FA9               	btfss	sec_countdown@sec_counter2+1,7
  1122  0407  2C09               	goto	u571
  1123  0408  2C0A               	goto	u570
  1124  0409                     u571:
  1125  0409  2BB1               	goto	l1320
  1126  040A                     u570:
  1127  040A                     l1338:
  1128                           
  1129                           ;prset_clock.c: 73:         sec_counter1--;
  1130  040A  30FF               	movlw	255
  1131  040B  07A6               	addwf	sec_countdown@sec_counter1,f
  1132  040C  30FF               	movlw	255
  1133  040D  3DA7               	addwfc	sec_countdown@sec_counter1+1,f
  1134                           
  1135                           ;prset_clock.c: 74:         sec_counter2=9;
  1136  040E  3009               	movlw	9
  1137  040F  00A8               	movwf	sec_countdown@sec_counter2
  1138  0410  3000               	movlw	0
  1139  0411  00A9               	movwf	sec_countdown@sec_counter2+1
  1140  0412                     l1340:
  1141                           
  1142                           ;prset_clock.c: 64:     while(sec_counter1>=0){
  1143  0412  1FA7               	btfss	sec_countdown@sec_counter1+1,7
  1144  0413  2C15               	goto	u581
  1145  0414  2C16               	goto	u580
  1146  0415                     u581:
  1147  0415  2C06               	goto	l1336
  1148  0416                     u580:
  1149  0416                     l53:
  1150  0416  0008               	return
  1151  0417                     __end_of_sec_countdown:
  1152                           
  1153                           	psect	text2
  1154  02A5                     __ptext2:	
  1155 ;; *************** function _stop_counting *****************
  1156 ;; Defined at:
  1157 ;;		line 111 in file "prset_clock.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  min_value       2    0[BANK0 ] int 
  1160 ;;  sec_digit1      2    2[BANK0 ] int 
  1161 ;;  sec_digit2      2    4[BANK0 ] int 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1173 ;;      Params:         0       6       0       0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0
  1176 ;;      Totals:         0       6       0       0       0       0       0       0
  1177 ;;Total ram usage:        6 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 2
  1180 ;; This function calls:
  1181 ;;		___awdiv
  1182 ;;		___awmod
  1183 ;;		_latch_gen_C2
  1184 ;;		_latch_gen_C5
  1185 ;;		_num_state_C1
  1186 ;;		_num_state_C4
  1187 ;;		_pulse_gen_C0
  1188 ;;		_pulse_gen_C3
  1189 ;; This function is called by:
  1190 ;;		_sec_countdown
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194  02A5                     _stop_counting:	
  1195                           ;psect for function _stop_counting
  1196                           
  1197  02A5                     l1300:	
  1198                           ;incstack = 0
  1199                           ; Regs used in _stop_counting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1200                           
  1201                           
  1202                           ;prset_clock.c: 112:     while(PORTBbits.RB7==0){
  1203  02A5  2AEF               	goto	l1316
  1204  02A6                     l1302:
  1205                           
  1206                           ;prset_clock.c: 114:         num_state_C4(min_value/10); pulse_gen_C3(1);
  1207  02A6  300A               	movlw	10
  1208  02A7  00F0               	movwf	___awdiv@divisor
  1209  02A8  3000               	movlw	0
  1210  02A9  00F1               	movwf	___awdiv@divisor+1
  1211  02AA  0821               	movf	stop_counting@min_value+1,w
  1212  02AB  00F3               	movwf	___awdiv@dividend+1
  1213  02AC  0820               	movf	stop_counting@min_value,w
  1214  02AD  00F2               	movwf	___awdiv@dividend
  1215  02AE  3183  2348  3182   	fcall	___awdiv
  1216  02B1  0871               	movf	?___awdiv+1,w
  1217  02B2  00FA               	movwf	num_state_C4@digit_1+1
  1218  02B3  0870               	movf	?___awdiv,w
  1219  02B4  00F9               	movwf	num_state_C4@digit_1
  1220  02B5  3185  255C  3182   	fcall	_num_state_C4
  1221  02B8                     l1304:
  1222  02B8  3001               	movlw	1
  1223  02B9  00F0               	movwf	pulse_gen_C3@n_1
  1224  02BA  3000               	movlw	0
  1225  02BB  00F1               	movwf	pulse_gen_C3@n_1+1
  1226  02BC  3182  2286  3182   	fcall	_pulse_gen_C3
  1227  02BF                     l1306:
  1228                           
  1229                           ;prset_clock.c: 115:         num_state_C4(min_value%10); latch_gen_C5();
  1230  02BF  300A               	movlw	10
  1231  02C0  00F0               	movwf	___awmod@divisor
  1232  02C1  3000               	movlw	0
  1233  02C2  00F1               	movwf	___awmod@divisor+1
  1234  02C3  0020               	movlb	0	; select bank0
  1235  02C4  0821               	movf	stop_counting@min_value+1,w
  1236  02C5  00F3               	movwf	___awmod@dividend+1
  1237  02C6  0820               	movf	stop_counting@min_value,w
  1238  02C7  00F2               	movwf	___awmod@dividend
  1239  02C8  3182  22F5  3182   	fcall	___awmod
  1240  02CB  0871               	movf	?___awmod+1,w
  1241  02CC  00FA               	movwf	num_state_C4@digit_1+1
  1242  02CD  0870               	movf	?___awmod,w
  1243  02CE  00F9               	movwf	num_state_C4@digit_1
  1244  02CF  3185  255C  3182   	fcall	_num_state_C4
  1245  02D2                     l1308:
  1246  02D2  3182  2263  3182   	fcall	_latch_gen_C5
  1247  02D5                     l1310:
  1248                           
  1249                           ;prset_clock.c: 117:         num_state_C1(sec_digit1); pulse_gen_C0(1);
  1250  02D5  0020               	movlb	0	; select bank0
  1251  02D6  0823               	movf	stop_counting@sec_digit1+1,w
  1252  02D7  00F8               	movwf	num_state_C1@digit+1
  1253  02D8  0822               	movf	stop_counting@sec_digit1,w
  1254  02D9  00F7               	movwf	num_state_C1@digit
  1255  02DA  3184  2417  3182   	fcall	_num_state_C1
  1256  02DD                     l1312:
  1257  02DD  3001               	movlw	1
  1258  02DE  00F0               	movwf	pulse_gen_C0@n
  1259  02DF  3000               	movlw	0
  1260  02E0  00F1               	movwf	pulse_gen_C0@n+1
  1261  02E1  3182  2267  3182   	fcall	_pulse_gen_C0
  1262  02E4                     l1314:
  1263                           
  1264                           ;prset_clock.c: 118:         num_state_C1(sec_digit2); latch_gen_C2();
  1265  02E4  0020               	movlb	0	; select bank0
  1266  02E5  0825               	movf	stop_counting@sec_digit2+1,w
  1267  02E6  00F8               	movwf	num_state_C1@digit+1
  1268  02E7  0824               	movf	stop_counting@sec_digit2,w
  1269  02E8  00F7               	movwf	num_state_C1@digit
  1270  02E9  3184  2417  3182   	fcall	_num_state_C1
  1271  02EC  3182  225F  3182   	fcall	_latch_gen_C2
  1272  02EF                     l1316:
  1273                           
  1274                           ;prset_clock.c: 112:     while(PORTBbits.RB7==0){
  1275  02EF  0020               	movlb	0	; select bank0
  1276  02F0  1F8D               	btfss	13,7	;volatile
  1277  02F1  2AF3               	goto	u561
  1278  02F2  2AF4               	goto	u560
  1279  02F3                     u561:
  1280  02F3  2AA6               	goto	l1302
  1281  02F4                     u560:
  1282  02F4                     l83:
  1283  02F4  0008               	return
  1284  02F5                     __end_of_stop_counting:
  1285                           
  1286                           	psect	text3
  1287  055C                     __ptext3:	
  1288 ;; *************** function _num_state_C4 *****************
  1289 ;; Defined at:
  1290 ;;		line 93 in file "prset_clock.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  digit_1         2    9[COMMON] int 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1304 ;;      Params:         2       0       0       0       0       0       0       0
  1305 ;;      Locals:         0       0       0       0       0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0       0       0       0
  1307 ;;      Totals:         2       0       0       0       0       0       0       0
  1308 ;;Total ram usage:        2 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 1
  1311 ;; This function calls:
  1312 ;;		_pulse_gen_C3
  1313 ;; This function is called by:
  1314 ;;		_stop_counting
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319  055C                     _num_state_C4:	
  1320                           ;psect for function _num_state_C4
  1321                           
  1322  055C                     l1148:	
  1323                           ;incstack = 0
  1324                           ; Regs used in _num_state_C4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1325                           
  1326                           
  1327                           ;prset_clock.c: 94:     switch(digit_1){
  1328  055C  2E7E               	goto	l1212
  1329  055D                     l66:	
  1330                           ;prset_clock.c: 95:         case 0: LATCbits.LATC4=0; pulse_gen_C3(1); LATCbits.LATC4=1;
      +                           pulse_gen_C3(6); break;
  1331                           
  1332  055D  0022               	movlb	2	; select bank2
  1333  055E  120E               	bcf	14,4	;volatile
  1334  055F                     l1150:
  1335  055F  3001               	movlw	1
  1336  0560  00F0               	movwf	pulse_gen_C3@n_1
  1337  0561  3000               	movlw	0
  1338  0562  00F1               	movwf	pulse_gen_C3@n_1+1
  1339  0563  3182  2286  3185   	fcall	_pulse_gen_C3
  1340  0566                     l1152:
  1341  0566  0022               	movlb	2	; select bank2
  1342  0567  160E               	bsf	14,4	;volatile
  1343  0568  3006               	movlw	6
  1344  0569  00F0               	movwf	pulse_gen_C3@n_1
  1345  056A  3000               	movlw	0
  1346  056B  00F1               	movwf	pulse_gen_C3@n_1+1
  1347  056C  3182  2286  3185   	fcall	_pulse_gen_C3
  1348  056F  2EA0               	goto	l77
  1349  0570                     l68:	
  1350                           ;prset_clock.c: 96:         case 1: LATCbits.LATC4=0; pulse_gen_C3(4); LATCbits.LATC4=1;
      +                           pulse_gen_C3(2); LATCbits.LATC4=0; pulse_gen_C3(1); break;
  1351                           
  1352  0570  0022               	movlb	2	; select bank2
  1353  0571  120E               	bcf	14,4	;volatile
  1354  0572                     l1154:
  1355  0572  3004               	movlw	4
  1356  0573  00F0               	movwf	pulse_gen_C3@n_1
  1357  0574  3000               	movlw	0
  1358  0575  00F1               	movwf	pulse_gen_C3@n_1+1
  1359  0576  3182  2286  3185   	fcall	_pulse_gen_C3
  1360  0579                     l1156:
  1361  0579  0022               	movlb	2	; select bank2
  1362  057A  160E               	bsf	14,4	;volatile
  1363  057B  3002               	movlw	2
  1364  057C  00F0               	movwf	pulse_gen_C3@n_1
  1365  057D  3000               	movlw	0
  1366  057E  00F1               	movwf	pulse_gen_C3@n_1+1
  1367  057F  3182  2286  3185   	fcall	_pulse_gen_C3
  1368  0582                     l1158:
  1369  0582  0022               	movlb	2	; select bank2
  1370  0583  120E               	bcf	14,4	;volatile
  1371  0584  3001               	movlw	1
  1372  0585  00F0               	movwf	pulse_gen_C3@n_1
  1373  0586  3000               	movlw	0
  1374  0587  00F1               	movwf	pulse_gen_C3@n_1+1
  1375  0588  3182  2286  3185   	fcall	_pulse_gen_C3
  1376  058B  2EA0               	goto	l77
  1377  058C                     l69:	
  1378                           ;prset_clock.c: 97:         case 2: LATCbits.LATC4=1; pulse_gen_C3(1); LATCbits.LATC4=0;
      +                           pulse_gen_C3(1); LATCbits.LATC4=1; pulse_gen_C3(2);
  1379                           
  1380  058C  0022               	movlb	2	; select bank2
  1381  058D  160E               	bsf	14,4	;volatile
  1382  058E                     l1160:
  1383  058E  3001               	movlw	1
  1384  058F  00F0               	movwf	pulse_gen_C3@n_1
  1385  0590  3000               	movlw	0
  1386  0591  00F1               	movwf	pulse_gen_C3@n_1+1
  1387  0592  3182  2286  3185   	fcall	_pulse_gen_C3
  1388  0595                     l1162:
  1389  0595  0022               	movlb	2	; select bank2
  1390  0596  120E               	bcf	14,4	;volatile
  1391  0597  3001               	movlw	1
  1392  0598  00F0               	movwf	pulse_gen_C3@n_1
  1393  0599  3000               	movlw	0
  1394  059A  00F1               	movwf	pulse_gen_C3@n_1+1
  1395  059B  3182  2286  3185   	fcall	_pulse_gen_C3
  1396  059E                     l1164:
  1397  059E  0022               	movlb	2	; select bank2
  1398  059F  160E               	bsf	14,4	;volatile
  1399  05A0  3002               	movlw	2
  1400  05A1  00F0               	movwf	pulse_gen_C3@n_1
  1401  05A2  3000               	movlw	0
  1402  05A3  00F1               	movwf	pulse_gen_C3@n_1+1
  1403  05A4  3182  2286  3185   	fcall	_pulse_gen_C3
  1404  05A7                     l1166:
  1405                           
  1406                           ;prset_clock.c: 98:                 LATCbits.LATC4=0; pulse_gen_C3(1); LATCbits.LATC4=1;
      +                           pulse_gen_C3(2); break;
  1407  05A7  0022               	movlb	2	; select bank2
  1408  05A8  120E               	bcf	14,4	;volatile
  1409  05A9  3001               	movlw	1
  1410  05AA  00F0               	movwf	pulse_gen_C3@n_1
  1411  05AB  3000               	movlw	0
  1412  05AC  00F1               	movwf	pulse_gen_C3@n_1+1
  1413  05AD  3182  2286  3185   	fcall	_pulse_gen_C3
  1414  05B0                     l1168:
  1415  05B0  0022               	movlb	2	; select bank2
  1416  05B1  160E               	bsf	14,4	;volatile
  1417  05B2  3002               	movlw	2
  1418  05B3  00F0               	movwf	pulse_gen_C3@n_1
  1419  05B4  3000               	movlw	0
  1420  05B5  00F1               	movwf	pulse_gen_C3@n_1+1
  1421  05B6  3182  2286  3185   	fcall	_pulse_gen_C3
  1422  05B9  2EA0               	goto	l77
  1423  05BA                     l70:	
  1424                           ;prset_clock.c: 99:         case 3: LATCbits.LATC4=1; pulse_gen_C3(1); LATCbits.LATC4=0;
      +                           pulse_gen_C3(2); LATCbits.LATC4=1; pulse_gen_C3(4); break;
  1425                           
  1426  05BA  0022               	movlb	2	; select bank2
  1427  05BB  160E               	bsf	14,4	;volatile
  1428  05BC                     l1170:
  1429  05BC  3001               	movlw	1
  1430  05BD  00F0               	movwf	pulse_gen_C3@n_1
  1431  05BE  3000               	movlw	0
  1432  05BF  00F1               	movwf	pulse_gen_C3@n_1+1
  1433  05C0  3182  2286  3185   	fcall	_pulse_gen_C3
  1434  05C3                     l1172:
  1435  05C3  0022               	movlb	2	; select bank2
  1436  05C4  120E               	bcf	14,4	;volatile
  1437  05C5  3002               	movlw	2
  1438  05C6  00F0               	movwf	pulse_gen_C3@n_1
  1439  05C7  3000               	movlw	0
  1440  05C8  00F1               	movwf	pulse_gen_C3@n_1+1
  1441  05C9  3182  2286  3185   	fcall	_pulse_gen_C3
  1442  05CC                     l1174:
  1443  05CC  0022               	movlb	2	; select bank2
  1444  05CD  160E               	bsf	14,4	;volatile
  1445  05CE  3004               	movlw	4
  1446  05CF  00F0               	movwf	pulse_gen_C3@n_1
  1447  05D0  3000               	movlw	0
  1448  05D1  00F1               	movwf	pulse_gen_C3@n_1+1
  1449  05D2  3182  2286  3185   	fcall	_pulse_gen_C3
  1450  05D5  2EA0               	goto	l77
  1451  05D6                     l71:	
  1452                           ;prset_clock.c: 100:         case 4: LATCbits.LATC4=1; pulse_gen_C3(2); LATCbits.LATC4=0
      +                          ; pulse_gen_C3(2); LATCbits.LATC4=1; pulse_gen_C3(2); LATCbits.LATC4=0; pulse_gen_C3(1);
      +                           break;
  1453                           
  1454  05D6  0022               	movlb	2	; select bank2
  1455  05D7  160E               	bsf	14,4	;volatile
  1456  05D8                     l1176:
  1457  05D8  3002               	movlw	2
  1458  05D9  00F0               	movwf	pulse_gen_C3@n_1
  1459  05DA  3000               	movlw	0
  1460  05DB  00F1               	movwf	pulse_gen_C3@n_1+1
  1461  05DC  3182  2286  3185   	fcall	_pulse_gen_C3
  1462  05DF                     l1178:
  1463  05DF  0022               	movlb	2	; select bank2
  1464  05E0  120E               	bcf	14,4	;volatile
  1465  05E1  3002               	movlw	2
  1466  05E2  00F0               	movwf	pulse_gen_C3@n_1
  1467  05E3  3000               	movlw	0
  1468  05E4  00F1               	movwf	pulse_gen_C3@n_1+1
  1469  05E5  3182  2286  3185   	fcall	_pulse_gen_C3
  1470  05E8                     l1180:
  1471  05E8  0022               	movlb	2	; select bank2
  1472  05E9  160E               	bsf	14,4	;volatile
  1473  05EA  3002               	movlw	2
  1474  05EB  00F0               	movwf	pulse_gen_C3@n_1
  1475  05EC  3000               	movlw	0
  1476  05ED  00F1               	movwf	pulse_gen_C3@n_1+1
  1477  05EE  3182  2286  3185   	fcall	_pulse_gen_C3
  1478  05F1                     l1182:
  1479  05F1  0022               	movlb	2	; select bank2
  1480  05F2  120E               	bcf	14,4	;volatile
  1481  05F3  3001               	movlw	1
  1482  05F4  00F0               	movwf	pulse_gen_C3@n_1
  1483  05F5  3000               	movlw	0
  1484  05F6  00F1               	movwf	pulse_gen_C3@n_1+1
  1485  05F7  3182  2286  3185   	fcall	_pulse_gen_C3
  1486  05FA  2EA0               	goto	l77
  1487  05FB                     l72:	
  1488                           ;prset_clock.c: 101:         case 5: LATCbits.LATC4=1; pulse_gen_C3(2); LATCbits.LATC4=0
      +                          ; pulse_gen_C3(1); LATCbits.LATC4=1; pulse_gen_C3(2);
  1489                           
  1490  05FB  0022               	movlb	2	; select bank2
  1491  05FC  160E               	bsf	14,4	;volatile
  1492  05FD                     l1184:
  1493  05FD  3002               	movlw	2
  1494  05FE  00F0               	movwf	pulse_gen_C3@n_1
  1495  05FF  3000               	movlw	0
  1496  0600  00F1               	movwf	pulse_gen_C3@n_1+1
  1497  0601  3182  2286  3185   	fcall	_pulse_gen_C3
  1498  0604                     l1186:
  1499  0604  0022               	movlb	2	; select bank2
  1500  0605  120E               	bcf	14,4	;volatile
  1501  0606  3001               	movlw	1
  1502  0607  00F0               	movwf	pulse_gen_C3@n_1
  1503  0608  3000               	movlw	0
  1504  0609  00F1               	movwf	pulse_gen_C3@n_1+1
  1505  060A  3182  2286  3185   	fcall	_pulse_gen_C3
  1506  060D                     l1188:
  1507  060D  0022               	movlb	2	; select bank2
  1508  060E  160E               	bsf	14,4	;volatile
  1509  060F  3002               	movlw	2
  1510  0610  00F0               	movwf	pulse_gen_C3@n_1
  1511  0611  3000               	movlw	0
  1512  0612  00F1               	movwf	pulse_gen_C3@n_1+1
  1513  0613  3182  2286  3185   	fcall	_pulse_gen_C3
  1514  0616                     l1190:
  1515                           
  1516                           ;prset_clock.c: 102:                 LATCbits.LATC4=0; pulse_gen_C3(1); LATCbits.LATC4=1
      +                          ; pulse_gen_C3(1); break;
  1517  0616  0022               	movlb	2	; select bank2
  1518  0617  120E               	bcf	14,4	;volatile
  1519  0618  3001               	movlw	1
  1520  0619  00F0               	movwf	pulse_gen_C3@n_1
  1521  061A  3000               	movlw	0
  1522  061B  00F1               	movwf	pulse_gen_C3@n_1+1
  1523  061C  3182  2286  3185   	fcall	_pulse_gen_C3
  1524  061F                     l1192:
  1525  061F  0022               	movlb	2	; select bank2
  1526  0620  160E               	bsf	14,4	;volatile
  1527  0621  3001               	movlw	1
  1528  0622  00F0               	movwf	pulse_gen_C3@n_1
  1529  0623  3000               	movlw	0
  1530  0624  00F1               	movwf	pulse_gen_C3@n_1+1
  1531  0625  3182  2286  3185   	fcall	_pulse_gen_C3
  1532  0628  2EA0               	goto	l77
  1533  0629                     l73:	
  1534                           ;prset_clock.c: 103:         case 6: LATCbits.LATC4=1; pulse_gen_C3(5); LATCbits.LATC4=0
      +                          ; pulse_gen_C3(1); LATCbits.LATC4=1; pulse_gen_C3(1); break;
  1535                           
  1536  0629  0022               	movlb	2	; select bank2
  1537  062A  160E               	bsf	14,4	;volatile
  1538  062B                     l1194:
  1539  062B  3005               	movlw	5
  1540  062C  00F0               	movwf	pulse_gen_C3@n_1
  1541  062D  3000               	movlw	0
  1542  062E  00F1               	movwf	pulse_gen_C3@n_1+1
  1543  062F  3182  2286  3185   	fcall	_pulse_gen_C3
  1544  0632                     l1196:
  1545  0632  0022               	movlb	2	; select bank2
  1546  0633  120E               	bcf	14,4	;volatile
  1547  0634  3001               	movlw	1
  1548  0635  00F0               	movwf	pulse_gen_C3@n_1
  1549  0636  3000               	movlw	0
  1550  0637  00F1               	movwf	pulse_gen_C3@n_1+1
  1551  0638  3182  2286  3185   	fcall	_pulse_gen_C3
  1552  063B                     l1198:
  1553  063B  0022               	movlb	2	; select bank2
  1554  063C  160E               	bsf	14,4	;volatile
  1555  063D  3001               	movlw	1
  1556  063E  00F0               	movwf	pulse_gen_C3@n_1
  1557  063F  3000               	movlw	0
  1558  0640  00F1               	movwf	pulse_gen_C3@n_1+1
  1559  0641  3182  2286  3185   	fcall	_pulse_gen_C3
  1560  0644  2EA0               	goto	l77
  1561  0645                     l74:	
  1562                           ;prset_clock.c: 104:         case 7: LATCbits.LATC4=0; pulse_gen_C3(4); LATCbits.LATC4=1
      +                          ; pulse_gen_C3(3); break;
  1563                           
  1564  0645  0022               	movlb	2	; select bank2
  1565  0646  120E               	bcf	14,4	;volatile
  1566  0647                     l1200:
  1567  0647  3004               	movlw	4
  1568  0648  00F0               	movwf	pulse_gen_C3@n_1
  1569  0649  3000               	movlw	0
  1570  064A  00F1               	movwf	pulse_gen_C3@n_1+1
  1571  064B  3182  2286  3185   	fcall	_pulse_gen_C3
  1572  064E                     l1202:
  1573  064E  0022               	movlb	2	; select bank2
  1574  064F  160E               	bsf	14,4	;volatile
  1575  0650  3003               	movlw	3
  1576  0651  00F0               	movwf	pulse_gen_C3@n_1
  1577  0652  3000               	movlw	0
  1578  0653  00F1               	movwf	pulse_gen_C3@n_1+1
  1579  0654  3182  2286  3185   	fcall	_pulse_gen_C3
  1580  0657  2EA0               	goto	l77
  1581  0658                     l75:	
  1582                           ;prset_clock.c: 105:         case 8: LATCbits.LATC4=1; pulse_gen_C3(7); break;
  1583                           
  1584  0658  0022               	movlb	2	; select bank2
  1585  0659  160E               	bsf	14,4	;volatile
  1586  065A                     l1204:
  1587  065A  3007               	movlw	7
  1588  065B  00F0               	movwf	pulse_gen_C3@n_1
  1589  065C  3000               	movlw	0
  1590  065D  00F1               	movwf	pulse_gen_C3@n_1+1
  1591  065E  3182  2286  3185   	fcall	_pulse_gen_C3
  1592  0661  2EA0               	goto	l77
  1593  0662                     l76:	
  1594                           ;prset_clock.c: 106:         default: LATCbits.LATC4=1; pulse_gen_C3(2); LATCbits.LATC4=
      +                          0; pulse_gen_C3(1); LATCbits.LATC4=1; pulse_gen_C3(4);
  1595                           
  1596  0662  0022               	movlb	2	; select bank2
  1597  0663  160E               	bsf	14,4	;volatile
  1598  0664                     l1206:
  1599  0664  3002               	movlw	2
  1600  0665  00F0               	movwf	pulse_gen_C3@n_1
  1601  0666  3000               	movlw	0
  1602  0667  00F1               	movwf	pulse_gen_C3@n_1+1
  1603  0668  3182  2286  3185   	fcall	_pulse_gen_C3
  1604  066B                     l1208:
  1605  066B  0022               	movlb	2	; select bank2
  1606  066C  120E               	bcf	14,4	;volatile
  1607  066D  3001               	movlw	1
  1608  066E  00F0               	movwf	pulse_gen_C3@n_1
  1609  066F  3000               	movlw	0
  1610  0670  00F1               	movwf	pulse_gen_C3@n_1+1
  1611  0671  3182  2286  3185   	fcall	_pulse_gen_C3
  1612  0674                     l1210:
  1613  0674  0022               	movlb	2	; select bank2
  1614  0675  160E               	bsf	14,4	;volatile
  1615  0676  3004               	movlw	4
  1616  0677  00F0               	movwf	pulse_gen_C3@n_1
  1617  0678  3000               	movlw	0
  1618  0679  00F1               	movwf	pulse_gen_C3@n_1+1
  1619  067A  3182  2286  3185   	fcall	_pulse_gen_C3
  1620                           
  1621                           ;prset_clock.c: 107:     }
  1622  067D  2EA0               	goto	l77
  1623  067E                     l1212:
  1624                           
  1625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1626                           ; Switch size 1, requested type "simple"
  1627                           ; Number of cases is 1, Range of values is 0 to 0
  1628                           ; switch strategies available:
  1629                           ; Name         Instructions Cycles
  1630                           ; simple_byte            4     3 (average)
  1631                           ; direct_byte            8     6 (fixed)
  1632                           ; jumptable            260     6 (fixed)
  1633                           ;	Chosen strategy is simple_byte
  1634  067E  087A               	movf	num_state_C4@digit_1+1,w
  1635  067F  3A00               	xorlw	0	; case 0
  1636  0680  1903               	skipnz
  1637  0681  2E83               	goto	l1494
  1638  0682  2E62               	goto	l76
  1639  0683                     l1494:
  1640                           
  1641                           ; Switch size 1, requested type "simple"
  1642                           ; Number of cases is 9, Range of values is 0 to 8
  1643                           ; switch strategies available:
  1644                           ; Name         Instructions Cycles
  1645                           ; direct_byte           24     6 (fixed)
  1646                           ; simple_byte           28    15 (average)
  1647                           ; jumptable            260     6 (fixed)
  1648                           ;	Chosen strategy is simple_byte
  1649  0683  0879               	movf	num_state_C4@digit_1,w
  1650  0684  3A00               	xorlw	0	; case 0
  1651  0685  1903               	skipnz
  1652  0686  2D5D               	goto	l66
  1653  0687  3A01               	xorlw	1	; case 1
  1654  0688  1903               	skipnz
  1655  0689  2D70               	goto	l68
  1656  068A  3A03               	xorlw	3	; case 2
  1657  068B  1903               	skipnz
  1658  068C  2D8C               	goto	l69
  1659  068D  3A01               	xorlw	1	; case 3
  1660  068E  1903               	skipnz
  1661  068F  2DBA               	goto	l70
  1662  0690  3A07               	xorlw	7	; case 4
  1663  0691  1903               	skipnz
  1664  0692  2DD6               	goto	l71
  1665  0693  3A01               	xorlw	1	; case 5
  1666  0694  1903               	skipnz
  1667  0695  2DFB               	goto	l72
  1668  0696  3A03               	xorlw	3	; case 6
  1669  0697  1903               	skipnz
  1670  0698  2E29               	goto	l73
  1671  0699  3A01               	xorlw	1	; case 7
  1672  069A  1903               	skipnz
  1673  069B  2E45               	goto	l74
  1674  069C  3A0F               	xorlw	15	; case 8
  1675  069D  1903               	skipnz
  1676  069E  2E58               	goto	l75
  1677  069F  2E62               	goto	l76
  1678  06A0                     l77:
  1679  06A0  0008               	return
  1680  06A1                     __end_of_num_state_C4:
  1681                           
  1682                           	psect	text4
  1683  0286                     __ptext4:	
  1684 ;; *************** function _pulse_gen_C3 *****************
  1685 ;; Defined at:
  1686 ;;		line 80 in file "prset_clock.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  n_1             2    0[COMMON] int 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  i_1             2    5[COMMON] int 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1700 ;;      Params:         2       0       0       0       0       0       0       0
  1701 ;;      Locals:         2       0       0       0       0       0       0       0
  1702 ;;      Temps:          3       0       0       0       0       0       0       0
  1703 ;;      Totals:         7       0       0       0       0       0       0       0
  1704 ;;Total ram usage:        7 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_num_state_C4
  1710 ;;		_stop_counting
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715  0286                     _pulse_gen_C3:	
  1716                           ;psect for function _pulse_gen_C3
  1717                           
  1718  0286                     l1068:	
  1719                           ;incstack = 0
  1720                           ; Regs used in _pulse_gen_C3: [wreg+status,2+status,0]
  1721                           
  1722                           
  1723                           ;prset_clock.c: 81:     for(int i_1=0;i_1<=(n_1-1);i_1++){
  1724  0286  01F5               	clrf	pulse_gen_C3@i_1
  1725  0287  01F6               	clrf	pulse_gen_C3@i_1+1
  1726  0288  2A90               	goto	l1072
  1727  0289                     l57:
  1728                           
  1729                           ;prset_clock.c: 82:         LATCbits.LATC3=1;
  1730  0289  0022               	movlb	2	; select bank2
  1731  028A  158E               	bsf	14,3	;volatile
  1732                           
  1733                           ;prset_clock.c: 83:         LATCbits.LATC3=0;
  1734  028B  118E               	bcf	14,3	;volatile
  1735  028C                     l1070:
  1736                           
  1737                           ;prset_clock.c: 84:     }
  1738  028C  3001               	movlw	1
  1739  028D  07F5               	addwf	pulse_gen_C3@i_1,f
  1740  028E  3000               	movlw	0
  1741  028F  3DF6               	addwfc	pulse_gen_C3@i_1+1,f
  1742  0290                     l1072:
  1743  0290  0870               	movf	pulse_gen_C3@n_1,w
  1744  0291  3EFF               	addlw	255
  1745  0292  00F2               	movwf	??_pulse_gen_C3
  1746  0293  30FF               	movlw	255
  1747  0294  3D71               	addwfc	pulse_gen_C3@n_1+1,w
  1748  0295  00F3               	movwf	??_pulse_gen_C3+1
  1749  0296  0873               	movf	??_pulse_gen_C3+1,w
  1750  0297  3A80               	xorlw	128
  1751  0298  00F4               	movwf	??_pulse_gen_C3+2
  1752  0299  0876               	movf	pulse_gen_C3@i_1+1,w
  1753  029A  3A80               	xorlw	128
  1754  029B  0274               	subwf	??_pulse_gen_C3+2,w
  1755  029C  1D03               	skipz
  1756  029D  2AA0               	goto	u365
  1757  029E  0875               	movf	pulse_gen_C3@i_1,w
  1758  029F  0272               	subwf	??_pulse_gen_C3,w
  1759  02A0                     u365:
  1760  02A0  1803               	skipnc
  1761  02A1  2AA3               	goto	u361
  1762  02A2  2AA4               	goto	u360
  1763  02A3                     u361:
  1764  02A3  2A89               	goto	l57
  1765  02A4                     u360:
  1766  02A4                     l59:
  1767  02A4  0008               	return
  1768  02A5                     __end_of_pulse_gen_C3:
  1769                           
  1770                           	psect	text5
  1771  0417                     __ptext5:	
  1772 ;; *************** function _num_state_C1 *****************
  1773 ;; Defined at:
  1774 ;;		line 42 in file "prset_clock.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  digit           2    7[COMMON] int 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1788 ;;      Params:         2       0       0       0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0       0
  1791 ;;      Totals:         2       0       0       0       0       0       0       0
  1792 ;;Total ram usage:        2 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 1
  1795 ;; This function calls:
  1796 ;;		_pulse_gen_C0
  1797 ;; This function is called by:
  1798 ;;		_sec_countdown
  1799 ;;		_stop_counting
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804  0417                     _num_state_C1:	
  1805                           ;psect for function _num_state_C1
  1806                           
  1807  0417                     l1076:	
  1808                           ;incstack = 0
  1809                           ; Regs used in _num_state_C1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1810                           
  1811                           
  1812                           ;prset_clock.c: 43:     switch(digit){
  1813  0417  2D39               	goto	l1140
  1814  0418                     l33:	
  1815                           ;prset_clock.c: 44:         case 0: LATCbits.LATC1=0; pulse_gen_C0(1); LATCbits.LATC1=1;
      +                           pulse_gen_C0(6); break;
  1816                           
  1817  0418  0022               	movlb	2	; select bank2
  1818  0419  108E               	bcf	14,1	;volatile
  1819  041A                     l1078:
  1820  041A  3001               	movlw	1
  1821  041B  00F0               	movwf	pulse_gen_C0@n
  1822  041C  3000               	movlw	0
  1823  041D  00F1               	movwf	pulse_gen_C0@n+1
  1824  041E  3182  2267  3184   	fcall	_pulse_gen_C0
  1825  0421                     l1080:
  1826  0421  0022               	movlb	2	; select bank2
  1827  0422  148E               	bsf	14,1	;volatile
  1828  0423  3006               	movlw	6
  1829  0424  00F0               	movwf	pulse_gen_C0@n
  1830  0425  3000               	movlw	0
  1831  0426  00F1               	movwf	pulse_gen_C0@n+1
  1832  0427  3182  2267  3184   	fcall	_pulse_gen_C0
  1833  042A  2D5B               	goto	l44
  1834  042B                     l35:	
  1835                           ;prset_clock.c: 45:         case 1: LATCbits.LATC1=0; pulse_gen_C0(4); LATCbits.LATC1=1;
      +                           pulse_gen_C0(2); LATCbits.LATC1=0; pulse_gen_C0(1); break;
  1836                           
  1837  042B  0022               	movlb	2	; select bank2
  1838  042C  108E               	bcf	14,1	;volatile
  1839  042D                     l1082:
  1840  042D  3004               	movlw	4
  1841  042E  00F0               	movwf	pulse_gen_C0@n
  1842  042F  3000               	movlw	0
  1843  0430  00F1               	movwf	pulse_gen_C0@n+1
  1844  0431  3182  2267  3184   	fcall	_pulse_gen_C0
  1845  0434                     l1084:
  1846  0434  0022               	movlb	2	; select bank2
  1847  0435  148E               	bsf	14,1	;volatile
  1848  0436  3002               	movlw	2
  1849  0437  00F0               	movwf	pulse_gen_C0@n
  1850  0438  3000               	movlw	0
  1851  0439  00F1               	movwf	pulse_gen_C0@n+1
  1852  043A  3182  2267  3184   	fcall	_pulse_gen_C0
  1853  043D                     l1086:
  1854  043D  0022               	movlb	2	; select bank2
  1855  043E  108E               	bcf	14,1	;volatile
  1856  043F  3001               	movlw	1
  1857  0440  00F0               	movwf	pulse_gen_C0@n
  1858  0441  3000               	movlw	0
  1859  0442  00F1               	movwf	pulse_gen_C0@n+1
  1860  0443  3182  2267  3184   	fcall	_pulse_gen_C0
  1861  0446  2D5B               	goto	l44
  1862  0447                     l36:	
  1863                           ;prset_clock.c: 46:         case 2: LATCbits.LATC1=1; pulse_gen_C0(1); LATCbits.LATC1=0;
      +                           pulse_gen_C0(1); LATCbits.LATC1=1; pulse_gen_C0(2);
  1864                           
  1865  0447  0022               	movlb	2	; select bank2
  1866  0448  148E               	bsf	14,1	;volatile
  1867  0449                     l1088:
  1868  0449  3001               	movlw	1
  1869  044A  00F0               	movwf	pulse_gen_C0@n
  1870  044B  3000               	movlw	0
  1871  044C  00F1               	movwf	pulse_gen_C0@n+1
  1872  044D  3182  2267  3184   	fcall	_pulse_gen_C0
  1873  0450                     l1090:
  1874  0450  0022               	movlb	2	; select bank2
  1875  0451  108E               	bcf	14,1	;volatile
  1876  0452  3001               	movlw	1
  1877  0453  00F0               	movwf	pulse_gen_C0@n
  1878  0454  3000               	movlw	0
  1879  0455  00F1               	movwf	pulse_gen_C0@n+1
  1880  0456  3182  2267  3184   	fcall	_pulse_gen_C0
  1881  0459                     l1092:
  1882  0459  0022               	movlb	2	; select bank2
  1883  045A  148E               	bsf	14,1	;volatile
  1884  045B  3002               	movlw	2
  1885  045C  00F0               	movwf	pulse_gen_C0@n
  1886  045D  3000               	movlw	0
  1887  045E  00F1               	movwf	pulse_gen_C0@n+1
  1888  045F  3182  2267  3184   	fcall	_pulse_gen_C0
  1889  0462                     l1094:
  1890                           
  1891                           ;prset_clock.c: 47:                 LATCbits.LATC1=0; pulse_gen_C0(1); LATCbits.LATC1=1;
      +                           pulse_gen_C0(2); break;
  1892  0462  0022               	movlb	2	; select bank2
  1893  0463  108E               	bcf	14,1	;volatile
  1894  0464  3001               	movlw	1
  1895  0465  00F0               	movwf	pulse_gen_C0@n
  1896  0466  3000               	movlw	0
  1897  0467  00F1               	movwf	pulse_gen_C0@n+1
  1898  0468  3182  2267  3184   	fcall	_pulse_gen_C0
  1899  046B                     l1096:
  1900  046B  0022               	movlb	2	; select bank2
  1901  046C  148E               	bsf	14,1	;volatile
  1902  046D  3002               	movlw	2
  1903  046E  00F0               	movwf	pulse_gen_C0@n
  1904  046F  3000               	movlw	0
  1905  0470  00F1               	movwf	pulse_gen_C0@n+1
  1906  0471  3182  2267  3184   	fcall	_pulse_gen_C0
  1907  0474  2D5B               	goto	l44
  1908  0475                     l37:	
  1909                           ;prset_clock.c: 48:         case 3: LATCbits.LATC1=1; pulse_gen_C0(1); LATCbits.LATC1=0;
      +                           pulse_gen_C0(2); LATCbits.LATC1=1; pulse_gen_C0(4); break;
  1910                           
  1911  0475  0022               	movlb	2	; select bank2
  1912  0476  148E               	bsf	14,1	;volatile
  1913  0477                     l1098:
  1914  0477  3001               	movlw	1
  1915  0478  00F0               	movwf	pulse_gen_C0@n
  1916  0479  3000               	movlw	0
  1917  047A  00F1               	movwf	pulse_gen_C0@n+1
  1918  047B  3182  2267  3184   	fcall	_pulse_gen_C0
  1919  047E                     l1100:
  1920  047E  0022               	movlb	2	; select bank2
  1921  047F  108E               	bcf	14,1	;volatile
  1922  0480  3002               	movlw	2
  1923  0481  00F0               	movwf	pulse_gen_C0@n
  1924  0482  3000               	movlw	0
  1925  0483  00F1               	movwf	pulse_gen_C0@n+1
  1926  0484  3182  2267  3184   	fcall	_pulse_gen_C0
  1927  0487                     l1102:
  1928  0487  0022               	movlb	2	; select bank2
  1929  0488  148E               	bsf	14,1	;volatile
  1930  0489  3004               	movlw	4
  1931  048A  00F0               	movwf	pulse_gen_C0@n
  1932  048B  3000               	movlw	0
  1933  048C  00F1               	movwf	pulse_gen_C0@n+1
  1934  048D  3182  2267  3184   	fcall	_pulse_gen_C0
  1935  0490  2D5B               	goto	l44
  1936  0491                     l38:	
  1937                           ;prset_clock.c: 49:         case 4: LATCbits.LATC1=1; pulse_gen_C0(2); LATCbits.LATC1=0;
      +                           pulse_gen_C0(2); LATCbits.LATC1=1; pulse_gen_C0(2); LATCbits.LATC1=0; pulse_gen_C0(1); 
      +                          break;
  1938                           
  1939  0491  0022               	movlb	2	; select bank2
  1940  0492  148E               	bsf	14,1	;volatile
  1941  0493                     l1104:
  1942  0493  3002               	movlw	2
  1943  0494  00F0               	movwf	pulse_gen_C0@n
  1944  0495  3000               	movlw	0
  1945  0496  00F1               	movwf	pulse_gen_C0@n+1
  1946  0497  3182  2267  3184   	fcall	_pulse_gen_C0
  1947  049A                     l1106:
  1948  049A  0022               	movlb	2	; select bank2
  1949  049B  108E               	bcf	14,1	;volatile
  1950  049C  3002               	movlw	2
  1951  049D  00F0               	movwf	pulse_gen_C0@n
  1952  049E  3000               	movlw	0
  1953  049F  00F1               	movwf	pulse_gen_C0@n+1
  1954  04A0  3182  2267  3184   	fcall	_pulse_gen_C0
  1955  04A3                     l1108:
  1956  04A3  0022               	movlb	2	; select bank2
  1957  04A4  148E               	bsf	14,1	;volatile
  1958  04A5  3002               	movlw	2
  1959  04A6  00F0               	movwf	pulse_gen_C0@n
  1960  04A7  3000               	movlw	0
  1961  04A8  00F1               	movwf	pulse_gen_C0@n+1
  1962  04A9  3182  2267  3184   	fcall	_pulse_gen_C0
  1963  04AC                     l1110:
  1964  04AC  0022               	movlb	2	; select bank2
  1965  04AD  108E               	bcf	14,1	;volatile
  1966  04AE  3001               	movlw	1
  1967  04AF  00F0               	movwf	pulse_gen_C0@n
  1968  04B0  3000               	movlw	0
  1969  04B1  00F1               	movwf	pulse_gen_C0@n+1
  1970  04B2  3182  2267  3184   	fcall	_pulse_gen_C0
  1971  04B5  2D5B               	goto	l44
  1972  04B6                     l39:	
  1973                           ;prset_clock.c: 50:         case 5: LATCbits.LATC1=1; pulse_gen_C0(2); LATCbits.LATC1=0;
      +                           pulse_gen_C0(1); LATCbits.LATC1=1; pulse_gen_C0(2);
  1974                           
  1975  04B6  0022               	movlb	2	; select bank2
  1976  04B7  148E               	bsf	14,1	;volatile
  1977  04B8                     l1112:
  1978  04B8  3002               	movlw	2
  1979  04B9  00F0               	movwf	pulse_gen_C0@n
  1980  04BA  3000               	movlw	0
  1981  04BB  00F1               	movwf	pulse_gen_C0@n+1
  1982  04BC  3182  2267  3184   	fcall	_pulse_gen_C0
  1983  04BF                     l1114:
  1984  04BF  0022               	movlb	2	; select bank2
  1985  04C0  108E               	bcf	14,1	;volatile
  1986  04C1  3001               	movlw	1
  1987  04C2  00F0               	movwf	pulse_gen_C0@n
  1988  04C3  3000               	movlw	0
  1989  04C4  00F1               	movwf	pulse_gen_C0@n+1
  1990  04C5  3182  2267  3184   	fcall	_pulse_gen_C0
  1991  04C8                     l1116:
  1992  04C8  0022               	movlb	2	; select bank2
  1993  04C9  148E               	bsf	14,1	;volatile
  1994  04CA  3002               	movlw	2
  1995  04CB  00F0               	movwf	pulse_gen_C0@n
  1996  04CC  3000               	movlw	0
  1997  04CD  00F1               	movwf	pulse_gen_C0@n+1
  1998  04CE  3182  2267  3184   	fcall	_pulse_gen_C0
  1999  04D1                     l1118:
  2000                           
  2001                           ;prset_clock.c: 51:                 LATCbits.LATC1=0; pulse_gen_C0(1); LATCbits.LATC1=1;
      +                           pulse_gen_C0(1); break;
  2002  04D1  0022               	movlb	2	; select bank2
  2003  04D2  108E               	bcf	14,1	;volatile
  2004  04D3  3001               	movlw	1
  2005  04D4  00F0               	movwf	pulse_gen_C0@n
  2006  04D5  3000               	movlw	0
  2007  04D6  00F1               	movwf	pulse_gen_C0@n+1
  2008  04D7  3182  2267  3184   	fcall	_pulse_gen_C0
  2009  04DA                     l1120:
  2010  04DA  0022               	movlb	2	; select bank2
  2011  04DB  148E               	bsf	14,1	;volatile
  2012  04DC  3001               	movlw	1
  2013  04DD  00F0               	movwf	pulse_gen_C0@n
  2014  04DE  3000               	movlw	0
  2015  04DF  00F1               	movwf	pulse_gen_C0@n+1
  2016  04E0  3182  2267  3184   	fcall	_pulse_gen_C0
  2017  04E3  2D5B               	goto	l44
  2018  04E4                     l40:	
  2019                           ;prset_clock.c: 52:         case 6: LATCbits.LATC1=1; pulse_gen_C0(5); LATCbits.LATC1=0;
      +                           pulse_gen_C0(1); LATCbits.LATC1=1; pulse_gen_C0(1); break;
  2020                           
  2021  04E4  0022               	movlb	2	; select bank2
  2022  04E5  148E               	bsf	14,1	;volatile
  2023  04E6                     l1122:
  2024  04E6  3005               	movlw	5
  2025  04E7  00F0               	movwf	pulse_gen_C0@n
  2026  04E8  3000               	movlw	0
  2027  04E9  00F1               	movwf	pulse_gen_C0@n+1
  2028  04EA  3182  2267  3184   	fcall	_pulse_gen_C0
  2029  04ED                     l1124:
  2030  04ED  0022               	movlb	2	; select bank2
  2031  04EE  108E               	bcf	14,1	;volatile
  2032  04EF  3001               	movlw	1
  2033  04F0  00F0               	movwf	pulse_gen_C0@n
  2034  04F1  3000               	movlw	0
  2035  04F2  00F1               	movwf	pulse_gen_C0@n+1
  2036  04F3  3182  2267  3184   	fcall	_pulse_gen_C0
  2037  04F6                     l1126:
  2038  04F6  0022               	movlb	2	; select bank2
  2039  04F7  148E               	bsf	14,1	;volatile
  2040  04F8  3001               	movlw	1
  2041  04F9  00F0               	movwf	pulse_gen_C0@n
  2042  04FA  3000               	movlw	0
  2043  04FB  00F1               	movwf	pulse_gen_C0@n+1
  2044  04FC  3182  2267  3184   	fcall	_pulse_gen_C0
  2045  04FF  2D5B               	goto	l44
  2046  0500                     l41:	
  2047                           ;prset_clock.c: 53:         case 7: LATCbits.LATC1=0; pulse_gen_C0(4); LATCbits.LATC1=1;
      +                           pulse_gen_C0(3); break;
  2048                           
  2049  0500  0022               	movlb	2	; select bank2
  2050  0501  108E               	bcf	14,1	;volatile
  2051  0502                     l1128:
  2052  0502  3004               	movlw	4
  2053  0503  00F0               	movwf	pulse_gen_C0@n
  2054  0504  3000               	movlw	0
  2055  0505  00F1               	movwf	pulse_gen_C0@n+1
  2056  0506  3182  2267  3184   	fcall	_pulse_gen_C0
  2057  0509                     l1130:
  2058  0509  0022               	movlb	2	; select bank2
  2059  050A  148E               	bsf	14,1	;volatile
  2060  050B  3003               	movlw	3
  2061  050C  00F0               	movwf	pulse_gen_C0@n
  2062  050D  3000               	movlw	0
  2063  050E  00F1               	movwf	pulse_gen_C0@n+1
  2064  050F  3182  2267  3184   	fcall	_pulse_gen_C0
  2065  0512  2D5B               	goto	l44
  2066  0513                     l42:	
  2067                           ;prset_clock.c: 54:         case 8: LATCbits.LATC1=1; pulse_gen_C0(7); break;
  2068                           
  2069  0513  0022               	movlb	2	; select bank2
  2070  0514  148E               	bsf	14,1	;volatile
  2071  0515                     l1132:
  2072  0515  3007               	movlw	7
  2073  0516  00F0               	movwf	pulse_gen_C0@n
  2074  0517  3000               	movlw	0
  2075  0518  00F1               	movwf	pulse_gen_C0@n+1
  2076  0519  3182  2267  3184   	fcall	_pulse_gen_C0
  2077  051C  2D5B               	goto	l44
  2078  051D                     l43:	
  2079                           ;prset_clock.c: 55:         default: LATCbits.LATC1=1; pulse_gen_C0(2); LATCbits.LATC1=0
      +                          ; pulse_gen_C0(1); LATCbits.LATC1=1; pulse_gen_C0(4);
  2080                           
  2081  051D  0022               	movlb	2	; select bank2
  2082  051E  148E               	bsf	14,1	;volatile
  2083  051F                     l1134:
  2084  051F  3002               	movlw	2
  2085  0520  00F0               	movwf	pulse_gen_C0@n
  2086  0521  3000               	movlw	0
  2087  0522  00F1               	movwf	pulse_gen_C0@n+1
  2088  0523  3182  2267  3184   	fcall	_pulse_gen_C0
  2089  0526                     l1136:
  2090  0526  0022               	movlb	2	; select bank2
  2091  0527  108E               	bcf	14,1	;volatile
  2092  0528  3001               	movlw	1
  2093  0529  00F0               	movwf	pulse_gen_C0@n
  2094  052A  3000               	movlw	0
  2095  052B  00F1               	movwf	pulse_gen_C0@n+1
  2096  052C  3182  2267  3184   	fcall	_pulse_gen_C0
  2097  052F                     l1138:
  2098  052F  0022               	movlb	2	; select bank2
  2099  0530  148E               	bsf	14,1	;volatile
  2100  0531  3004               	movlw	4
  2101  0532  00F0               	movwf	pulse_gen_C0@n
  2102  0533  3000               	movlw	0
  2103  0534  00F1               	movwf	pulse_gen_C0@n+1
  2104  0535  3182  2267  3184   	fcall	_pulse_gen_C0
  2105                           
  2106                           ;prset_clock.c: 56:     }
  2107  0538  2D5B               	goto	l44
  2108  0539                     l1140:
  2109                           
  2110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2111                           ; Switch size 1, requested type "simple"
  2112                           ; Number of cases is 1, Range of values is 0 to 0
  2113                           ; switch strategies available:
  2114                           ; Name         Instructions Cycles
  2115                           ; simple_byte            4     3 (average)
  2116                           ; direct_byte            8     6 (fixed)
  2117                           ; jumptable            260     6 (fixed)
  2118                           ;	Chosen strategy is simple_byte
  2119  0539  0878               	movf	num_state_C1@digit+1,w
  2120  053A  3A00               	xorlw	0	; case 0
  2121  053B  1903               	skipnz
  2122  053C  2D3E               	goto	l1496
  2123  053D  2D1D               	goto	l43
  2124  053E                     l1496:
  2125                           
  2126                           ; Switch size 1, requested type "simple"
  2127                           ; Number of cases is 9, Range of values is 0 to 8
  2128                           ; switch strategies available:
  2129                           ; Name         Instructions Cycles
  2130                           ; direct_byte           24     6 (fixed)
  2131                           ; simple_byte           28    15 (average)
  2132                           ; jumptable            260     6 (fixed)
  2133                           ;	Chosen strategy is simple_byte
  2134  053E  0877               	movf	num_state_C1@digit,w
  2135  053F  3A00               	xorlw	0	; case 0
  2136  0540  1903               	skipnz
  2137  0541  2C18               	goto	l33
  2138  0542  3A01               	xorlw	1	; case 1
  2139  0543  1903               	skipnz
  2140  0544  2C2B               	goto	l35
  2141  0545  3A03               	xorlw	3	; case 2
  2142  0546  1903               	skipnz
  2143  0547  2C47               	goto	l36
  2144  0548  3A01               	xorlw	1	; case 3
  2145  0549  1903               	skipnz
  2146  054A  2C75               	goto	l37
  2147  054B  3A07               	xorlw	7	; case 4
  2148  054C  1903               	skipnz
  2149  054D  2C91               	goto	l38
  2150  054E  3A01               	xorlw	1	; case 5
  2151  054F  1903               	skipnz
  2152  0550  2CB6               	goto	l39
  2153  0551  3A03               	xorlw	3	; case 6
  2154  0552  1903               	skipnz
  2155  0553  2CE4               	goto	l40
  2156  0554  3A01               	xorlw	1	; case 7
  2157  0555  1903               	skipnz
  2158  0556  2D00               	goto	l41
  2159  0557  3A0F               	xorlw	15	; case 8
  2160  0558  1903               	skipnz
  2161  0559  2D13               	goto	l42
  2162  055A  2D1D               	goto	l43
  2163  055B                     l44:
  2164  055B  0008               	return
  2165  055C                     __end_of_num_state_C1:
  2166                           
  2167                           	psect	text6
  2168  0267                     __ptext6:	
  2169 ;; *************** function _pulse_gen_C0 *****************
  2170 ;; Defined at:
  2171 ;;		line 29 in file "prset_clock.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  n               2    0[COMMON] int 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  i               2    5[COMMON] int 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2185 ;;      Params:         2       0       0       0       0       0       0       0
  2186 ;;      Locals:         2       0       0       0       0       0       0       0
  2187 ;;      Temps:          3       0       0       0       0       0       0       0
  2188 ;;      Totals:         7       0       0       0       0       0       0       0
  2189 ;;Total ram usage:        7 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_num_state_C1
  2195 ;;		_sec_countdown
  2196 ;;		_stop_counting
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201  0267                     _pulse_gen_C0:	
  2202                           ;psect for function _pulse_gen_C0
  2203                           
  2204  0267                     l1062:	
  2205                           ;incstack = 0
  2206                           ; Regs used in _pulse_gen_C0: [wreg+status,2+status,0]
  2207                           
  2208                           
  2209                           ;prset_clock.c: 30:     for(int i=0;i<=(n-1);i++){
  2210  0267  01F5               	clrf	pulse_gen_C0@i
  2211  0268  01F6               	clrf	pulse_gen_C0@i+1
  2212  0269  2A71               	goto	l1066
  2213  026A                     l24:
  2214                           
  2215                           ;prset_clock.c: 31:         LATCbits.LATC0=1;
  2216  026A  0022               	movlb	2	; select bank2
  2217  026B  140E               	bsf	14,0	;volatile
  2218                           
  2219                           ;prset_clock.c: 32:         LATCbits.LATC0=0;
  2220  026C  100E               	bcf	14,0	;volatile
  2221  026D                     l1064:
  2222                           
  2223                           ;prset_clock.c: 33:     }
  2224  026D  3001               	movlw	1
  2225  026E  07F5               	addwf	pulse_gen_C0@i,f
  2226  026F  3000               	movlw	0
  2227  0270  3DF6               	addwfc	pulse_gen_C0@i+1,f
  2228  0271                     l1066:
  2229  0271  0870               	movf	pulse_gen_C0@n,w
  2230  0272  3EFF               	addlw	255
  2231  0273  00F2               	movwf	??_pulse_gen_C0
  2232  0274  30FF               	movlw	255
  2233  0275  3D71               	addwfc	pulse_gen_C0@n+1,w
  2234  0276  00F3               	movwf	??_pulse_gen_C0+1
  2235  0277  0873               	movf	??_pulse_gen_C0+1,w
  2236  0278  3A80               	xorlw	128
  2237  0279  00F4               	movwf	??_pulse_gen_C0+2
  2238  027A  0876               	movf	pulse_gen_C0@i+1,w
  2239  027B  3A80               	xorlw	128
  2240  027C  0274               	subwf	??_pulse_gen_C0+2,w
  2241  027D  1D03               	skipz
  2242  027E  2A81               	goto	u355
  2243  027F  0875               	movf	pulse_gen_C0@i,w
  2244  0280  0272               	subwf	??_pulse_gen_C0,w
  2245  0281                     u355:
  2246  0281  1803               	skipnc
  2247  0282  2A84               	goto	u351
  2248  0283  2A85               	goto	u350
  2249  0284                     u351:
  2250  0284  2A6A               	goto	l24
  2251  0285                     u350:
  2252  0285                     l26:
  2253  0285  0008               	return
  2254  0286                     __end_of_pulse_gen_C0:
  2255                           
  2256                           	psect	text7
  2257  0263                     __ptext7:	
  2258 ;; *************** function _latch_gen_C5 *****************
  2259 ;; Defined at:
  2260 ;;		line 88 in file "prset_clock.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		None
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2274 ;;      Params:         0       0       0       0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_stop_counting
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288  0263                     _latch_gen_C5:	
  2289                           ;psect for function _latch_gen_C5
  2290                           
  2291  0263                     l1146:	
  2292                           ;incstack = 0
  2293                           ; Regs used in _latch_gen_C5: []
  2294                           
  2295                           
  2296                           ;prset_clock.c: 89:     LATCbits.LATC5=1;
  2297  0263  0022               	movlb	2	; select bank2
  2298  0264  168E               	bsf	14,5	;volatile
  2299                           
  2300                           ;prset_clock.c: 90:     LATCbits.LATC5=0;
  2301  0265  128E               	bcf	14,5	;volatile
  2302  0266                     l62:	
  2303                           ;prset_clock.c: 91:     return;
  2304                           
  2305  0266  0008               	return
  2306  0267                     __end_of_latch_gen_C5:
  2307                           
  2308                           	psect	text8
  2309  025F                     __ptext8:	
  2310 ;; *************** function _latch_gen_C2 *****************
  2311 ;; Defined at:
  2312 ;;		line 37 in file "prset_clock.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		None
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2326 ;;      Params:         0       0       0       0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0       0       0       0
  2329 ;;      Totals:         0       0       0       0       0       0       0       0
  2330 ;;Total ram usage:        0 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_sec_countdown
  2336 ;;		_stop_counting
  2337 ;;		_main
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341  025F                     _latch_gen_C2:	
  2342                           ;psect for function _latch_gen_C2
  2343                           
  2344  025F                     l1074:	
  2345                           ;incstack = 0
  2346                           ; Regs used in _latch_gen_C2: []
  2347                           
  2348                           
  2349                           ;prset_clock.c: 38:     LATCbits.LATC2=1;
  2350  025F  0022               	movlb	2	; select bank2
  2351  0260  150E               	bsf	14,2	;volatile
  2352                           
  2353                           ;prset_clock.c: 39:     LATCbits.LATC2=0;
  2354  0261  110E               	bcf	14,2	;volatile
  2355  0262                     l29:	
  2356                           ;prset_clock.c: 40:     return;
  2357                           
  2358  0262  0008               	return
  2359  0263                     __end_of_latch_gen_C2:
  2360                           
  2361                           	psect	text9
  2362  02F5                     __ptext9:	
  2363 ;; *************** function ___awmod *****************
  2364 ;; Defined at:
  2365 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  divisor         2    0[COMMON] int 
  2368 ;;  dividend        2    2[COMMON] int 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  sign            1    6[COMMON] unsigned char 
  2371 ;;  counter         1    5[COMMON] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  2    0[COMMON] int 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2381 ;;      Params:         4       0       0       0       0       0       0       0
  2382 ;;      Locals:         2       0       0       0       0       0       0       0
  2383 ;;      Temps:          1       0       0       0       0       0       0       0
  2384 ;;      Totals:         7       0       0       0       0       0       0       0
  2385 ;;Total ram usage:        7 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_stop_counting
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395  02F5                     ___awmod:	
  2396                           ;psect for function ___awmod
  2397                           
  2398  02F5                     l1262:	
  2399                           ;incstack = 0
  2400                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2401                           
  2402  02F5  01F6               	clrf	___awmod@sign
  2403  02F6                     l1264:
  2404  02F6  1FF3               	btfss	___awmod@dividend+1,7
  2405  02F7  2AF9               	goto	u471
  2406  02F8  2AFA               	goto	u470
  2407  02F9                     u471:
  2408  02F9  2B01               	goto	l1270
  2409  02FA                     u470:
  2410  02FA                     l1266:
  2411  02FA  09F2               	comf	___awmod@dividend,f
  2412  02FB  09F3               	comf	___awmod@dividend+1,f
  2413  02FC  0AF2               	incf	___awmod@dividend,f
  2414  02FD  1903               	skipnz
  2415  02FE  0AF3               	incf	___awmod@dividend+1,f
  2416  02FF                     l1268:
  2417  02FF  01F6               	clrf	___awmod@sign
  2418  0300  0AF6               	incf	___awmod@sign,f
  2419  0301                     l1270:
  2420  0301  1FF1               	btfss	___awmod@divisor+1,7
  2421  0302  2B04               	goto	u481
  2422  0303  2B05               	goto	u480
  2423  0304                     u481:
  2424  0304  2B0A               	goto	l1274
  2425  0305                     u480:
  2426  0305                     l1272:
  2427  0305  09F0               	comf	___awmod@divisor,f
  2428  0306  09F1               	comf	___awmod@divisor+1,f
  2429  0307  0AF0               	incf	___awmod@divisor,f
  2430  0308  1903               	skipnz
  2431  0309  0AF1               	incf	___awmod@divisor+1,f
  2432  030A                     l1274:
  2433  030A  0870               	movf	___awmod@divisor,w
  2434  030B  0471               	iorwf	___awmod@divisor+1,w
  2435  030C  1903               	btfsc	3,2
  2436  030D  2B0F               	goto	u491
  2437  030E  2B10               	goto	u490
  2438  030F                     u491:
  2439  030F  2B39               	goto	l1292
  2440  0310                     u490:
  2441  0310                     l1276:
  2442  0310  01F5               	clrf	___awmod@counter
  2443  0311  0AF5               	incf	___awmod@counter,f
  2444  0312  2B1C               	goto	l1282
  2445  0313                     l1278:
  2446  0313  3001               	movlw	1
  2447  0314                     u505:
  2448  0314  35F0               	lslf	___awmod@divisor,f
  2449  0315  0DF1               	rlf	___awmod@divisor+1,f
  2450  0316  0B89               	decfsz	9,f
  2451  0317  2B14               	goto	u505
  2452  0318                     l1280:
  2453  0318  3001               	movlw	1
  2454  0319  00F4               	movwf	??___awmod
  2455  031A  0874               	movf	??___awmod,w
  2456  031B  07F5               	addwf	___awmod@counter,f
  2457  031C                     l1282:
  2458  031C  1FF1               	btfss	___awmod@divisor+1,7
  2459  031D  2B1F               	goto	u511
  2460  031E  2B20               	goto	u510
  2461  031F                     u511:
  2462  031F  2B13               	goto	l1278
  2463  0320                     u510:
  2464  0320                     l1284:
  2465  0320  0871               	movf	___awmod@divisor+1,w
  2466  0321  0273               	subwf	___awmod@dividend+1,w
  2467  0322  1D03               	skipz
  2468  0323  2B26               	goto	u525
  2469  0324  0870               	movf	___awmod@divisor,w
  2470  0325  0272               	subwf	___awmod@dividend,w
  2471  0326                     u525:
  2472  0326  1C03               	skipc
  2473  0327  2B29               	goto	u521
  2474  0328  2B2A               	goto	u520
  2475  0329                     u521:
  2476  0329  2B2E               	goto	l1288
  2477  032A                     u520:
  2478  032A                     l1286:
  2479  032A  0870               	movf	___awmod@divisor,w
  2480  032B  02F2               	subwf	___awmod@dividend,f
  2481  032C  0871               	movf	___awmod@divisor+1,w
  2482  032D  3BF3               	subwfb	___awmod@dividend+1,f
  2483  032E                     l1288:
  2484  032E  3001               	movlw	1
  2485  032F                     u535:
  2486  032F  36F1               	lsrf	___awmod@divisor+1,f
  2487  0330  0CF0               	rrf	___awmod@divisor,f
  2488  0331  0B89               	decfsz	9,f
  2489  0332  2B2F               	goto	u535
  2490  0333                     l1290:
  2491  0333  3001               	movlw	1
  2492  0334  02F5               	subwf	___awmod@counter,f
  2493  0335  1D03               	btfss	3,2
  2494  0336  2B38               	goto	u541
  2495  0337  2B39               	goto	u540
  2496  0338                     u541:
  2497  0338  2B20               	goto	l1284
  2498  0339                     u540:
  2499  0339                     l1292:
  2500  0339  0876               	movf	___awmod@sign,w
  2501  033A  1903               	btfsc	3,2
  2502  033B  2B3D               	goto	u551
  2503  033C  2B3E               	goto	u550
  2504  033D                     u551:
  2505  033D  2B43               	goto	l1296
  2506  033E                     u550:
  2507  033E                     l1294:
  2508  033E  09F2               	comf	___awmod@dividend,f
  2509  033F  09F3               	comf	___awmod@dividend+1,f
  2510  0340  0AF2               	incf	___awmod@dividend,f
  2511  0341  1903               	skipnz
  2512  0342  0AF3               	incf	___awmod@dividend+1,f
  2513  0343                     l1296:
  2514  0343  0873               	movf	___awmod@dividend+1,w
  2515  0344  00F1               	movwf	?___awmod+1
  2516  0345  0872               	movf	___awmod@dividend,w
  2517  0346  00F0               	movwf	?___awmod
  2518  0347                     l338:
  2519  0347  0008               	return
  2520  0348                     __end_of___awmod:
  2521                           
  2522                           	psect	text10
  2523  0348                     __ptext10:	
  2524 ;; *************** function ___awdiv *****************
  2525 ;; Defined at:
  2526 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  divisor         2    0[COMMON] int 
  2529 ;;  dividend        2    2[COMMON] int 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  quotient        2    7[COMMON] int 
  2532 ;;  sign            1    6[COMMON] unsigned char 
  2533 ;;  counter         1    5[COMMON] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  2    0[COMMON] int 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2543 ;;      Params:         4       0       0       0       0       0       0       0
  2544 ;;      Locals:         4       0       0       0       0       0       0       0
  2545 ;;      Temps:          1       0       0       0       0       0       0       0
  2546 ;;      Totals:         9       0       0       0       0       0       0       0
  2547 ;;Total ram usage:        9 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_stop_counting
  2553 ;;		_main
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557  0348                     ___awdiv:	
  2558                           ;psect for function ___awdiv
  2559                           
  2560  0348                     l1218:	
  2561                           ;incstack = 0
  2562                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2563                           
  2564  0348  01F6               	clrf	___awdiv@sign
  2565  0349                     l1220:
  2566  0349  1FF1               	btfss	___awdiv@divisor+1,7
  2567  034A  2B4C               	goto	u371
  2568  034B  2B4D               	goto	u370
  2569  034C                     u371:
  2570  034C  2B54               	goto	l1226
  2571  034D                     u370:
  2572  034D                     l1222:
  2573  034D  09F0               	comf	___awdiv@divisor,f
  2574  034E  09F1               	comf	___awdiv@divisor+1,f
  2575  034F  0AF0               	incf	___awdiv@divisor,f
  2576  0350  1903               	skipnz
  2577  0351  0AF1               	incf	___awdiv@divisor+1,f
  2578  0352                     l1224:
  2579  0352  01F6               	clrf	___awdiv@sign
  2580  0353  0AF6               	incf	___awdiv@sign,f
  2581  0354                     l1226:
  2582  0354  1FF3               	btfss	___awdiv@dividend+1,7
  2583  0355  2B57               	goto	u381
  2584  0356  2B58               	goto	u380
  2585  0357                     u381:
  2586  0357  2B61               	goto	l1232
  2587  0358                     u380:
  2588  0358                     l1228:
  2589  0358  09F2               	comf	___awdiv@dividend,f
  2590  0359  09F3               	comf	___awdiv@dividend+1,f
  2591  035A  0AF2               	incf	___awdiv@dividend,f
  2592  035B  1903               	skipnz
  2593  035C  0AF3               	incf	___awdiv@dividend+1,f
  2594  035D                     l1230:
  2595  035D  3001               	movlw	1
  2596  035E  00F4               	movwf	??___awdiv
  2597  035F  0874               	movf	??___awdiv,w
  2598  0360  06F6               	xorwf	___awdiv@sign,f
  2599  0361                     l1232:
  2600  0361  01F7               	clrf	___awdiv@quotient
  2601  0362  01F8               	clrf	___awdiv@quotient+1
  2602  0363                     l1234:
  2603  0363  0870               	movf	___awdiv@divisor,w
  2604  0364  0471               	iorwf	___awdiv@divisor+1,w
  2605  0365  1903               	btfsc	3,2
  2606  0366  2B68               	goto	u391
  2607  0367  2B69               	goto	u390
  2608  0368                     u391:
  2609  0368  2B98               	goto	l1254
  2610  0369                     u390:
  2611  0369                     l1236:
  2612  0369  01F5               	clrf	___awdiv@counter
  2613  036A  0AF5               	incf	___awdiv@counter,f
  2614  036B  2B75               	goto	l1242
  2615  036C                     l1238:
  2616  036C  3001               	movlw	1
  2617  036D                     u405:
  2618  036D  35F0               	lslf	___awdiv@divisor,f
  2619  036E  0DF1               	rlf	___awdiv@divisor+1,f
  2620  036F  0B89               	decfsz	9,f
  2621  0370  2B6D               	goto	u405
  2622  0371                     l1240:
  2623  0371  3001               	movlw	1
  2624  0372  00F4               	movwf	??___awdiv
  2625  0373  0874               	movf	??___awdiv,w
  2626  0374  07F5               	addwf	___awdiv@counter,f
  2627  0375                     l1242:
  2628  0375  1FF1               	btfss	___awdiv@divisor+1,7
  2629  0376  2B78               	goto	u411
  2630  0377  2B79               	goto	u410
  2631  0378                     u411:
  2632  0378  2B6C               	goto	l1238
  2633  0379                     u410:
  2634  0379                     l1244:
  2635  0379  3001               	movlw	1
  2636  037A                     u425:
  2637  037A  35F7               	lslf	___awdiv@quotient,f
  2638  037B  0DF8               	rlf	___awdiv@quotient+1,f
  2639  037C  0B89               	decfsz	9,f
  2640  037D  2B7A               	goto	u425
  2641  037E  0871               	movf	___awdiv@divisor+1,w
  2642  037F  0273               	subwf	___awdiv@dividend+1,w
  2643  0380  1D03               	skipz
  2644  0381  2B84               	goto	u435
  2645  0382  0870               	movf	___awdiv@divisor,w
  2646  0383  0272               	subwf	___awdiv@dividend,w
  2647  0384                     u435:
  2648  0384  1C03               	skipc
  2649  0385  2B87               	goto	u431
  2650  0386  2B88               	goto	u430
  2651  0387                     u431:
  2652  0387  2B8D               	goto	l1250
  2653  0388                     u430:
  2654  0388                     l1246:
  2655  0388  0870               	movf	___awdiv@divisor,w
  2656  0389  02F2               	subwf	___awdiv@dividend,f
  2657  038A  0871               	movf	___awdiv@divisor+1,w
  2658  038B  3BF3               	subwfb	___awdiv@dividend+1,f
  2659  038C                     l1248:
  2660  038C  1477               	bsf	___awdiv@quotient,0
  2661  038D                     l1250:
  2662  038D  3001               	movlw	1
  2663  038E                     u445:
  2664  038E  36F1               	lsrf	___awdiv@divisor+1,f
  2665  038F  0CF0               	rrf	___awdiv@divisor,f
  2666  0390  0B89               	decfsz	9,f
  2667  0391  2B8E               	goto	u445
  2668  0392                     l1252:
  2669  0392  3001               	movlw	1
  2670  0393  02F5               	subwf	___awdiv@counter,f
  2671  0394  1D03               	btfss	3,2
  2672  0395  2B97               	goto	u451
  2673  0396  2B98               	goto	u450
  2674  0397                     u451:
  2675  0397  2B79               	goto	l1244
  2676  0398                     u450:
  2677  0398                     l1254:
  2678  0398  0876               	movf	___awdiv@sign,w
  2679  0399  1903               	btfsc	3,2
  2680  039A  2B9C               	goto	u461
  2681  039B  2B9D               	goto	u460
  2682  039C                     u461:
  2683  039C  2BA2               	goto	l1258
  2684  039D                     u460:
  2685  039D                     l1256:
  2686  039D  09F7               	comf	___awdiv@quotient,f
  2687  039E  09F8               	comf	___awdiv@quotient+1,f
  2688  039F  0AF7               	incf	___awdiv@quotient,f
  2689  03A0  1903               	skipnz
  2690  03A1  0AF8               	incf	___awdiv@quotient+1,f
  2691  03A2                     l1258:
  2692  03A2  0878               	movf	___awdiv@quotient+1,w
  2693  03A3  00F1               	movwf	?___awdiv+1
  2694  03A4  0877               	movf	___awdiv@quotient,w
  2695  03A5  00F0               	movwf	?___awdiv
  2696  03A6                     l325:
  2697  03A6  0008               	return
  2698  03A7                     __end_of___awdiv:
  2699  007E                     btemp	set	126	;btemp
  2700  007E                     wtemp0	set	126
  2701                           
  2702                           	psect	idloc
  2703                           
  2704                           ;Config register IDLOC0 @ 0x8000
  2705                           ;	unspecified, using default values
  2706  8000                     	org	32768
  2707  8000  3FFF               	dw	16383
  2708                           
  2709                           ;Config register IDLOC1 @ 0x8001
  2710                           ;	unspecified, using default values
  2711  8001                     	org	32769
  2712  8001  3FFF               	dw	16383
  2713                           
  2714                           ;Config register IDLOC2 @ 0x8002
  2715                           ;	unspecified, using default values
  2716  8002                     	org	32770
  2717  8002  3FFF               	dw	16383
  2718                           
  2719                           ;Config register IDLOC3 @ 0x8003
  2720                           ;	unspecified, using default values
  2721  8003                     	org	32771
  2722  8003  3FFF               	dw	16383
  2723                           
  2724                           	psect	config
  2725                           
  2726                           ;Config register CONFIG1 @ 0x8007
  2727                           ;	Oscillator Selection Bits
  2728                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2729                           ;	Watchdog Timer Enable
  2730                           ;	WDTE = OFF, WDT disabled
  2731                           ;	Power-up Timer Enable
  2732                           ;	PWRTE = OFF, PWRT disabled
  2733                           ;	MCLR Pin Function Select
  2734                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  2735                           ;	Flash Program Memory Code Protection
  2736                           ;	CP = OFF, Program memory code protection is disabled
  2737                           ;	Brown-out Reset Enable
  2738                           ;	BOREN = OFF, Brown-out Reset disabled
  2739                           ;	Clock Out Enable
  2740                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2741                           ;	Internal/External Switchover Mode
  2742                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  2743                           ;	Fail-Safe Clock Monitor Enable
  2744                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2745  8007                     	org	32775
  2746  8007  09A4               	dw	2468
  2747                           
  2748                           ;Config register CONFIG2 @ 0x8008
  2749                           ;	Flash Memory Self-Write Protection
  2750                           ;	WRT = OFF, Write protection off
  2751                           ;	Stack Overflow/Underflow Reset Enable
  2752                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  2753                           ;	Brown-out Reset Voltage Selection
  2754                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2755                           ;	Low-Power Brown Out Reset
  2756                           ;	LPBOR = OFF, Low-Power BOR is disabled
  2757                           ;	Low-Voltage Programming Enable
  2758                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2759  8008                     	org	32776
  2760  8008  1DFF               	dw	7679

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      23
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sec_countdown
    _stop_counting->_num_state_C4
    _num_state_C4->___awdiv
    _num_state_C1->_pulse_gen_C0

Critical Paths under _main in BANK0

    _main->_sec_countdown
    _sec_countdown->_stop_counting

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   34204
                                             10 BANK0     13    13      0
                            ___awdiv
                            ___awmod
                       _latch_gen_C2
                       _latch_gen_C5
                       _num_state_C1
                       _num_state_C4
                       _pulse_gen_C0
                       _pulse_gen_C3
                      _sec_countdown
 ---------------------------------------------------------------------------------
 (1) _sec_countdown                                        7     5      2   20175
                                             11 COMMON     3     1      2
                                              6 BANK0      4     4      0
                       _latch_gen_C2
                       _num_state_C1
                       _pulse_gen_C0
                      _stop_counting
 ---------------------------------------------------------------------------------
 (2) _stop_counting                                        6     0      6   14136
                                              0 BANK0      6     0      6
                            ___awdiv
                            ___awmod
                       _latch_gen_C2
                       _latch_gen_C5
                       _num_state_C1
                       _num_state_C4
                       _pulse_gen_C0
                       _pulse_gen_C3
 ---------------------------------------------------------------------------------
 (3) _num_state_C4                                         2     0      2    3336
                                              9 COMMON     2     0      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                       _pulse_gen_C3
 ---------------------------------------------------------------------------------
 (3) _pulse_gen_C3                                         7     5      2    2706
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (3) _num_state_C1                                         2     0      2    3108
                                              7 COMMON     2     0      2
                       _pulse_gen_C0
 ---------------------------------------------------------------------------------
 (3) _pulse_gen_C0                                         7     5      2    2630
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (3) _latch_gen_C5                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latch_gen_C2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     904
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _latch_gen_C2
   _latch_gen_C5
   _num_state_C1
     _pulse_gen_C0
   _num_state_C4
     ___awdiv (ARG)
     ___awmod (ARG)
     _pulse_gen_C3 (ARG)
   _pulse_gen_C0
   _pulse_gen_C3
   _sec_countdown
     _latch_gen_C2
     _num_state_C1
     _pulse_gen_C0
     _stop_counting
       ___awdiv
       ___awmod
       _latch_gen_C2
       _latch_gen_C5
       _num_state_C1
       _num_state_C4
       _pulse_gen_C0
       _pulse_gen_C3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     17      17       6       28.7%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 10 10:57:56 2022

                       l24 026A                         l40 04E4                         l41 0500  
                       l33 0418                         l26 0285                         l42 0513  
                       l43 051D                         l35 042B                         l36 0447  
                       l44 055B                         l29 0262                         l37 0475  
                       l53 0416                         l62 0266                         l38 0491  
                       l70 05BA                         l39 04B6                         l71 05D6  
                       l72 05FB                         l57 0289                         l73 0629  
                       l74 0645                         l66 055D                         l59 02A4  
                       l75 0658                         l83 02F4                         l76 0662  
                       l68 0570                         l69 058C                         l77 06A0  
             ___awdiv@sign 0076                        l325 03A6                        l338 0347  
                      u410 0379                        u411 0378                        u405 036D  
                      u430 0388                        u510 0320                        u350 0285  
                      u431 0387                        u511 031F                        u351 0284  
                      u520 032A                        u360 02A4                        u600 06D4  
                      u425 037A                        u521 0329                        u505 0314  
                      u361 02A3                        u601 06D3                        u450 0398  
                      u370 034D                        u610 06E0                        u451 0397  
                      u435 0384                        u371 034C                        u355 0281  
                      u611 06DF                        u460 039D                        u380 0358  
                      u540 0339                        u620 06ED                        u461 039C  
                      u445 038E                        u381 0357                        u541 0338  
                      u525 0326                        u365 02A0                        u621 06EC  
                      u390 0369                        u550 033E                        u470 02FA  
                      u630 06F9                        u391 0368                        u551 033D  
                      u535 032F                        u471 02F9                        u631 06F8  
                      u480 0305                        u560 02F4                        u640 06FF  
                      u481 0304                        u561 02F3                        u641 06FE  
                      u490 0310                        u570 040A                        u650 070E  
                      u491 030F                        u571 0409                        u651 070D  
                      u707 06CB                        u580 0416                        u660 078E  
                      u581 0415                        u661 078D                        u717 06E4  
                      u670 079F                        u590 06C7                        u727 03DD  
                      u671 079E                        u655 070A                        u591 06C6  
                      u680 07A4                        u737 03E5                        u681 07A3  
                      u747 03FC                        u675 079B                        u697 06A5  
             _pulse_gen_C0 0267               _pulse_gen_C3 0286               ___awmod@sign 0076  
                      wreg 0009                       l1100 047E                       l1110 04AC  
                     l1102 0487                       l1120 04DA                       l1112 04B8  
                     l1104 0493                       l1200 0647                       l1130 0509  
                     l1122 04E6                       l1114 04BF                       l1106 049A  
                     l1210 0674                       l1202 064E                       l1220 0349  
                     l1132 0515                       l1124 04ED                       l1116 04C8  
                     l1108 04A3                       l1140 0539                       l1204 065A  
                     l1212 067E                       l1300 02A5                       l1230 035D  
                     l1222 034D                       l1062 0267                       l1134 051F  
                     l1126 04F6                       l1118 04D1                       l1070 028C  
                     l1206 0664                       l1150 055F                       l1310 02D5  
                     l1302 02A6                       l1240 0371                       l1232 0361  
                     l1224 0352                       l1064 026D                       l1136 0526  
                     l1128 0502                       l1080 0421                       l1072 0290  
                     l1208 066B                       l1160 058E                       l1152 0566  
                     l1312 02DD                       l1304 02B8                       l1320 03B1  
                     l1400 0700                       l1250 038D                       l1242 0375  
                     l1234 0363                       l1226 0354                       l1218 0348  
                     l1074 025F                       l1146 0263                       l1066 0271  
                     l1138 052F                       l1090 0450                       l1082 042D  
                     l1170 05BC                       l1162 0595                       l1154 0572  
                     l1314 02E4                       l1306 02BF                       l1330 03DA  
                     l1322 03B8                       l1410 0743                       l1402 070E  
                     l1252 0392                       l1244 0379                       l1236 0369  
                     l1228 0358                       l1092 0459                       l1084 0434  
                     l1076 0417                       l1068 0286                       l1180 05E8  
                     l1172 05C3                       l1164 059E                       l1156 0579  
                     l1148 055C                       l1308 02D2                       l1316 02EF  
                     l1332 03E2                       l1324 03BF                       l1340 0412  
                     l1420 077E                       l1412 074B                       l1404 0713  
                     l1246 0388                       l1238 036C                       l1254 0398  
                     l1270 0301                       l1262 02F5                       l1094 0462  
                     l1086 043D                       l1078 041A                       l1190 0616  
                     l1182 05F1                       l1174 05CC                       l1166 05A7  
                     l1158 0582                       l1334 03E9                       l1326 03C7  
                     l1318 03A7                       l1430 079F                       l1422 0786  
                     l1414 0750                       l1406 0726                       l1350 06AF  
                     l1342 06A1                       l1256 039D                       l1248 038C  
                     l1280 0318                       l1272 0305                       l1264 02F6  
                     l1096 046B                       l1088 0449                       l1192 061F  
                     l1184 05FD                       l1176 05D8                       l1168 05B0  
                     l1336 0406                       l1328 03CA                       l1440 07CE  
                     l1432 07A4                       l1416 0760                       l1408 072D  
                     l1424 0789                       l1360 06B6                       l1352 06B1  
                     l1344 06AA                       l1258 03A2                       l1290 0333  
                     l1282 031C                       l1274 030A                       l1266 02FA  
                     l1098 0477                       l1194 062B                       l1186 0604  
                     l1178 05DF                       l1338 040A                       l1450 07EF  
                     l1442 07D5                       l1434 07A7                       l1426 078E  
                     l1418 0770                       l1370 06BE                       l1362 06B7  
                     l1354 06B2                       l1346 06AC                       l1284 0320  
                     l1276 0310                       l1292 0339                       l1268 02FF  
                     l1196 0632                       l1188 060D                       l1452 07F7  
                     l1444 07DD                       l1436 07B7                       l1428 0792  
                     l1380 06C7                       l1372 06BE                       l1364 06B8  
                     l1356 06B3                       l1348 06AE                       l1294 033E  
                     l1286 032A                       l1278 0313                       l1198 063B  
                     l1446 07E0                       l1438 07C7                       l1390 06E8  
                     l1382 06CF                       l1374 06BE                       l1366 06B9  
                     l1358 06B4                       l1296 0343                       l1288 032E  
                     l1448 07E8                       l1392 06ED                       l1384 06D4  
                     l1376 06C0                       l1368 06BC                       l1394 06F5  
                     l1386 06DC                       l1378 06C2                       l1396 06F9  
                     l1388 06E0                       l1494 0683                       l1496 053E  
                     _main 06A1                       btemp 007E                       start 0002  
        num_state_C1@digit 0077     sec_countdown@min_value 007B                      ?_main 0070  
          __end_of___awdiv 03A7            __end_of___awmod 0348            ___awdiv@divisor 0070  
            ?_latch_gen_C2 0070              ?_latch_gen_C5 0070            ___awdiv@counter 0075  
                    _TRISC 008E               main@temp_val 002F     stop_counting@min_value 0020  
                    status 0003                      wtemp0 007E            __initialization 07FD  
             __end_of_main 07FD                     ??_main 002A             ??_latch_gen_C2 0070  
           ??_latch_gen_C5 0070           ___awdiv@dividend 0072                     _ANSELB 018D  
                   _ANSELC 018E                  ??___awdiv 0074                  ??___awmod 0074  
         ___awdiv@quotient 0077            ___awmod@divisor 0070            ___awmod@counter 0075  
  stop_counting@sec_digit1 0022    stop_counting@sec_digit2 0024    __end_of__initialization 07FD  
            _stop_counting 02A5             __pcstackCOMMON 0070  sec_countdown@sec_counter1 0026  
sec_countdown@sec_counter2 0028             _OPTION_REGbits 0095             ?_stop_counting 0020  
     __end_of_latch_gen_C2 0263       __end_of_latch_gen_C5 0267                 __pmaintext 06A1  
      num_state_C4@digit_1 0079              pulse_gen_C0@i 0075              pulse_gen_C0@n 0070  
                  ___awdiv 0348                    ___awmod 02F5                    __ptext1 03A7  
                  __ptext2 02A5                    __ptext3 055C                    __ptext4 0286  
                  __ptext5 0417                    __ptext6 0267                    __ptext7 0263  
                  __ptext8 025F                    __ptext9 02F5           ___awmod@dividend 0072  
     end_of_initialization 07FD            ??_stop_counting 007B              _sec_countdown 03A7  
            ?_num_state_C1 0077              ?_num_state_C4 0079                  _PORTBbits 000D  
          pulse_gen_C3@i_1 0075                  _TRISBbits 008D            pulse_gen_C3@n_1 0070  
           ?_sec_countdown 007B             ??_num_state_C1 0079             ??_num_state_C4 007B  
            ?_pulse_gen_C0 0070              ?_pulse_gen_C3 0070               _latch_gen_C2 025F  
             _latch_gen_C5 0263        start_initialization 07FD             ??_pulse_gen_C0 0072  
           ??_pulse_gen_C3 0072                  ___latbits 0002              __pcstackBANK0 0020  
          ??_sec_countdown 007D                   ?___awdiv 0070                   ?___awmod 0070  
     __end_of_num_state_C1 055C       __end_of_num_state_C4 06A1                   _LATCbits 010E  
                 _WPUBbits 020D                  main@count 0035            main@min_digit_1 0031  
          main@min_digit_2 0033      __end_of_stop_counting 02F5            main@sec_digit_1 002B  
          main@sec_digit_2 002D       __end_of_pulse_gen_C0 0286       __end_of_pulse_gen_C3 02A5  
                 __ptext10 0348               _num_state_C1 0417               _num_state_C4 055C  
    __end_of_sec_countdown 0417  
